<% content_for(:html_title, "Cameras") %>
<div class="camera-grid">
  <% @traffic_cameras.each do |camera| %>
    <%= link_to traffic_camera_path(camera), class: "camera-item" do %>
      <%= image_tag camera.current_image_url, class: "img-fluid", id: "camera-#{camera.id}", style: "border: 2px solid black;" %>
    <% end %>
  <% end %>
      <script>
        function updateCameraImage(cameraId) {
          const cameraImage = document.getElementById(`camera-${cameraId}`);
          if (cameraImage) {
            const baseUrl = cameraImage.src.split('?')[0];
            const newUrl = `${baseUrl}?id=${cameraId}&timems=${Date.now()}`;
            cameraImage.src = newUrl;
            const period = 60000; // 60 seconds in milliseconds
            const time = Date.now() % period;
            let color;
            if (time < period * 0.8) {
              const hue = (time / (period * 0.8)) * 360; // hue value in degrees
              color = `hsl(${hue}, 100%, 50%)`;
            } else if (time < period * 0.9) {
              const transition = (time - period * 0.8) / (period * 0.1);
              const grayValue = Math.floor(transition * 255);
              color = `rgb(${grayValue}, ${grayValue}, ${grayValue})`;
            } else {
              const transition = (time - period * 0.9) / (period * 0.1);
              const grayValue = 255 - Math.floor(transition * 255);
              color = `rgb(${grayValue}, ${grayValue}, ${grayValue})`;
            }
            cameraImage.style.border = `2px solid ${color}`;
          }
        }

      let currentCameraIndex = 0;
      const cameraIds = <%= @traffic_cameras.map(&:id).to_json %>;
        
      function updateAllCameras() {
        console.log(`updateAllCameras: ${currentCameraIndex}`);
        while (true) {
          const cameraImage = document.getElementById(`camera-${cameraIds[currentCameraIndex]}`);
          console.log(`checking: ${currentCameraIndex}`);
          if (cameraImage && cameraImage.getBoundingClientRect().top < window.innerHeight && cameraImage.getBoundingClientRect().bottom >= 0) {
            break;
          }
          currentCameraIndex = (currentCameraIndex + 1) % cameraIds.length;
        }
        updateCameraImage(cameraIds[currentCameraIndex]);
        currentCameraIndex = (currentCameraIndex + 1) % cameraIds.length;
        
      }

      setInterval(updateAllCameras, 200);
      console.log("loaded!")

      </script>
</div>

<hr/>
<ul>
<% @traffic_cameras.each do |camera| %>
<li><%= link_to camera.name, traffic_camera_path(camera) %></li>
<% end %>
</ul>
