---
http_interactions:
- request:
    method: get
    uri: https://pub-ottawa.escribemeetings.com/Meeting.aspx?Agenda=Agenda&Id=128fff38-faa9-4b07-a8cc-e13e88688f9d&lang=English
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - pub-ottawa.escribemeetings.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Server:
      - Microsoft-IIS/10.0
      Set-Cookie:
      - ASP.NET_SessionId=qvkxna25zbaug1hjeaogvhcv; path=/; HttpOnly; SameSite=Lax
      Strict-Transport-Security:
      - max-age=31536000
      Date:
      - Fri, 31 Jan 2025 02:28:19 GMT
      Content-Length:
      - '166284'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>




<html lang="en">
<head><meta charset="utf-8" /><meta http-equiv="X-UA-Compatible" content="IE=edge;chrome=1" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><title>
	Planning Committee - September 08, 2022
</title><script src="/bundles/modernizr?v=inCVuEFe6J4Q07A0AcRsbJic_UE5MwpRMNGcOtk94TE1"></script>
<script src="/bundles/jquery?v=8Oos0avDZyPg-cbyVzvkIfERIE1DGSe3sRQdCSYrgEQ1"></script>
<script src="/bundles/Meeting?v=vzF-9MbkbXiinMWgrvzK7C29wf8pirXICHRNY8VkMX01"></script>

        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <link href="/Content/css?v=qzDQfe_MaYWq9JDfD-bbLqBUQ47pEKk1u5XXgwMwxg01" rel="stylesheet"/>
<link rel='stylesheet' type='text/css' href='./FileStream.ashx?DocumentId=94240'><link rel="stylesheet" href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css" /><link rel="stylesheet" href="Content/Customizations.css" /><link rel="stylesheet" href="Content/Meeting.css" /><link href="Content/CalenderViewStyle-updated.css" rel="stylesheet" /><link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" type="text/css" /><link href="favicon.ico" rel="shortcut icon" type="image/x-icon" />

    <!-- This file must exist, otherwise we'll get server side error -->
    <!-- Ottawa Siteimprove Analytics --> 


<script async src="https://siteimproveanalytics.com/js/siteanalyze_876116.js"></script>

<!-- eSCRIBE Global site tag (gtag.js) - Google Analytics --> 

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-178411397-49"></script> 

<script> 

  window.dataLayer = window.dataLayer || []; 

  function gtag(){dataLayer.push(arguments);} 

  gtag('js', new Date()); 

  

  gtag('config', 'UA-178411397-49'); 

</script> 

    <style type="text/css">

        body {
            color: #000000;
        }

        a, A:link, A:visited {
            color: #0059B8;
        }

        .comment-link {
            display: inline-block;
            vertical-align: top;
        }

        .comment-link:hover {
            text-decoration: underline;
        }

        .embed-responsive {
            position: relative;
            display: block;
            width: 100%;
            padding: 0;
            overflow: hidden;
        }

            .embed-responsive::before {
                display: block;
                content: "";
            }

            .embed-responsive .embed-responsive-item, .embed-responsive iframe, .embed-responsive embed, .embed-responsive object, .embed-responsive video {
                /*position: absolute;*/
                top: 0;
                bottom: 0;
                left: 0;
                width: 100%;
                height: 100%;
                border: 0;
            }

        .embed-responsive-21by9::before {
            padding-top: 42.857143%;
        }

        .embed-responsive-16by9::before {
            padding-top: 56.25%;
        }

        .embed-responsive-4by3::before {
            padding-top: 75%;
        }

        .embed-responsive-1by1::before {
            padding-top: 100%;
        }


        html, body, form {
            height: 100%;
            overflow: hidden;
        }

        #Agendadropdownmenu.dropdown-menu {
            right: 0px;
            left: 0px;
        }

        .FontIncrease * {
            font-size: 1em;
            font-weight: bold;
            cursor: pointer;
        }

        .FontDecrease * {
            font-size: 0.85em;
            font-weight: bold;
            cursor: pointer;
        }

        .panel {
            margin-bottom: 22px;
            background-color: #fff;
            border: 1px solid transparent;
            border-radius: 4px;
            -webkit-box-shadow: 0 1px 1px rgba(0,0,0,.05);
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .panel-default {
            border-color: #ddd;
        }

        .panel-heading {
            padding: 10px 15px;
            border-bottom: 1px solid transparent;
            border-top-right-radius: 3px;
            border-top-left-radius: 3px;
        }

        .panel-default > .panel-heading {
            color: #000;
            background-color: #f5f5f5;
            border-color: #ddd;
        }

        .panel-body {
            padding: 15px;
        }

        /*ul.navbar-nav > li {
                display:inline-block;
            }

            .navbar-nav > li > a {
                padding-top:5px !important; padding-bottom:5px !important;
            }
            .navbar {
                min-height:32px !important
            }
            .navbar-toggle {
                margin-top:4px;
                margin-bottom:4px;
                padding-top:4px;
                padding-bottom:4px;
            }

            .affix { 
                right:0px;
                top:32px;
            }

            .affix-top {
                right:0px;
                position:fixed;
                top:32px;
            }*/

        .Details > div {
            padding-right: 0px !important;
            margin-right: 2%;
        }

        a.dropdown-toggle:focus {
            outline: solid 1px #FFFFFF;
        }

        #lnkPoweredBy:focus {
            outline: solid 1px #FFFFFF;
            padding: 4px;
        }

        /*@media (max-height: 760px) {
                .navbar-fixed-bottom {
                    display:none;
                }
            }
            @media (min-height: 760px) {
                body {
                    padding-bottom: 32px;
                }
            }
            
            @media (max-width: 600px) {
                 .AgendaItemContainer > .AgendaItemContainer {
                    margin-left:4em !important;
                }
            }*/

        @media (max-width: 500px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 2em !important;
            }
        }

        @media (max-width: 400px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 1em !important;
            }
        }

        @media (max-width: 300px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 0em !important;
            }
        }

        @media (min-width:768px) and (max-width:991px) {
            .AgendaItemSelectedDetails {display: none !important; }

            .visible-sm.sharing.SocialIcons {
                display: inline-block !important;
                float: none !important;
            }

            .AgendaItemTitleRow.hilighted {
                display: block !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemIcons,
            .AgendaItemTitleRow.hilighted > .AgendaItemIcons{
                display: none !important;
            }


            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle.hasPublicCommentButton {
                margin-right: 135px;
                width: auto !important;
            }
        }

        /*.AgendaItemIcons {
            width: 22% !important;
        }*/

        .visible-xs visible-sm sharing SocialIcons {
            width: 10%;
            padding-top: 5px;
            float: right;
        }

        @media (max-width: 767px) {
            .visible-xs.sharing.SocialIcons {
                display: inline-block !important;
                float: none !important;
            }

            .AgendaItemTitleRow.hilighted {
                display: block !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemIcons,
            .AgendaItemTitleRow.hilighted > .AgendaItemIcons {
                display: none !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle.hasPublicCommentButton {
                margin-right: 65px;
                width: auto !important;
            }
        }

        @media only screen and (device-width: 768px) {

            .navbar-nav .dropdown-menu {
                margin-top: -5px !important;
            }

            .dropdown, .dropleft, .dropright, .dropup {
                width: fit-content !important;
            }

            .collapse:not(.show) {
                display: block !important;
            }

            .navbar-light .navbar-toggler {
                float: right;
                border-color: #ddd !important;
                display: none !important;
            }

            .navbar-nav .dropdown-menu {
                position: absolute !important;
            }
        }

        .visible-xs.visible-sm.sharing.SocialIcons {
            /*width: 10%;
            padding-top: 5px;
            float: right;
            position: absolute;
            right: -8px;
            margin-top: -22px;*/
            position: absolute;
            right: 10px;
            margin: 0;
            position: absolute;
            top: 50%;
            -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        }

            .visible-xs.visible-sm.sharing.SocialIcons > * > span.btn.btn-primary.btn-sm {
                padding: 0px 5px 0px 5px;
            }

            .visible-xs.visible-sm.sharing.SocialIcons,
            .visible-xs.visible-sm.sharing.SocialIcons > *,
            .visible-xs.visible-sm.sharing.SocialIcons > * > span {
                font-size: 12px !important;
                font-weight: normal !important;
            }

        .SocialIcons {
            float: right;
        }


        .poweredBy, .poweredBy a {
            color: white !important;
        }

        @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation : portrait) {
            .visible-xs.visible-sm.sharing.SocialIcons
            {
                right: -8px !important;
                padding-top: 4px !important;
            }
        }

        @media screen and (device-width: 280px) and (device-height: 653px) {
            .visible-xs.visible-sm.sharing.SocialIcons
            {
                position: unset;
                right: unset;
                margin: unset;
                top: unset;
                -ms-transform: unset;
                transform: unset;
            }
            }

        .packageNav {
            position: absolute !important;
        }

    </style>
</head>
<body style="background-color: #e5e5e5">
    <form name="form1" method="post" action="./Meeting.aspx?Id=128fff38-faa9-4b07-a8cc-e13e88688f9d&amp;Agenda=Agenda&amp;lang=English" id="form1">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="PKdoZ1xaA7t/uUvmVJqxP0fKbeLMGoyTIwk162JXZVRLtWKiey/v9+N0kcQ9KS6O8mPSgkYyo286IxrPDZ/aINJHFNJJ6QI83UebyeQKd3NG9c4PCI/pRzDkuUnPJwtnB/ILepMU+NgvEcWJrWEqzTAy10PfR4TkrOUroTc7q0gQ4DdiE93HUEI5mjKy2kSNcPg56OvXYTDKWwEb2g1hQ9P9c8f0VCok6opjlCpxJP5foo6uUIVWm6AypuxJa5nZ2sZpWyWoxJiPiF0Kd8nz5b/O+pVwI34CtSx6v04SB87Leknw5+narbzBoVrJP96uW7dg896XXMYrTVqNQPC3Ab/eFeRcz70GievbiX9Ro0cIFVfIBs7koHCiDzpgSKJEC4xWsDVPvzFlgo4c9MWnD1yjnTbYDgSp9Gzd0Hk2Lw5aVhCa18Mxh/WiG3bJnVR4Gd0diOLLl24PYnzrT9QJKJ2I0dauiZqIxUO6dNV0mX1jbC2i0tmQLgQJjc/ZeMtAZjtyHXEe+taxIylAoAbWT4Fp0PJy2Ahp7fsDU227EDTZNA0wHwpudDF74dcyw/9OMacr5ICVlsZ1I4ZaKHz8dJyFq29dDhX242mK/9LMPvbgrtZ0duFvltjuxrd+4aXEzbaAKW7tc4vwo7hhg5+/UCqSxqnRP59RcUwU/iSK66OwdtyzpzuS9jrwsfMvwk8TEhaJeYPe7MsBiac+xfQMlw/ch4d/ggKg8dsDSB1k4wmfPYfvCEdg/klcnGWXQDZY0qrat9/xO5vAHgYMzBQXOnwjgBuhhRUBRyLPfuakku5693VzXusSjywvEof8anFaxzwVtaGwsK3Df/B53I/PMhfl9dHaKSjfOgDW721OGXoTs1KKz2wvWSVkUX5H60xOoMmrpzZnwFYF9eUjJwpvF/WEacUB122OymZPUyMLe//CvqwhX17XAo1GQ2eQU1RGz9Y7E6zwArRskqrUnSWE6OR6niyoujTq+2YQeTB24UL7dyATapiQhbIbpESSzJpkPnkkoF7ur7+vSjosIu2XlH4kUFiguPNTLjWgy8Kb8T5cr2rxXcSqFjQJHQRerChtN+ccm2zlRMfA421XmQWBNUjm9DljXXjO9RVuE+DRm9I=" />


<script src="/bundles/MsAjaxJs?v=D6VN0fHlwFSIWjbVzi6mZyE9Ls-4LNrSSYVGRU46XF81" type="text/javascript"></script>
<script src="Scripts/bootstrap.min.js" type="text/javascript"></script>
<script src="Scripts/respond.min.js" type="text/javascript"></script>
<script src="/bundles/WebFormsJs?v=N8tymL9KraMLGAMFuPycfH3pXe6uUlRXdhtYv8A_jUU1" type="text/javascript"></script>
<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="4936DBB7" />
<input type="hidden" name="__VIEWSTATEENCRYPTED" id="__VIEWSTATEENCRYPTED" value="" />
        

        <script type="text/javascript">
            function iframeLoaded(iframeHeight) {
                var windowHeight = $(window).height();

                if (iframeHeight > windowHeight) {
                    var newHeight = (windowHeight - 185) + "px";
                    $('#bootstrapModalBody').height(newHeight);
                    $('#modalIframeDiv').height(newHeight);

                    return $('#modalIframeDiv').height() - 85;
                }
                else {
                    var newHeight = iframeHeight + "px";
                    $('#bootstrapModalBody').height(newHeight);
                    $('#modalIframeDiv').height(newHeight);
                    return "0";
                }
            }

            $(document).keydown(function(event) { 
                if (event.keyCode == 27) { 
                    closeBootstrapModal();
                    $(".CommentIcon").focus();
                }
            });

            function closeBootstrapModal() {
                $('#bootstrapModal').modal('hide').attr('aria-hidden', 'true'); 
            }

            $(window).resize(function(){
                var windowWidth = $(window).width();
                var standardHeight = $('.SelectedItemCounter').height();
                var titleHeight = $('.SelectedItemTitle').height();

                //if (Window_OnResize) {
                //    Window_OnResize();
                //}

                if(titleHeight > standardHeight) {
                    $('.panel-heading.clearfix >.sharing.SocialIcons > a.CommentIcon > span').css("margin-top", "4px");
                }

                //Replace the Leave Comment button to icon
                $('#narrow-leave-comment-button').html("<span class='las la-comment-alt' style='vertical-align: middle' title='Leave Comment'></span>");

                if(windowWidth <= 539){
                    $(".Agenda").css("padding-top", $(".affix-top").height()+5);
                } else {
                    $(".Agenda").css("padding-top", "18px");
                }
            });

            function CheckiOSDevice() {
                var userAgent = window.navigator.userAgent;
                if (userAgent.match(/iPad/i) || userAgent.match(/iPhone/i)) {
                    // iPad or iPhone
                    document.body.style.removeProperty("overflow");  
                    // console.log("checkIOSDevice called");
                }                                 
            }

            $(document).ready(
                function () {
                    var url = window.location.href;
                    if(url.indexOf("pub-ottawa") != -1 || url.indexOf("pub-support") != -1) {
                        $('.AgendaHeaderDetailsTable').find('.Label:contains("Période:")').text('Date :');
                        $('.AgendaHeaderDetailsTable').find('.Label:contains("Lieu:")').text('Endroit :');
                    }

                    $(".Details").addClass("d-sm-block");
                    $(".Details").attr("aria-live", "polite");
                    $(".panel-heading").prepend("<span class='visuallyhidden'>Agenda item details popup</span>");
                    $(".affix-top").append("<div class='collapse-stream'><i class='las la-video open-player'></i></div>");

                    $(".collapse-stream").on("click", function(i,v){
                        if($(".VideoPlayerContainer").css("display") == "none"){
                            $(".VideoPlayerContainer").show();
                            $(".la-video").addClass("open-player");
                            $(".Agenda").css("padding-top", $(".affix-top").height()+5);
                        } else {
                            $f().pause();
                            $(".la-video").removeClass("open-player");
                            $(".VideoPlayerContainer").hide();
                            $(".Agenda").css("padding-top", "18px");
                        } 
                    });
                    $('.VideoPlayer').append($('#VideoPlayerControl').detach());

                    if($(window).width() <= 539){
                        $(".Agenda").css("padding-top", $(".affix-top").height()*1.05);
                    }
                    
                    // ensure minutes show if the meeting starts or ends partially through an hour //
                    $(".Time > .Minutes").each(
                        function (index, element) {
                            if ($(element).text() != ":00") {
                                $(element).show();
                            }
                        }
                    );

                    $("[data-toggle='tooltip']").tooltip({placement:'top', boundary: 'window', trigger : 'hover'});

                    //Add/Remove public comment icons for each agenda item (real time)
                    var agendaItem = $('.AgendaItem');

                    for(var i = 0; i < agendaItem.length; i++) {
                        var className =agendaItem[i].className.match(/AgendaItem\d+/);
                        if(className) {
                            var id = className[0].replace("AgendaItem", "");
                            if(id){
                                LoadPublicCommentIcons(id);
                            }
                        }
                            
                    }                                                        
                    CheckiOSDevice();
                    var selectedTab = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Tab").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    SelectItem(getParameterByName("Item") || ((window.location.hash || "").replace(/#/g, '')), true, selectedTab);
                
                    
                    $("#package-container").on("scroll", function(){
                        if ($("#package-container").scrollTop() >= 48){
                            $(".affix-top").css("top", "5px");
                        } else {
                            $(".affix-top").css("top", "48px");
                        }
                    });

                    $("[tabindex]").filter(function() {
                        if ($(this).attr("tabindex") > 0){ $(this).attr("tabindex", "0")}
                    });
                    
                    $(".AgendaItemTitle").on("click", function() {
                        tabIndexLoop(document.querySelector(".AgendaItemSelectedDetailsContainer"));
                        var modalContainer = document.querySelector(".Details");
                        var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                        var focusableElements = modalContainer.querySelectorAll(focusableElementsString);

                        focusableElements = Array.prototype.slice.call(focusableElements);
                        if (focusableElements.length > 0){
                            focusableElements[0].focus();
                        }
                    });

                    $(".AgendaItemContainer").each(function(i,v){
                        var commentIcon = $(v).find(".AgendaItemIcons").find(".la-comment-alt");
                        if(commentIcon.length > 0){
                            commentIcon.append("<span class='sr-only'>Public Comments:</span>");
                        }
                    });


                }
                
                
            );

            
            function setVideoPlayerFocus(container) {
                return new Promise((resolve, reject) => {
                    if(container) {
                        resolve("Video Container found");
                    }
                    else{
                        reject("Video Container not found.");
                    }
                })
				.then(data => {
				    tabIndexLoopVideo(container);
				})
				.catch(error => {
				    console.log("An error occurred when setting focus on video container:", error);
				});
            }
			
            function tabIndexLoopVideo(container) {
                container.addEventListener("keydown", trapTabKey);
                function trapTabKey(e) {
                    if (e.keyCode === 9) {
                        if (e.shiftKey) {
                            $('.hilighted .AgendaItemTitle a').focus();
                            $('.hilighted a.SelectableItem').focus();
                        }
                        else {
                            tabIndexLoop(document.querySelector(".AgendaItemSelectedDetailsContainer"));
                        }						
                    }
                }
                var player = $('.fp-play');
                if(player) {
                    player.attr('tabindex', 0);
                    player.focus();
                }
            }
                                                
            function SelectItem(id, scroll, tab) {
                if(tab === undefined) {
                    tab = 'attachments'
                }

                //The function under eScribe.Agenda only take two parameter. In order to make the icon link works, I have to do a work around for this (reuse the scroll parameter).
                //This should not affect the original functionality of the scroll.
                if(scroll == 'attachments' || scroll == 'comments') {
                    tab = scroll;
                    scroll = false;
                }

                // update url //
                window.history.pushState('', '', UpdateQuery("Item", id.toString()));                    
                window.history.pushState('', '', UpdateQuery("Tab", tab));

                var videoContainer = document.querySelector(".VideoPlayerContainer");
                setVideoPlayerFocus(videoContainer);

                //Update the Citizen Comment using ajax.
                LoadPublicComment(id, scroll);

                if(document.readyState === 'complete' ) {
                    LoadPublicCommentIcons(id);
                }

                //// trigger event //
                //$(document).trigger("item:selected", [id, scroll]);
            }

            function LoadPublicComment(id, scroll) {
                if(id) {
                    var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var language = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("lang").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var tabindex = $('#AgendaItemAgendaItem' + id + 'TitleHeader > .AgendaItemNavigate > .AgendaItemTitle > A').attr("tabindex");

                    $.ajax({
                        type: "POST",
                        url: "Meeting.aspx/GeneratePublicComment",
                        data: "{id: '" + id + "', meetingId: '" + meetingId + "', lang: '" + language + "', tabindex: '" + tabindex + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {

                            var items = document.getElementsByClassName('AgendaItemPublicComment' + id);
                            for(var i = items.length - 1; i >= 0 ; i--){
                                var child = items[i];
                                child.parentNode.removeChild(child);
                            }
                            $(msg.d).appendTo(".AgendaItemPublicCommentList");

                            if($('.AgendaItemPublicCommentListIndent' + id).children('.AgendaItemPublicCommentHeader').length == 0) {
                                $('<div class="AgendaItemAttachment AgendaItemPublicCommentHeader" style="display: block;"></div>').appendTo(".AgendaItemPublicCommentListIndent" + id);
                            }
                            $(msg.d).appendTo(".AgendaItemPublicCommentListIndent" + id);

                            // trigger event //
                            $(document).trigger("item:selected", [id, scroll]);
                                
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }
            }

            function LoadPublicCommentIcons(id) {
                if(id) {
                    var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var agendaItem = $('#AgendaItemAgendaItem' + id +'TitleHeader ' + '> .AgendaItemNavigate > ' + '.AgendaItemIcons');
                    if(agendaItem.length == 0) {
                        agendaItem = $('#AgendaItemAgendaItem' + id +'TitleHeader ').parent().find(".AgendaItemIcons");
                    }

                    var isExist = agendaItem.children('.las.la-comment-alt').length;
                    
                    $.ajax({
                        type: "POST",
                        url: "Meeting.aspx/GeneratePublicCommentIcon",
                        data: "{id: '" + id + "', meetingId: '" + meetingId + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {

                            if(msg.d) {
                                if(isExist == 0) {
                                    $(msg.d).appendTo(agendaItem);
                                }
                            }
                            else {
                                if(isExist > 0){
                                    agendaItem.children('.las.la-comment-alt').remove();
                                }
                            }

                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }
            }
                                                
            function UpdateQuery(parameter, value) {
                var loc = window.location.search;

                if (loc.length == 0) {
                    // no query string //
                    if (value.length > 0) {
                        // add parameter directly to url //
                        return window.location.href + "?" + parameter + "=" + encodeURIComponent(value);
                    }
                }
                else {
                    var found = false;
                    if (loc[0] == '?') {
                        loc = loc.substring(1);
                    }
                    var params = loc.split('&');

                    for (var i = 0; i < params.length; i++) {
                        if (params[i].toLowerCase().startsWith(parameter.toLowerCase() + '=')) {
                            found = true;

                            if (value.length > 0) {
                                // set new value //
                                params[i] = parameter + '=' + encodeURIComponent(value);
                            }
                            else {
                                // remove existing value //
                                params[i] = '';
                            }
                        }
                    }
                    if (found == false && value.length > 0) {
                        params.push(parameter + '=' + value);
                    }

                    var qs = '';
                    for (var i = 0; i < params.length; i++) {
                        if (params[i].length > 0) {
                            if (qs.length == 0) {
                                qs = "?" + params[i];
                            }
                            else {
                                qs += "&" + params[i];
                            }
                        }
                    }

                    return window.location.href.replace("?" + loc, qs);
                }
                return window.location.href;
            }

            function tabIndexLoop(modalContainer) {
                modalContainer.addEventListener("keydown", trapTabKey);

                var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                var focusableElements = modalContainer.querySelectorAll(focusableElementsString);
                focusableElements = Array.prototype.slice.call(focusableElements);
                focusableElements = focusableElements.filter(element => $(element).is(':visible'));
				
                var videoContainer = document.querySelector(".VideoPlayerContainer");
				
                var firstTabStop = focusableElements[0];
                var lastTabStop = focusableElements[focusableElements.length - 1];
                if(firstTabStop){
                    if (videoContainer) {
                        var player = $('.fp-play');
                        if(player) {
                            player.focus();
                        }
                    }
                    else {
                        firstTabStop.focus();
                    }
                }
                else {
                    $('.hilighted .AgendaItemTitle a').focus();
                    $('.hilighted a.SelectableItem').focus();
                }

                function trapTabKey(e) {
                    var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                    var focusableElements = modalContainer.querySelectorAll(focusableElementsString);
                    focusableElements = Array.prototype.slice.call(focusableElements);
                    focusableElements = focusableElements.filter(element => $(element).is(':visible'));
					
                    var firstTabStop = focusableElements[0];
                    var lastTabStop = focusableElements[focusableElements.length - 1];
                    if (e.keyCode === 9) {
                        if (e.shiftKey) {
                            if (document.activeElement === firstTabStop) {
                                e.preventDefault();
                                var videoContainer = document.querySelector(".VideoPlayerContainer");
                                if (videoContainer) {
                                    videoContainer.addEventListener("keydown", trapTabKey);
                                    var player = $('.fp-play');
                                    if(player) {
                                        player.focus();
                                    }
                                }
                                else {
                                    $('.hilighted .AgendaItemTitle a').focus();
                                    $('.hilighted a.SelectableItem').focus();
                                }
                            }
                        } 
                        else {
                            if (document.activeElement === lastTabStop) {
                                e.preventDefault();
                                $('.hilighted .AgendaItemTitle a').focus();
                                $('.hilighted a.SelectableItem').focus();
                            }
                        }
                    }
                }
            }
        </script>

        

<style type="text/css">
    body {
        background-color: #9A9185;
        margin: 0px;
    }

    #isi_player {
        margin: auto;
        width: 100% !important;
        height: auto !important;
    }

    .isi_message {
        visibility: hidden;
    }
</style>

<div id="VideoPlayerControl" style="">
    <div id="divDebug" style="color: wheat; display: none"></div>
    <div id="divMessages" style="color: white; display: none"></div>
    <div id="isi_player" data-client_id="ottawa" data-stream_name="Haydon Hall - EN_PC_2022-09-08-09-25.mp4" data-auto_play="false" data-play_icon="//video.isilive.ca/cdn/play_white_240x240.png"></div>
    <div id="status_indicator_div"></div>
</div>

<script type="text/javascript">
    // foreach polyfill //
    if (!Array.prototype.forEach) {
        Array.prototype.forEach = function (callback) {
            var T, k;

            if (this == null) {
                throw new TypeError('this is null or not defined');
            }

            var O = Object(this);
            var len = O.length >>> 0;

            if (typeof callback !== 'function') {
                throw new TypeError(callback + ' is not a function');
            }

            if (arguments.length > 1) {
                T = arguments[1];
            }

            k = 0;
            while (k < len) {
                var kValue;

                if (k in O) {
                    kValue = O[k];
                    callback.call(T, kValue, k, O);
                }
                k++;
            }
        };
    }
</script>

<script type="text/javascript">
    var video = {
        StartAt : 0,
        StopAt : -1,
        Bookmarks : [{"AgendaItemId":17,"TimeStart":558309,"TimeEnd":596800},{"AgendaItemId":19,"TimeStart":596800,"TimeEnd":650059},{"AgendaItemId":20,"TimeStart":650059,"TimeEnd":937499},{"AgendaItemId":21,"TimeStart":937499,"TimeEnd":996676},{"AgendaItemId":22,"TimeStart":996676,"TimeEnd":1759656},{"AgendaItemId":23,"TimeStart":1759656,"TimeEnd":1803916},{"AgendaItemId":25,"TimeStart":1803916,"TimeEnd":1822763},{"AgendaItemId":19,"TimeStart":1822763,"TimeEnd":1836468},{"AgendaItemId":18,"TimeStart":1836468,"TimeEnd":2307575},{"AgendaItemId":23,"TimeStart":2307575,"TimeEnd":4323980},{"AgendaItemId":24,"TimeStart":4323980,"TimeEnd":8590740},{"AgendaItemId":26,"TimeStart":8590740,"TimeEnd":8789397},{"AgendaItemId":13,"TimeStart":8789397,"TimeEnd":8789819},{"AgendaItemId":14,"TimeStart":8789819,"TimeEnd":8795742},{"AgendaItemId":15,"TimeStart":8795742,"TimeEnd":8846079}],
        get Hash() { return document.location.hash.replace('#', '') },
        RequestedItem : document.location.hash.replace('#', ''),
        Log : function() {
            //console.log(video);
        },
        SetStartTime : function() {
            var b = video.Bookmark(video.Hash);

            if (b != null) {
                video.StartAt = b.TimeStart/1000;
                video.StopAt = b.TimeEnd/1000;
               

                $("#isi_player").data("initial_seek", (b.TimeStart/1000).toString());

                video.Log();
            }
        },

        AddCuePoints : function() {
            player.addCuepoint(0);

            for (var i=0; i<video.Bookmarks.length; i++) {
                var b = video.Bookmarks[i];

                // add cue point //
                player.addCuepoint(b.TimeEnd/1000);
            }
        },

        SetBookmark : function() {
            const queryString = window.location.search;
            const urlParams = new URLSearchParams(queryString);
            const item = urlParams.get('Item')
            video.SeekItem(item);
        },

        OnCuepoint : function(e, api, cuepoint) {
            if (video.StopAt < 0) {
                GetItemByTime(cuepoint.time * 1000);
            }
            else if (video.StopAt <= cuepoint.time && !api.paused) {
                player.pause();
                video.StartAt = cuepoint.time;
                video.StopAt = -1;
            }

            video.Log();
        },

        OnSeek : function (e, api, seek) {
            if (video.RequestedItem == null) {
                video.StartAt = seek;
                video.StopAt = -1;
            }

            video.Log();

            GetItemByTime(seek*1000);
            video.RequestedItem = null;
            var videoContainer = document.querySelector(".VideoPlayerContainer");
            if (videoContainer) {
                var videoPlayer = $('.fp-play');
                if(videoPlayer) {
                    videoPlayer.focus();
                }
            }
        },

        OnPause : function (e, api) {
        },
        
        OnResume : function (e, api) {
            if (api.ready) {
                //GetItemByTime(video.StartAt*1000);
            }

            video.Log();
        },

        OnPlayerLoaded : function () {
            Window_OnResize();

            if (player.ready) {
                video.AddCuePoints();
            }
            else {
                player.on("ready", video.AddCuePoints);
                player.on("ready", video.SetBookmark);
            }
          

            player.on("pause", video.OnPause);
            player.on("cuepoint", video.OnCuepoint);
            player.on("seek", video.OnSeek);
            player.on("resume", video.OnResume);
        },

        Bookmark : function(agendaItemId) {
            for (var i=0; i<video.Bookmarks.length; i++) {
                if (video.Bookmarks[i].AgendaItemId == agendaItemId) {
                    return video.Bookmarks[i];
                }
            }

            return null;
        },

        ShowBookmarks : function() {
            var book = $("<div>");

            $.each(video.Bookmarks, function(i, v) {
                var b = $("<div>").height("4px").css("min-width", "1px");

                if (v.TimeStart < v.TimeEnd) {
                    b.css("background-color", "green");
                    b.css("margin-left", v.TimeStart/1000 * $("#VideoPlayerControl").width() / player.video.duration + "px");
                    b.css("width", (v.TimeEnd-v.TimeStart)/1000 * $("#VideoPlayerControl").width() / player.video.duration + "px");
                }
                else {
                    b.css("background-color", "red");
                    b.css("margin-left", v.TimeEnd/1000 * $("#VideoPlayerControl").width() / player.video.duration + "px");
                    b.css("width", (v.TimeStart-v.TimeEnd)/1000 * $("#VideoPlayerControl").width() / player.video.duration + "px");
                }

                book.append(b);
            });

            $("#VideoPlayerControl").append(book);
        },

        SeekItem : function(agendaItemId, pause) {
            var b = video.Bookmark(agendaItemId);

            if (b != null) {
                video.RequestedItem = agendaItemId;
                video.StartAt = b.TimeStart/1000;
                video.StopAt = b.TimeEnd/1000;
                video.Log();

                if (player != null) {
                    try {
                        if (typeof(pause) === "undefined" || pause == true) {
                            player.pause();
                        }

                        player.seek(video.StartAt);

                    }
                    catch (ex) {
                    }
                }
            }
        }
    };

    video.SetStartTime();

    var SelectItemOld;
    $(document).ready(function() {
        $(window).on('resize', Window_OnResize);
        {
            // add video controls to items with bookmarks //
            for (var i=0; i<video.Bookmarks.length; i++) {
                var b = video.Bookmarks[i];

                var nav = $(".AgendaItem" + b.AgendaItemId)
                    
                if (nav.find(".InlineVideoControls").length == 0) {
                    nav.find(".AgendaItemNavigate").after(
                        $("<div>")
                            .addClass("sr-only InlineVideoControls")
                            .append("This item has Video",
                                    $("<input type='button'>").addClass("PlayItem").val("Seek Video to this item"),
                                    $("<input type='button'>").addClass("PlayPause").val("Play/Pause video"))
                                    ////,$("<input type='button'>").addClass("RewindVideo").val("Rewind video to start"))
                    );

                    // add to all items, to ensure tabindex //
                    $(".AgendaItemNavigate").each(function(i, e) {
                        var tab = $(e).find("a").attr("tabindex", 0);

                        $(e).find(".PlayItem, .PlayPause").attr("tabindex", tab);
                    });
                }
            }

            $(".AgendaItemTitleRow .PlayItem").click(function(e){
                e.preventDefault();

                var itemId = $(this).closest(".AgendaItem").attr("class").replace(/AgendaItem/g, '').replace(/ /, '');

                video.SeekItem(itemId, false);
            });

            $(".AgendaItemTitleRow .PlayPause").click(function(e){
                e.preventDefault();

                player.toggle();
            });
        }

        $(document).on("item:selected", function (e, id) {
            video.SeekItem(id);
        });

    });

    function VideoChangeSelectedItem(AgendaItemId) {
        hilightItem(AgendaItemId);

        if (AgendaItemId == null) {
            // no item selected, scroll to top of the page //
            $('html').scrollTop(0);
        }
        else {
            // scroll the automatically selected item to the top of the page //
            $('html').scrollTop($(".hilighted").offset().top - 40);
        }
    }

    function GetItemByTime(T) {
        if (video.RequestedItem == null) {
            for (i = 0; i < video.Bookmarks.length; i++) {
                if (T>=video.Bookmarks[i].TimeStart && T<video.Bookmarks[i].TimeEnd) {
                    VideoChangeSelectedItem(video.Bookmarks[i].AgendaItemId);
                    return;
                }
            }

            VideoChangeSelectedItem(null);
        }
    }

    function Window_OnResize() {
        setTimeout(
            function () {
                try {
                    var maxheight = 0;
                    var videoContainerHeight = $(".VideoPlayerContainer").outerHeight();

                    if ($(".navbar-fixed-bottom").is(":visible")) {
                        maxheight = $(window).height() - $(".navbar-nav").height() - $(".navbar-fixed-bottom").height();
                    }
                    else {
                        maxheight = $(window).height() - $(".navbar-nav").height();
                    }

                    $(".AgendaItemAttachmentsArea").css("max-height", "");

                    
                    if (detailsheight() > maxheight) {
                        var contentMaxHeight = maxheight - $('.AgendaItemSelectedDetails > div.panel-heading').outerHeight() - videoContainerHeight - 55;
                        $(".AgendaItemAttachmentsArea").css("max-height", contentMaxHeight + "px");
                    }
                }
                catch (e) {
                }
            },
            1
        );
    }
</script>

<script type="text/javascript" src="//video.isilive.ca/cdn/isi_player.js"></script>

<script type="text/javascript">
    function TestFlow() {
        if (typeof(player) == "undefined" || player == null) {
            window.setTimeout(TestFlow, 100);
        }
        else {
            video.OnPlayerLoaded();
        }
    }
    
    TestFlow();
</script>


        <div id="package-container" style="overflow: auto; height: 100%">
            <nav class="navbar navbar-expand-lg navbar-light navbar-fixed-top navbarbg" role="navigation">
                <div class="container">
                        <ul class="nav navbar-nav narbar-left">
                            <li class="nav-item dropdown">
                                <a href="#" id="navbarDropdown" class="nav-link dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color: white" tabindex="1">
                                    Agenda
                                </a>
                                <span class="caret"></span>
                                <ul class="dropdown-menu packageNav" role="menu" id="Agendadropdownmenu" aria-labelledby="navbarDropdown">
                                    
                                            
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=128fff38-faa9-4b07-a8cc-e13e88688f9d&Agenda=Agenda&lang=English' tabindex='1' lang='en'>
                                                    Agenda
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=128fff38-faa9-4b07-a8cc-e13e88688f9d&Agenda=Agenda&lang=French' tabindex='1' lang='fr'>
                                                    Ordre du jour
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=128fff38-faa9-4b07-a8cc-e13e88688f9d&Agenda=PostMinutes&lang=English' tabindex='1' lang='en'>
                                                    Minutes
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=128fff38-faa9-4b07-a8cc-e13e88688f9d&Agenda=PostMinutes&lang=French' tabindex='1' lang='fr'>
                                                    Procès-verbal
                                                </a>
                                            </li>
                                        
                                        
                                    <li class=''>
                                        <a class="VideoLink dropdown-item" href='./Players/ISIStandAlonePlayer.aspx?Id=128fff38-faa9-4b07-a8cc-e13e88688f9d' title='Open Video in new Window' target="_blank" tabindex="6">
                                            <span class="HiddenAnchorDescription">
                                                Open Video in new Window</span>
                                            Video
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                </div>
            </nav>

            <main class="container body-content" style="background-color: #ffffff">
                <ARTICLE class='Meeting row' ><SECTION class='Agenda col-xs-12 col-sm-12 col-md-8 col-lg-8' ><DIV style="padding:1em; width:auto;" ><HEADER class='AgendaHeader' style="padding:0px 4px" ><DIV class='AgendaHeaderLogo' ><img  src='filestream.ashx?DocumentId=94238' alt='City of Ottawa Logo'  /></DIV><H1 Id='AgendaHeaderTitle' class='AgendaHeaderTitle' >Planning Committee<br/><br/>Agenda<br/></H1><DIV class='AgendaHeaderDetails' ><DIV class='AgendaHeaderDetailsTable' ><DIV class='AgendaMeetingNumber' ><DIV class='AgendaHeaderDetails Label' ><TH scope='Row' >Meeting #:</TH></DIV><DIV class='Value AgendaMeetingNumberText' >69</DIV></DIV><DIV class='AgendaTimeContainer' ><TR ><DIV class='Label' ><TH scope='Row' >Date:</TH></DIV><TD class='Value' colspan='0' headers='' ><DIV class='AgendaMeetingTime Value' ><TIME datetime='2022-09-08' ><SPAN class='Date' ><SPAN class='DayOfWeek' >Thursday, </SPAN>September 08, 2022<SPAN class='DayOfWeek' ></SPAN></SPAN></TIME></DIV></TD></TR></DIV><DIV class='AgendaTimeContainer' ><DIV class='Label' >Time:</DIV><DIV ><DIV class='AgendaMeetingTime Value' ><SPAN class='AgendaMeetingTimeStart' ><TIME datetime='09:30' ><SPAN class='Time' > 9<SPAN class='Minutes' >:30</SPAN><SPAN class='Meridian' > A</SPAN><SPAN class='Meridian Period' >.</SPAN><SPAN class='Meridian' >m</SPAN><SPAN class='Meridian Period' >.</SPAN></SPAN></TIME></SPAN><SPAN class='AgendaMeetingTimeEnd' > - <TIME datetime='15:30' ><SPAN class='Time' > 3<SPAN class='Minutes' >:30</SPAN><SPAN class='Meridian' > P</SPAN><SPAN class='Meridian Period' >.</SPAN><SPAN class='Meridian' >m</SPAN><SPAN class='Meridian Period' >.</SPAN></SPAN></TIME></SPAN></DIV></DIV></DIV><DIV class='AgendaMeetingLocation' ><DIV class='AgendaHeaderDetails Label' ><TH scope='Row' >Location:</TH></DIV><DIV class='Value LocationValue' ><DIV class='Location' >Electronic Participation</DIV><DIV class='Address1' ></DIV><DIV class='Address2' ></DIV><DIV class='Address3' ></DIV></DIV></DIV><DIV ><DIV ><DIV style="height:5px" ></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaHeaderAttendance' ><DIV class='AgendaHeaderAttendanceTable' ><DIV ><DIV class='Label' >Members:</DIV><DIV class='Value' ><UL ><LI >Co-chair Glen Gower,&nbsp;</LI><LI >Co-chair Scott Moffatt,&nbsp;</LI><LI >Councillor Riley Brockington,&nbsp;</LI><LI >Councillor Jean Cloutier,&nbsp;</LI><LI >Councillor Cathy Curry,&nbsp;</LI><LI >Councillor Laura Dudas,&nbsp;</LI><LI >Councillor Allan Hubley,&nbsp;</LI><LI >Councillor Catherine Kitts,&nbsp;</LI><LI >Councillor Jeff Leiper,&nbsp;</LI><LI >Councillor Shawn Menard,&nbsp;</LI><LI > and Councillor Tim Tierney</LI></UL></DIV></DIV></DIV></DIV><DIV class='AgendaHeaderSpecialComments' ><p style="text-align&#58;center;"><span><strong>Kelly Crozier, Committee Coordinator</strong><br><strong>(613) 580-2424, ext. 16875</strong><br><strong>Kelly.Crozier@ottawa.ca</strong><br></span></p></DIV><DIV style="float:none;clear:both" ></DIV><HR class='AgendaHeaderSeparator' /></HEADER><DIV class='AgendaItems' ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem1' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem1TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >1.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(1);" >Notices and meeting information for meeting participants and the public</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(1, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment1' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94206" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Public Notices English - Standing Committee.pdf' target='_blank' ><SPAN class='Link' >Public Notices English - Standing Committee.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment1' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94207" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Public Notices French - Standing Committee.pdf' target='_blank' ><SPAN class='Link' >Public Notices French - Standing Committee.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Notices and meeting information are attached to the agenda and minutes, including&#58; availability of simultaneous interpretation and accessibility accommodations;<em> in camera</em> meeting procedures; information items not subject to discussion; personal information disclaimer for correspondents and public speakers; notices regarding minutes; and remote participation details.</p><br><p>Accessible formats and communication supports are available, upon request.</p><br><p>Except where otherwise indicated, reports requiring Council consideration will be presented to Council on September 21, 2022 in Planning Committee Report 67.</p><br><p>The deadline to register by phone to speak, or submit written comments or visual presentations is 4 pm on September 7, and the deadline to register to speak by email is 8&#58;30 am on September 8.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem2' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem2TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >2.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(2);" >Declarations of Interest</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem3' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem3TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >3.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(3);" >Confirmation of Minutes</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem4' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem4TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >3.1</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(4);" >PLC Minutes 68 – Thursday, August 25, 2022</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ></DIV></LI></UL></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem6' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem6TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >4.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(6);" >Postponements and Deferrals</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem18' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem18TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >4.1</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(18);" >Appeal with respect to Official Plan Amendment and Zoning By-law Amendment - 1186, 1188, and 1194 Wellington Street West </a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(18, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment18' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94214" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.1 - ACS2022-ICS-LEG-0005 - Appeal re OPA and ZBA - 1186, 1188, 1194 Wellington Street West.pdf' target='_blank' ><SPAN class='Link' >4.1 - ACS2022-ICS-LEG-0005 - Appeal re OPA and ZBA - 1186, 1188, 1194 Wellington Street West.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment18' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94215" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.1 - Document 1 - Planning Report ACS2022 PIE PS 0044.pdf' target='_blank' ><SPAN class='Link' >4.1 - Document 1 - Planning Report ACS2022 PIE PS 0044.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment18' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94216" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.1 - Document 2 - Details of Recommended Zoning to Replace Document 3 in Report ACS2022 PI PS 0044.pdf' target='_blank' ><SPAN class='Link' >4.1 - Document 2 - Details of Recommended Zoning to Replace Document 3 in Report ACS2022 PI PS 0044.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-ICS-LEG-0005 - Kitchissippi (15)&#160;</p><br><p><em>Deferred from the Planning Committee meeting of May 12, 2022.</em></p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<p><strong>That Planning Committee recommend that Council&#58;</strong></p>
<ol>
<li><strong>Subject to recommendation 2, endorse the position recommended by the Planning, Real Estate and Economic Development Department in Report ACS2022-PIE-PS-0044;</strong></li>
<li><strong>That the details of the zoning (Document 3 in Report ACS2022-PIE-PS-0044) be in accordance with Document 2 to this report;&#160;</strong></li>
<li><strong>Instruct Legal Services to seek a resolution to the appeals concerning the zoning and official plan amendment applications in respect of 1186, 1188 and 1194 Wellington West in accordance with this report.</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem17' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem17TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >4.2</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(17);" >Development Charge Complaint - 1354, 1376 Carling Avenue</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(17, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment17' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94204" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.2 - ACS2022-PIE-BCS-0002 - Dev Charge Complaint - 1354, 1376 Carling Avenue.pdf' target='_blank' ><SPAN class='Link' >4.2 - ACS2022-PIE-BCS-0002 - Dev Charge Complaint - 1354, 1376 Carling Avenue.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment17' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94205" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.2 - Document 1 - Carling Ottawa Phase 1 - Development Charges Complaint.pdf' target='_blank' ><SPAN class='Link' >4.2 - Document 1 - Carling Ottawa Phase 1 - Development Charges Complaint.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-BCS-0002 - River (Ward 16)</p><br><p><em>Deferred from the Planning Committee meeting of August 25, 2022.</em></p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendation</strong></p>
<p><strong>That Planning Committee recommend that Council dismiss the development charge complaint in respect of 1354, 1376 Carling Avenue.</strong></p></DIV></LI></UL></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem7' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem7TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(7);" >Planning, Real Estate and Economic Development Department</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem19' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem19TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.1</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(19);" >Official Plan and Zoning By-Law Amendment – 1071 Ambleside Drive</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(19, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment19' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94217" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.1 - ACS2022-PIE-PS-0095 - OPA and ZBLA – 1071 Ambleside Drive.pdf' target='_blank' ><SPAN class='Link' >5.1 - ACS2022-PIE-PS-0095 - OPA and ZBLA – 1071 Ambleside Drive.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-PS-0095 - Bay (Ward 7)</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<ol>
<li><strong>That Planning Committee Recommend Council&#160;</strong><br>
<ol style="list-style-type&#58;lower-alpha;">
<li><strong>Approve an amendment to the Cleary and New Orchard Area Site-Specific Policies in the Official Plan Volume 2b by adding a new policy permitting building heights of up to 32 storeys, specific to the site at 1071 Ambleside Drive, as detailed in Document 2a.</strong></li>
<li><strong>Approve an amendment to Zoning By-law 2008-250 for part of 1071 Ambleside Drive to permit a residential development with heights up to 32 storeys, as detailed in Documents 3 and 4.</strong></li>
<li><strong>Direct staff to incorporate an amendment to the Sherbourne and New Orchard Secondary Plan in the New Official Plan Volume 2a, as detailed in Document 2b, as part of the new Official Plan being considered for approval by the Ministry of Municipal Affairs and Housing.</strong></li>
</ol>
</li>
<li><strong>That Planning Committee approve the Consultation Details Section of this report be included as part of the ‘brief explanation’ in the Summary of Written and Oral Public Submissions, to be prepared by the Office of the City Clerk and submitted to Council in the report titled, “Summary of Oral and Written Public Submissions for Items Subject to the <em>Planning Act</em> ‘Explanation Requirements’ at the City Council Meeting of September 21,” subject to submissions received between the publication of this report and the time of Council’s decision.</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem20' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem20TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.2</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(20);" >Zoning By-law Amendment - 70 and 74 Nicholas Street </a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(20, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment20' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94218" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.2 - ACS2022-PIE-PS-0118 - ZBLA - 70, 74 Nicholas Street.pdf' target='_blank' ><SPAN class='Link' >5.2 - ACS2022-PIE-PS-0118 - ZBLA - 70, 74 Nicholas Street.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-PS-0118 - Rideau-Vanier (Ward 12)&#160;</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<ol>
<li><strong>That Planning Committee recommend Council approve an amendment to Zoning By-law 2008-250 for 70 and 74 Nicholas Street, as shown in Document 1, to create a new exception and to remove the subject property from the Heritage Overlay, to permit the construction of a 21-storey, mixed-use building incorporating the City Registry Office, a designated heritage building, as detailed in Document 2.</strong></li>
<li><strong>That Planning Committee approve the Consultation Details Section of this report be included as part of the ‘brief explanation’ in the Summary of Written and Oral Public Submissions, to be prepared by the Office of the City Clerk and submitted to Council in the report titled, “Summary of Oral and Written Public Submissions for Items Subject to the <em>Planning Act</em> ‘Explanation Requirements’ at the City Council Meeting of 21 September 2022” subject to submissions received between the publication of this report and the time of Council’s decision.</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem21' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem21TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.3</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(21);" >Application to alter 70 Nicholas Street, a property designated under Part IV of the Ontario Heritage Act</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(21, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94208" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - ACS2022-PIE-RHU-0029 - 70 Nicholas Street.pdf' target='_blank' ><SPAN class='Link' >5.3 - ACS2022-PIE-RHU-0029 - 70 Nicholas Street.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94209" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 4 - Statement of Reasons for the Designation.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 4 - Statement of Reasons for the Designation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94210" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 5 - Cultural Heritage Impact Statement.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 5 - Cultural Heritage Impact Statement.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94211" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 6 - Architectural Plans.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 6 - Architectural Plans.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94212" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 7 - Landscape Plan.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 7 - Landscape Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94213" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 8 - Conservation Plan.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 8 - Conservation Plan.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-RHU-0029 - Rideau-Vanier (Ward 12)&#160;</p><br><p><em>The statutory 90-day timeline for consideration of this application under the </em>Ontario Heritage Act<em> will expire on September 21, 2022.</em></p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<p><strong>That Planning Committee recommend that Council&#58;</strong></p>
<ol>
<li><strong>Approve the application to alter the City Registry Office, 70 Nicholas Street, according to the drawings prepared by Zeidler Architecture, dated April 29, 2022 and attached as Document 6, conditional upon&#58;</strong><br>
<ol style="list-style-type&#58;lower-alpha;">
<li><strong>The applicant identifying opportunities to enhance the proposed landscaping and public realm in consultation with Heritage Planning, Development Review, and Urban Design staff prior to Site Plan Control Approval. This may include reducing the hardscaping around the City Registry Office building and establishing a connection to the arts district through lighting and public art;</strong></li>
</ol>
</li>
<li><strong>Delegate the authority for minor design changes to the General Manager, Planning, Real Estate and Economic Development Department; and</strong></li>
<li><strong>Approve the issuance of the heritage permit with a two-year expiry date from the date of issuance unless otherwise extended by Council.&#160;</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem22' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem22TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.4</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(22);" >Zoning By-law Amendment - 1649 Montreal Road and 741 Blair Road</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(22, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment22' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94219" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.4 - ACS2022-PIE-PS-0100 - ZBLA- 1649 Montreal Road_741 Blair Road.pdf' target='_blank' ><SPAN class='Link' >5.4 - ACS2022-PIE-PS-0100 - ZBLA- 1649 Montreal Road_741 Blair Road.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-PS-0100 - Beacon Hill-Cyrville (Ward 11)&#160;</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<ol>
<li><strong>That Planning Committee recommend Council refuse an amendment to Zoning By-law 2008-250 for 1649 Montreal Road and 741 Blair Road, as shown in Document 1, to permit a 26-storey mixed-use building, as detailed in Documents 2 and 3.</strong></li>
<li><strong>That Planning Committee approve the Consultation Details Section of this report be included as part of the ‘brief explanation’ in the Summary of Written and Oral Public Submissions, to be prepared by the Office of the City Clerk and submitted to Council in the report titled, “Summary of Oral and Written Public Submissions for Items Subject to the <em>Planning Act</em> ‘Explanation Requirements’ at the City Council Meeting of September 21, 2022,” subject to submissions received between the publication of this report and the time of Council’s decision.</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem23' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem23TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.5</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(23);" >Zoning By-law Amendment – 2254, 2262, 2270 Braeside Avenue, and 2345 Alta Vista Drive </a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(23, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94220" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.5 - ACS2022-PIE-PS-0109 - ZBLA – 2254, 2262, 2270 Braeside Avenue_2345 Alta Vista Drive.pdf' target='_blank' ><SPAN class='Link' >5.5 - ACS2022-PIE-PS-0109 - ZBLA – 2254, 2262, 2270 Braeside Avenue_2345 Alta Vista Drive.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-PS-0109 - Alta Vista (Ward 18)&#160;</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<ol>
<li><strong>That Planning Committee recommend Council approve an amendment to Zoning By-law 2008-250 for 2254, 2262, 2270 Braeside Avenue, and 2345 Alta Vista Drive, as shown in Document 1, to permit the construction of a low-rise apartment building, as detailed in Document 2.</strong></li>
<li><strong>That Planning Committee approve the Consultation Details Section of this report be included as part of the ‘brief explanation’ in the Summary of Written and Oral Public Submissions, to be prepared by the Office of the City Clerk and submitted to Council in the report titled, “Summary of Oral and Written Public Submissions for Items Subject to the <em>Planning Act</em> ‘Explanation Requirements’ at the City Council Meeting of September 21, 2022,” subject to submissions received between the publication of this report and the time of Council’s decision.</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem24' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem24TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.6</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(24);" >Orléans Corridor Secondary Plan</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(24, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94221" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - ACS2022-PIE-EDP-0024 - Orleans Corridor Secondary Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - ACS2022-PIE-EDP-0024 - Orleans Corridor Secondary Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94222" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 1 - Orleans Corridor Secondary Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 1 - Orleans Corridor Secondary Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94223" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 2 - Schedule A - Orleans Corridor Designation Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 2 - Schedule A - Orleans Corridor Designation Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94224" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 3 - Schedule B - Orleans Corridor Maximum Building Heights.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 3 - Schedule B - Orleans Corridor Maximum Building Heights.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94225" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 4 - Schedule C - Orleans Corridor Public Realm and Mobility Improvements.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 4 - Schedule C - Orleans Corridor Public Realm and Mobility Improvements.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94226" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 5 - Annex A Interchange Designs.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 5 - Annex A Interchange Designs.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94227" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 6a - St Joseph Blvd Concept Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 6a - St Joseph Blvd Concept Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >8.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94228" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 6b - St Joseph Blvd Cross Sections and Renderings.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 6b - St Joseph Blvd Cross Sections and Renderings.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >9.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94229" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 6c - St Joseph Blvd Conceptual Design Memos.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 6c - St Joseph Blvd Conceptual Design Memos.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >10.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94230" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 7 - Changes to Plan from Technical Circulation.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 7 - Changes to Plan from Technical Circulation.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-EDP-0024 - Orléans (Ward 1), Innes (Ward 2)</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<p><strong>That Planning Committee recommend that Council&#58;</strong></p>
<ol>
<li><strong>Authorize the adoption of an amendment to the new Official Plan, as detailed in Document 1, into Volume 2A – Urban Secondary Plans, upon the coming into force of the new Official Plan.</strong></li>
<li><strong>Authorize the adoption of an amendment to the new Official Plan to incorporate changes to Schedule C16 of Volume 1 of the new Official Plan for Road Right-of-Way Protection Requirements for Youville Drive and Belcourt Boulevard between St. Joseph Boulevard and Toulouse Crescent as detailed in Document 1, upon the coming into force of the new Official Plan.</strong></li>
<li><strong>Authorize the adoption of an amendment to the new Official Plan to repeal Area-Specific Policy no. 27 from Volume 2C of the new Official Plan for the property at 8600 Jeanne d’Arc Boulevard North, upon the coming into force of the new Official Plan.</strong></li>
<li><strong>Repeal the St. Joseph Boulevard Corridor Study Community Design Plan effective upon the Official Plan Amendment set forth in Document 1 coming into force.&#160;</strong></li>
<li><strong>Approve the concept plan for St Joseph Boulevard as a complete street as shown in Document 6;</strong></li>
<li><strong>The Planning Committee approve the Consultation Details Section of this report be included as part of the ‘brief explanation’ in the Summary of Written and Oral Public Submissions, to be prepared by the Office of the City Clerk and submitted to Council in the report titled, “Summary of Oral and Written Public Submissions for Items Subject to the <em>Planning Act</em> ‘Explanation Requirements’ at the City Council Meeting of September 21, 2022,” subject to submissions received between the publication of this report and the time of Council’s decision.</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem8' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem8TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >6.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(8);" >Finance Services Department</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem25' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem25TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >6.1</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(25);" >Treasurer’s Report on 2021 Growth-Related Revenues</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(25, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94232" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - ACS2022-FSD-FSP-0014 - 2021 Treasurer's Report.pdf' target='_blank' ><SPAN class='Link' >6.1 - ACS2022-FSD-FSP-0014 - 2021 Treasurer's Report.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94233" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 1- Summary Statement of Development Charges Reserve Funds.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 1- Summary Statement of Development Charges Reserve Funds.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94234" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 2 - Details of 2021 Development Charge Capital Project Funding.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 2 - Details of 2021 Development Charge Capital Project Funding.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94235" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 3 - Details of 2021 Citywide and Ward CILP Capital Project Funding.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 3 - Details of 2021 Citywide and Ward CILP Capital Project Funding.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94236" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 4 - Section 37 Deferred Revenue Accounts.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 4 - Section 37 Deferred Revenue Accounts.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94237" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 5 - Summary List of Development Charge Exemptions Granted at Building Permit Issuance.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 5 - Summary List of Development Charge Exemptions Granted at Building Permit Issuance.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-FSD-FSP-0014 - City-wide</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendation</strong></p>
<p><strong>That the Planning Committee recommend that Council receive this report for information.</strong></p></DIV></LI></UL></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem10' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem10TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >7.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(10);" >In Camera Items</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem12' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem12TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >8.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(12);" >Motions of Which Notice has been Previously Given </a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem26' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem26TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >8.1</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(26);" >Councillor L. Dudas - Motion – Stepbacks within the Innes Road Zoning Review Area </a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(26, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94231" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='8.1 - ACS2022-OCC-PLC-0009 - Motion - Stepbacks - Innes.pdf' target='_blank' ><SPAN class='Link' >8.1 - ACS2022-OCC-PLC-0009 - Motion - Stepbacks - Innes.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-OCC-PLC-0009 - Innes (Ward 2)&#160;</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<p><strong>That the Planning Committee recommend Council approve that staff be directed&#58;</strong></p>
<ol>
<li><strong>to investigate amending the Zoning By-law in the next Omnibus Amendment so that stepbacks within the Innes Road Zoning Review Area (Document 1) are applied to both the rear and side yards where development abuts low-rise residential zones (properties subject to an active planning application will be exempt from these changes);</strong></li>
<li><strong>to re-examine the appropriateness of the AM11 Subzone within the Innes Road Zoning Review Area as part of the New Zoning By-law Project, as concerns related to building height and compatibility with the surrounding community remain. &#160;</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem13' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem13TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >9.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(13);" >Notices of Motions (For Consideration at Subsequent Meeting)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem14' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem14TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >10.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(14);" >Inquiries</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem15' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem15TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >11.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(15);" >Other Business</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem16' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem16TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >12.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(16);" >Adjournment</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Next Meeting</p><br><p>Thursday, September 22, 2022.</p></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION><SECTION class='Details col-xs-3 col-sm-3 col-md-4 col-lg-4 col-xs-offset-9 col-sm-offset-9' ><DIV class='affix affix-top col-xs-3 col-sm-3 col-md-4 col-lg-4 col-xs-offset-9 col-sm-offset-9 d-sm-block' style="width:inherit; padding-right:5%;" ><DIV class='panel panel-default' style="width:auto;box-shadow:3px 3px 3px rgba(0,0,0,.33);" ><DIV class='VideoPlayerContainer panel panel-default' ><DIV class='VideoPlayer' ></DIV></DIV><DIV class='visible-md visible-lg AgendaItemSelectedDetailsContainer' ><DIV class='panel-body AgendaItemAttachment AgendaItemAttachmentNotSelected' >No Item Selected</DIV><DIV class='panel panel-default AgendaItemSelectedDetails' style="display:none" ><DIV class='panel-heading' ><SPAN class='SelectedItemCounter' ></SPAN> &nbsp; <SPAN class='SelectedItemTitle' ></SPAN></DIV><DIV class='panel-body' ><DIV class='AgendaItemAttachmentsArea' ><DIV class='AgendaItemAttachmentsList' ><DIV class='AgendaItemAttachment AgendaItemAttachmentNone' >This item has no attachments</DIV><DIV class='AgendaItemAttachment AgendaItemAttachment17' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94204" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.2 - ACS2022-PIE-BCS-0002 - Dev Charge Complaint - 1354, 1376 Carling Avenue.pdf' target='_blank' ><SPAN class='Link' >4.2 - ACS2022-PIE-BCS-0002 - Dev Charge Complaint - 1354, 1376 Carling Avenue.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment17' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94205" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.2 - Document 1 - Carling Ottawa Phase 1 - Development Charges Complaint.pdf' target='_blank' ><SPAN class='Link' >4.2 - Document 1 - Carling Ottawa Phase 1 - Development Charges Complaint.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment1' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94206" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Public Notices English - Standing Committee.pdf' target='_blank' ><SPAN class='Link' >Public Notices English - Standing Committee.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment1' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94207" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Public Notices French - Standing Committee.pdf' target='_blank' ><SPAN class='Link' >Public Notices French - Standing Committee.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94208" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - ACS2022-PIE-RHU-0029 - 70 Nicholas Street.pdf' target='_blank' ><SPAN class='Link' >5.3 - ACS2022-PIE-RHU-0029 - 70 Nicholas Street.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94209" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 4 - Statement of Reasons for the Designation.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 4 - Statement of Reasons for the Designation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94210" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 5 - Cultural Heritage Impact Statement.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 5 - Cultural Heritage Impact Statement.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94211" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 6 - Architectural Plans.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 6 - Architectural Plans.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94212" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 7 - Landscape Plan.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 7 - Landscape Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94213" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 8 - Conservation Plan.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 8 - Conservation Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment18' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94214" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.1 - ACS2022-ICS-LEG-0005 - Appeal re OPA and ZBA - 1186, 1188, 1194 Wellington Street West.pdf' target='_blank' ><SPAN class='Link' >4.1 - ACS2022-ICS-LEG-0005 - Appeal re OPA and ZBA - 1186, 1188, 1194 Wellington Street West.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment18' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94215" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.1 - Document 1 - Planning Report ACS2022 PIE PS 0044.pdf' target='_blank' ><SPAN class='Link' >4.1 - Document 1 - Planning Report ACS2022 PIE PS 0044.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment18' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94216" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.1 - Document 2 - Details of Recommended Zoning to Replace Document 3 in Report ACS2022 PI PS 0044.pdf' target='_blank' ><SPAN class='Link' >4.1 - Document 2 - Details of Recommended Zoning to Replace Document 3 in Report ACS2022 PI PS 0044.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment19' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94217" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.1 - ACS2022-PIE-PS-0095 - OPA and ZBLA – 1071 Ambleside Drive.pdf' target='_blank' ><SPAN class='Link' >5.1 - ACS2022-PIE-PS-0095 - OPA and ZBLA – 1071 Ambleside Drive.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment20' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94218" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.2 - ACS2022-PIE-PS-0118 - ZBLA - 70, 74 Nicholas Street.pdf' target='_blank' ><SPAN class='Link' >5.2 - ACS2022-PIE-PS-0118 - ZBLA - 70, 74 Nicholas Street.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment22' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94219" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.4 - ACS2022-PIE-PS-0100 - ZBLA- 1649 Montreal Road_741 Blair Road.pdf' target='_blank' ><SPAN class='Link' >5.4 - ACS2022-PIE-PS-0100 - ZBLA- 1649 Montreal Road_741 Blair Road.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94220" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.5 - ACS2022-PIE-PS-0109 - ZBLA – 2254, 2262, 2270 Braeside Avenue_2345 Alta Vista Drive.pdf' target='_blank' ><SPAN class='Link' >5.5 - ACS2022-PIE-PS-0109 - ZBLA – 2254, 2262, 2270 Braeside Avenue_2345 Alta Vista Drive.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94221" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - ACS2022-PIE-EDP-0024 - Orleans Corridor Secondary Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - ACS2022-PIE-EDP-0024 - Orleans Corridor Secondary Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94222" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 1 - Orleans Corridor Secondary Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 1 - Orleans Corridor Secondary Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94223" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 2 - Schedule A - Orleans Corridor Designation Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 2 - Schedule A - Orleans Corridor Designation Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94224" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 3 - Schedule B - Orleans Corridor Maximum Building Heights.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 3 - Schedule B - Orleans Corridor Maximum Building Heights.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94225" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 4 - Schedule C - Orleans Corridor Public Realm and Mobility Improvements.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 4 - Schedule C - Orleans Corridor Public Realm and Mobility Improvements.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94226" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 5 - Annex A Interchange Designs.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 5 - Annex A Interchange Designs.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94227" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 6a - St Joseph Blvd Concept Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 6a - St Joseph Blvd Concept Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >8.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94228" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 6b - St Joseph Blvd Cross Sections and Renderings.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 6b - St Joseph Blvd Cross Sections and Renderings.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >9.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94229" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 6c - St Joseph Blvd Conceptual Design Memos.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 6c - St Joseph Blvd Conceptual Design Memos.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >10.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94230" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 7 - Changes to Plan from Technical Circulation.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 7 - Changes to Plan from Technical Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94231" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='8.1 - ACS2022-OCC-PLC-0009 - Motion - Stepbacks - Innes.pdf' target='_blank' ><SPAN class='Link' >8.1 - ACS2022-OCC-PLC-0009 - Motion - Stepbacks - Innes.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94232" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - ACS2022-FSD-FSP-0014 - 2021 Treasurer's Report.pdf' target='_blank' ><SPAN class='Link' >6.1 - ACS2022-FSD-FSP-0014 - 2021 Treasurer's Report.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94233" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 1- Summary Statement of Development Charges Reserve Funds.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 1- Summary Statement of Development Charges Reserve Funds.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94234" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 2 - Details of 2021 Development Charge Capital Project Funding.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 2 - Details of 2021 Development Charge Capital Project Funding.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94235" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 3 - Details of 2021 Citywide and Ward CILP Capital Project Funding.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 3 - Details of 2021 Citywide and Ward CILP Capital Project Funding.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94236" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 4 - Section 37 Deferred Revenue Accounts.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 4 - Section 37 Deferred Revenue Accounts.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94237" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 5 - Summary List of Development Charge Exemptions Granted at Building Permit Issuance.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 5 - Summary List of Development Charge Exemptions Granted at Building Permit Issuance.pdf</SPAN></a></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION></ARTICLE><script type='text/javascript'>
function toggleSelectedDetails(ItemId, tab) {
    window.history.pushState('', '', UpdateQuery('Tab', tab));

    if (tab == 'comments') {
        $('#selectedTabAgendaComments').css({'font-weight':'bold', 'color':'black'});
        $('#selectedTabAgendaComments').attr({'aria-selected':'true'});
        $('#selectedTabAgendaAttachment').css({'font-weight':'normal', 'color': '#595959'});
        $('#selectedTabAgendaAttachment').attr({'aria-selected':'false'});
        $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
        $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'true'});
        $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'normal','color': '#595959' });
        $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'false'});

        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
            $('.AgendaItemAttachmentNone').hide();
        }
        else {
            $('.AgendaItemAttachment' + ItemId).hide();
        }

        if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
            $('.AgendaItemPublicCommentNone').show();
        }
        else {
            $('.AgendaItemPublicComment' + ItemId).show();
        }
        window.dispatchEvent(new Event('resize'));
    }
    else {
        $('#selectedTabAgendaAttachment').css({'font-weight':'bold', 'color':'black'});
        $('#selectedTabAgendaAttachment').attr({'aria-selected':'true'});
        $('#selectedTabAgendaComments').css({'font-weight':'normal', 'color': '#595959'});
        $('#selectedTabAgendaComments').attr({'aria-selected':'false'});
        $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
        $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'true'});
        $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'normal','color': '#595959' });
        $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'false'});

        if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
            $('.AgendaItemPublicCommentNone').hide();
        }
        else {
            $('.AgendaItemPublicComment' + ItemId).hide();
        }

        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
            $('.AgendaItemAttachmentNone').show();
        }
        else {
            $('.AgendaItemAttachment' + ItemId).show();
        }
    }

    var attachmentCounts = $('.AgendaItemPublicCommentList > .AgendaItemAttachment' + ItemId).length;
    var commentCounts = $('.AgendaItemPublicCommentList > .AgendaItemPublicComment' + ItemId).length;
                                
    $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
    $('#selectedTabAgendaCommentsCount').first().text(' (' + commentCounts + ')');
    
    $('#selectedTabAgendaAttachmentCount' + ItemId).first().text(' (' + attachmentCounts + ') ');
    $('#selectedTabAgendaCommentsCount' + ItemId).first().text(' (' + commentCounts + ')');
}

function hilightItem(ItemId) {
    var tabindex = $('#AgendaItemAgendaItem' + ItemId + 'TitleHeader > .AgendaItemNavigate > .AgendaItemTitle > A').attr('tabindex');
    $('#selectedTabAgendaAttachment').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaAttachmentCount').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaComments').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });
    $('#selectedTabAgendaCommentsCount').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });
    $('#selectedTabAgendaAttachment' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaAttachmentCount' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaComments' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });
    $('#selectedTabAgendaCommentsCount' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });

    $('.hilighted').removeClass('hilighted');
    $('.AgendaItemAttachment').hide();
    $('.AgendaItemAttachment').parent().hide();
    $('.AgendaItemPublicComment').hide();

    if (ItemId != '') {
        var item = '.AgendaItem' + ItemId;

        $(item + ' .AgendaItemTitleRow').addClass('hilighted');
        $(item + ' .LateClosedAgendaItemTitleRow').addClass('hilighted');
        $('.AgendaItemAttachementsHeader').show();
        $('.AgendaItemPublicCommentHeader').show();

        $('.AgendaItemSelectedDetails').show();
        $('.SelectedItemCounter').text($(item + ' .AgendaItemCounter').text());
        $('.SelectedItemTitle').text($(item + ' .AgendaItemTitle').text());

        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
            $('.AgendaItemAttachmentNone').show();
            $('.AgendaItemAttachmentNone').parent().show();
        }
        else {
            $('.AgendaItemAttachment' + ItemId).show();
            $('.AgendaItemAttachment' + ItemId).parent().show();
        }
        
        if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
            $('.AgendaItemPublicCommentNone').show();
            $('.AgendaItemPublicCommentNone').parent().show();
        }
        else {
            $('.AgendaItemPublicComment' + ItemId).show();
            $('.AgendaItemPublicComment' + ItemId).parent().show();
        }
    }
    else {  
        $('.AgendaItemSelectedDetails').hide();
        $('.AgendaItemAttachmentNotSelected').show();
    }
}</script><script type='text/javascript'></script>
            </main>
        </div>
        <!-- Bootstrap Modal -->
        <div id='bootstrapModal' aria-live="polite" aria-hidden="true" class='modal fade in' style='display: none;'>
            <div class='modal-dialog modal-dialog-scrollable'>
                <div class='modal-content'>
                    <div class='modal-header'>
                        <h3 id='bootstrapModalTitle' class='modal-title' style='font-size: 17px'>Title</h3>
                        <button type='button' class='close' data-dismiss='modal'><span aria-hidden='true'>×</span> <span class='sr-only'>close</span></button>
                    </div>
                    <div id='bootstrapModalBody' class='modal-body' style="padding: 0px">
                        <div class='embed-responsive z-depth-1-half' id="modalIframeDiv">
                            <iframe id="modalIframe" title="Share Content Options" class='embed-responsive-item' src='' allowfullscreen></iframe>
                        </div>
                    </div>
                    <div class='modal-footer' id="bootstrapModalFooter" style='margin-top: 0; min-height: 55px;'>
                    </div>
                </div>
            </div>
        </div>

        <footer class="navbar navbar-default navbar-fixed-bottom navbarbg">
            <div class="container text-right">
                <div class="navbar-inner navbar-content-center footeralign">
                    <div class="float-right">
                        
                        <copyright class="poweredBy"><a href="https://escribemeetings.com" target="_blank" id="lnkPoweredBy">Powered by eSCRIBE Software Ltd.</a></copyright>
                        
                    </div>
                </div>
            </div>
        </footer>

        <script type="text/javascript">
            var AgendaSize = parseFloat($(".Agenda *").css('font-size'));
            var TitleSize = parseFloat($(".AgendaHeaderTitle").css('font-size'));
            var MeetingTitle = "Planning Committee - September 08, 2022";
            var itemTitles = { };
            var Sharing = false;
            var AllowComment = "False";
			var PublicCommentSettings = [{"Id":1,"AllowPublicComment":false},{"Id":2,"AllowPublicComment":false},{"Id":3,"AllowPublicComment":false},{"Id":4,"AllowPublicComment":false},{"Id":6,"AllowPublicComment":false},{"Id":7,"AllowPublicComment":false},{"Id":8,"AllowPublicComment":false},{"Id":10,"AllowPublicComment":false},{"Id":12,"AllowPublicComment":false},{"Id":13,"AllowPublicComment":false},{"Id":14,"AllowPublicComment":false},{"Id":15,"AllowPublicComment":false},{"Id":16,"AllowPublicComment":false},{"Id":17,"AllowPublicComment":false},{"Id":18,"AllowPublicComment":false},{"Id":19,"AllowPublicComment":false},{"Id":20,"AllowPublicComment":false},{"Id":21,"AllowPublicComment":false},{"Id":22,"AllowPublicComment":false},{"Id":23,"AllowPublicComment":false},{"Id":24,"AllowPublicComment":false},{"Id":25,"AllowPublicComment":false},{"Id":26,"AllowPublicComment":false},{"Id":1,"AllowPublicComment":false},{"Id":2,"AllowPublicComment":false},{"Id":3,"AllowPublicComment":false},{"Id":4,"AllowPublicComment":false},{"Id":6,"AllowPublicComment":false},{"Id":7,"AllowPublicComment":false},{"Id":8,"AllowPublicComment":false},{"Id":10,"AllowPublicComment":false},{"Id":12,"AllowPublicComment":false},{"Id":13,"AllowPublicComment":false},{"Id":14,"AllowPublicComment":false},{"Id":15,"AllowPublicComment":false},{"Id":16,"AllowPublicComment":false},{"Id":17,"AllowPublicComment":false},{"Id":18,"AllowPublicComment":false},{"Id":19,"AllowPublicComment":false},{"Id":20,"AllowPublicComment":false},{"Id":21,"AllowPublicComment":false},{"Id":22,"AllowPublicComment":false},{"Id":23,"AllowPublicComment":false},{"Id":24,"AllowPublicComment":false},{"Id":25,"AllowPublicComment":false},{"Id":26,"AllowPublicComment":false}];
            var LeaveComment = "Leave comment";

            function PrintAgenda() {
                window.print();
            };

            $(".VideoLink").click(function (e) {
                try {
                    $f().pause();
                }
                catch (e) {
                }
            });

            function detailsheight() {
                return $(".Details > div").height();
            };

            function SetDetailsHeight(AgendaItemId) {
                try {
                    if (Window_OnResize) {
                        Window_OnResize();
                    }
                        
                    //For public comment narrow and wide view when resize window
                    $(window).trigger('resize');

                }
                catch (e) {
                }
            }

            function CreateSocialLink(AgendaItemId) {
                var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                var language = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("lang").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                var publicCommentUrl = "PublicComment.aspx?agendaId=" + AgendaItemId + "&meetingId=" + meetingId + "&lang=" + language;
                var allowComment = AllowComment == "True" ? true : false;           
                    
                if(allowComment) {
                    for(i = 0; i < PublicCommentSettings.length; i++) {
                        var setting = PublicCommentSettings[i];
                        if(setting.Id == AgendaItemId) {
                            allowComment = setting.AllowPublicComment;
                            break;
                        }
                    }
                }

                var SocialItems = setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, false);

                $('.SocialIcons').remove();
                $(".hilighted .AgendaItemNavigate").append($("<div class='SocialIcons visible-xs visible-sm'>").append(SocialItems));
                $('.SelectedItemTitle').parent().append(SocialItems);
                $('.SelectedItemTitle').parent().addClass("clearfix");

                //visible-xs visible-sm
                //add the icons under narrow view if not exist
                var iconDiv = $('.AgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemIcons');

                if(iconDiv.length == 0) {
                    iconDiv = $('.AgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemTitle');
                }

                $(setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, true)).insertAfter(iconDiv);
                
                var closedIconDiv = $('.LateClosedAgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemIcons');
                
                if(closedIconDiv.length == 0) {
                    closedIconDiv = $('.LateClosedAgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemTitle');
                }
                $(setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, true)).insertAfter(closedIconDiv);
                SetDetailsHeight(AgendaItemId);
            }

            function setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, isNarrow) {
                var cssClass = isNarrow ? " class='visible-xs visible-sm' " : "";
                var padding = isNarrow ? "style='padding-top: 5px;'" : "";
                var btnId = isNarrow ? "id='narrow-leave-comment-button'" : "";
                    
                if(allowComment && !Sharing) {
                    var SocialItems = $("<div" + cssClass + ">")
                           .addClass("sharing SocialIcons")
                           .css("float", "right")
                           .append(
                               $("<a class='CommentIcon' aria-label='submit public comment'>")
                                   .attr("href", publicCommentUrl)
                                   .append("<span class='btn btn-primary btn-sm' style='vertical-align:middle;' " + btnId + ">" + LeaveComment + "<span>")
                           );

                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                }
                else if (Sharing && !allowComment) {
                    var SocialItems =
                        $("<div" + cssClass + padding + ">")
                            .addClass("sharing SocialIcons")
                            .css("float", "right")
                            .append(
                                $("<a style='padding-right: 13px;'>")
                                    .attr("href", 'Sharing.aspx?u=' + encodeURIComponent(window.location.href))
                                    .append('<img src="Images/share.PNG" style="height:1em;" alt="This can be shared, click to open the sharing popup." title="Share">')
                            );
                }
                else if (Sharing && allowComment) {
                    var SocialItems = $("<div" + cssClass + ">")
                                .addClass("sharing SocialIcons")
                                .css("float", "right")
                                .append(
                                   $("<a class='CommentIcon' aria-label='submit public comment'>")
                                       .attr("href", publicCommentUrl)
                                       .append("<span class='btn btn-primary btn-sm' style='vertical-align:middle;' " + btnId + ">" + LeaveComment + "<span>"))
                                
                                .append(
                                    $("<a style='padding-right: 19px;width: 6%;padding-top: 5px;padding-left: 5px;'>")
                                        .attr("href", 'Sharing.aspx?u=' + encodeURIComponent(window.location.href))
                                        .append('<img src="Images/share.PNG" style="height:1em;" alt="This can be shared, click to open the sharing popup." title="Share">')
                                );

                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                    $('.LateClosedAgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.LateClosedAgendaItemTitleRow hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                }

                return SocialItems;
            }

            function getParameterByName(name) {
                name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
                var regex = new RegExp('[\\?&]' + name + '=([^&#]*)'),
                results = regex.exec(location.search);
                return results == null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
            }

            function UpdateTitle(AgendaItemId) {
                if (itemTitles[AgendaItemId] != null) {
                    document.title = itemTitles[AgendaItemId] + ' - ' + MeetingTitle;
                }
                else {
                    document.title = MeetingTitle;
                }
            }

            // when selected item has changed update page //
            $(document).on("item:selected", function (e, id, scroll) {
                var selectedTab = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Tab").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                  
                hilightItem(id);
                CreateSocialLink(id);
                UpdateTitle(id);

                //Replace the Leave Comment button to icon
                var windowWidth = $(window).width();
                $('#narrow-leave-comment-button').html("<span class='las la-comment-alt' style='vertical-align: middle' title='Leave Comment'></span>");
                $('#narrow-leave-comment-button').attr("aria-label", "submit a public comment on this agenda item");
                    
                if (scroll == true) {
                    // scroll item into view //
                    var current = $(".AgendaItemTitleRow.hilighted");

                    if (current.length > 0) {
                        current[0].scrollIntoView();
                    }
                }

                if(selectedTab) {
                    toggleSelectedDetails(id, selectedTab);
                }
                else {
                    toggleSelectedDetails(id, 'attachments');
                }

                var attachmentCounts = $('.AgendaItemPublicCommentList >.OrderedAttachments > .OrderedAttachment > .AgendaItemAttachment' + id).length;											
                $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
            });

            function toggleSelectedDetails(ItemId, tab) {
                window.history.pushState('', '', UpdateQuery('Tab', tab));

                if (tab == 'comments') {
                    $('#selectedTabAgendaComments').css({'font-weight':'bold', 'color':'black'});
                    $('#selectedTabAgendaComments').attr({'aria-selected':'true'});
                    $('#selectedTabAgendaAttachment').css({'font-weight':'normal', 'color': '#595959'});
                    $('#selectedTabAgendaAttachment').attr({'aria-selected':'false'});
                    $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
                    $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'true'});
                    $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'normal','color': '#595959' });
                    $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'false'});

                    if ($('.OrderedAttachments').length && $('.OrderedAttachments').is(":visible")) {
                        if ($('.OrderedAttachments >.OrderedAttachment >.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').hide();
                        }
                        else {
                            $('.OrderedAttachments >.OrderedAttachment >.AgendaItemAttachment' + ItemId).hide();
                        }
                    }
                    else {
                        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').hide();
                        }
                        else {
                            $('.AgendaItemAttachment' + ItemId).hide();
                        }
                    }

                    if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
                        $('.AgendaItemPublicCommentNone').show();
                    }
                    else {
                        $('.AgendaItemPublicComment' + ItemId).show();
                    }
                    window.dispatchEvent(new Event('resize'));
                }
                else {
                    $('#selectedTabAgendaAttachment').css({'font-weight':'bold', 'color':'black'});
                    $('#selectedTabAgendaAttachment').attr({'aria-selected':'true'});
                    $('#selectedTabAgendaComments').css({'font-weight':'normal', 'color': '#595959'});
                    $('#selectedTabAgendaComments').attr({'aria-selected':'false'});
                    $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
                    $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'true'});
                    $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'normal','color': '#595959' });
                    $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'false'});

                    if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
                        $('.AgendaItemPublicCommentNone').hide();
                    }
                    else {
                        $('.AgendaItemPublicComment' + ItemId).hide();
                    }

                    if ($('.OrderedAttachments').length && $('.OrderedAttachments').is(":visible")) {
                        if ($('.OrderedAttachments>.OrderedAttachment>.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').show();
                        }
                        else {
                            $('.OrderedAttachments >.OrderedAttachment>.AgendaItemAttachment' + ItemId).show();
                        }
                    }
                    else {
                        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').show();
                        }
                        else {
                            $('.AgendaItemAttachment' + ItemId).show();
                        }
                    }
                }

                var attachmentCounts = $('.AgendaItemPublicCommentList >.OrderedAttachments > .OrderedAttachment > .AgendaItemAttachment' + ItemId).length;
                var commentCounts = $('.AgendaItemPublicCommentList > .AgendaItemPublicComment' + ItemId).length;
											
                $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
                $('#selectedTabAgendaCommentsCount').first().text(' (' + commentCounts + ')');
				
                $('#selectedTabAgendaAttachmentCount' + ItemId).first().text(' (' + attachmentCounts + ') ');
                $('#selectedTabAgendaCommentsCount' + ItemId).first().text(' (' + commentCounts + ')');
				
                var modalClass = '.Details';
                var modalContainer = document.querySelector(modalClass);
                var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [contenteditable]';
                var focusableElements = modalContainer.querySelectorAll(focusableElementsString);

                focusableElements = Array.prototype.slice.call(focusableElements);
                if (focusableElements.length > 0){
                    focusableElements[0].focus();
                }
            }

            function UpdateQuery(parameter, value) {
                var loc = window.location.search;

                if (loc.length == 0) {
                    // no query string //
                    if (value.length > 0) {
                        // add parameter directly to url //
                        return window.location.href + "?" + parameter + "=" + encodeURIComponent(value);
                    }
                }
                else {
                    var found = false;
                    if (loc[0] == '?') {
                        loc = loc.substring(1);
                    }

                    // split up existing query string //
                    var params = loc.split('&');

                    for (var i = 0; i < params.length; i++) {
                        if (params[i].toLowerCase().startsWith(parameter.toLowerCase() + '=')) {
                            found = true;

                            if (value.length > 0) {
                                // set new value //
                                params[i] = parameter + '=' + encodeURIComponent(value);
                            }
                            else {
                                // remove existing value //
                                params[i] = '';
                            }
                        }
                    }

                    if (found == false && value.length > 0) {
                        params.push(parameter + '=' + value);
                    }

                    var qs = '';
                    for (var i = 0; i < params.length; i++) {
                        if (params[i].length > 0) {
                            if (qs.length == 0) {
                                qs = "?" + params[i];
                            }
                            else {
                                qs += "&" + params[i];
                            }
                        }
                    }

                    return window.location.href.replace("?" + loc, qs);
                }

                return window.location.href;
            }

            //$(document).ready(function () {
            //    SelectItem(getParameterByName("Item"), true);
            //});
        </script>

        <style type="text/css">
            /*
                @media Screen {
                    .AgendaItemAttachmentsList {
                        // this max height is causing attachments overlap, if exist the height
                             //max-height:200px;
                    }

                    .AgendaItemAttachmentsArea {
                        overflow:hidden;
                        overflow-y:auto;
                    }
                }
                */
        </style>
    </form>

    


<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" />  

<div id="AgendaItemDetailsModal" class="modal fade">
    <div class="modal-dialog AgendaItemDetailsModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Details</h3>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
            </div>
            <div class="modal-body">
                <div>
                    <div class="inputform">
                        <label>
                            Title
                        </label>
                        <div class="ItemTitle"></div>

                        <label>
                            Description
                        </label>
                        <div class="description"></div>

                        <label>
                            Category
                        </label>
                        <div class="Category"></div>

                        <label>
                            Number
                        </label>
                        <div class="LegislationNumberLabel"></div>

                        <label>Stage</label>
                        <div class="LegislationStageLabel"></div>

                        <label>
                            Department
                        </label>
                        <div id="LegislationDepartmentLabel"></div>

                        <label style="vertical-align: top">
                            Attachments
                        </label>
                        <div style="overflow:hidden">
                            <div>
                                <span id="LegislationDocumentIcon"></span>
                                <a id="LegislationDocumentLink"></a>
                            </div>
                            <div id="LegislationSupportingDocumentsList">
                            </div>
                        </div>
                    </div>
                </div>

                <h4 style="margin-top:0.5em">History</h4>
                <div>
                    <table id="LegislationHistoryTable" class="list dataTable">
                        <thead>
                            <tr>
                                <th id="legislationhistory-index-th" class="leg-no-break tablepadding"></th>
                                <th id="legislationhistory-meetingtype-th" class="leg-no-break tablepadding">Meeting Type</th>
                                <th id="legislationhistory-meetingdate-th" class="leg-no-break tablepadding">Meeting Date</th>
                                <th id="legislationhistory-stage-th" class="leg-no-break tablepadding">Stage</th>
                                <th id="legislationhistory-status-th" class="leg-no-break tablepadding">Status</th>
                                <th id="legislationhistory-number-th" class="leg-no-break tablepadding">Number</th>
                                <th id="legislationhistory-vote-th" class="leg-no-break tablepadding">Vote</th>
                            </tr>
                        </thead>
                        <tbody class="history"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="VoteResultsModal" class="modal fade">
    <div class="modal-dialog VoteResultsModal" style="width: 60%">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Vote Result</h3>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
            </div>
            <div class="modal-body">
                <div class="Text"></div>
                <div class="Banner"></div>
                <div class="Votes"></div>
            </div>
            <div class="modal-footer">
                <div class="dataTables_wrapper" style="margin:auto">
                    <div class="dataTables_paginate paging_simple_numbers">
                        <span>
                            <a class="paginate_button current" aria-controls="table-conflicts-details-list" data-dt-idx="1" tabindex="0">1</a>
                        </span>
                    </div>
                </div> 
            </div>
        </div>
    </div>
</div>
 
<script type="text/javascript">
    function FillVoteResultsDialog(motions, index) {
        var dialog = $("#VoteResultsModal");
        var motion = motions[index];

        // paging //
        {
            var paging = dialog.find(".dataTables_paginate").empty();

            // back links //
            {
                // first link
                var firstlink = $('<a class="paginate_button first">&lt;&lt;</a>')
                    .attr("id", "VoteResultsModal-First")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to First Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", 0);

                // previous link //
                var previouslink = $('<a class="paginate_button previous" "">&lt;</a>')
                    .attr("id", "VoteResultsModal-Previous")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Previous Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", 1);


                if (index == 0) {
                    firstlink.addClass('disabled');
                    firstlink.attr("aria-disabled", "true");

                    previouslink.addClass('disabled');
                    previouslink.attr("aria-disabled", "true");
                }
                else {
                    firstlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, 0);
                        });
                    
                    previouslink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, index-1);
                        });
                }

                paging.append(firstlink);
                paging.append(previouslink);                
            }

            // pages //
            {
                var pages = $("<span>");
                for (var i=0; i<motions.length; i++) {
                    let buttonindex = i;

                    var link = $('<a class="paginate_button">')
                        .attr("aria-controls", "VoteResultsModal")
                        .attr("data-dt-idx", i+2)
                        .attr("tabindex", 0)
                        .text(i+1)
                        .click(function(e) {
                            FillVoteResultsDialog(motions, buttonindex);
                        })

                    if (i == index) {
                        link.addClass("current")
                    }

                    pages.append(link);
                }

                paging.append(pages);
            }

            // forward links //
            {
                // next link 
                var nextlink = $('<a class="paginate_button next">&gt;</a>')
                    .attr("id", "VoteResultsModal-Next")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Next Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", motions.length + 2);

                // last link
                var lastlink = $('<a class="paginate_button last">&gt;&gt;</a>')
                    .attr("id", "VoteResultsModal-Last")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Last Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", motions.length + 3);


                if (index == motions.length - 1) {
                    nextlink.addClass('disabled');
                    nextlink.attr("aria-disabled", "true");

                    lastlink.addClass('disabled');
                    lastlink.attr("aria-disabled", "true");
                }
                else {
                    nextlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, index+1);
                        });
                    
                    lastlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, motions.length-1);
                        });
                }

                paging.append(nextlink);
                paging.append(lastlink);
            }
        }


        


        // render motion //

        dialog.find(".Text").text(motion.Text);
                                        
        var banner = dialog.find(".Banner");
        banner.text(motion.BannerText);

        switch (motion.BannerColor) {
            case 'green':
                banner.css("background-color", '#21AE52');
                banner.css("color", 'white');
                break;

            case 'red':
                banner.css("background-color", 'red');
                banner.css("color", 'black');
                break;

            default:
                banner.css("background-color", '');
                banner.css("color", '');
                break;
        }


        dialog.find(".Votes").empty()

        // add votes to dialog //
        var votes = {};
        var voteorder = ["Yes", "No", "Abstain", "Absent"];

        $.each(motion.Votes, function(imv, motionvote) {
            if (!votes.hasOwnProperty(motionvote.Vote)) {
                votes[motionvote.Vote] = [];
            }

            if (voteorder.indexOf(motionvote.Vote) == -1) {
                voteorder.push(motionvote.Vote);
            }

            votes[motionvote.Vote].push(
                $("<span>").text(motionvote.UserName)
            );
        });

        $.each(voteorder, function(iv, vote) {
            var container = $("#VoteContainerTemplate").clone();

            if (votes.hasOwnProperty(vote)) {
                container.find(".VoteHeader .count").text(votes[vote].length);
                container.find(".Voters").append(...(votes[vote]));
            }

            container.find(".VoteHeader .Vote").text(vote);
            dialog.find(".Votes").append(container.children());
        });
    }

    // fix for nested motals //
    $(document).ready(function () {
        $(document).on({
            'show.bs.modal': function () {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () { $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack'); }, 0);
            },
            'hidden.bs.modal': function () {
                if ($('.modal:visible').length > 0) {
                    // restore the modal-open class to the body element, so that scrolling works
                    // properly after de-stacking a modal.
                    setTimeout(function () { $(document.body).addClass('modal-open'); }, 0);
                }
            }
        }, '.modal');
    });
</script>

<style type="text/css">
    /* flex-grid classes */
    .inputform {
	    font-size:1em;
	    display:grid;
	    grid-template-columns:0fr 1fr;
	    grid-gap:10px 10px;
	    align-items:baseline;
    }
			
    @media (max-width: 575px) {
        .inputform {
            grid-template-columns: 1fr;
            grid-gap:0px;
        }

        .inputform > label,
        .inputform > .row > label {
            margin-top:20px;
        }
    }

    .inputform > label,
    .inputform > .row > label {
	    white-space:nowrap;
	    font-size:1em;
	    font-weight:bold;
    }

    .inputform > .row {
	    display:contents;
    }
			
    .inputform > .row > div {
	    grid-column : 1 / 3;
    }
			
    .inputform > .row > label+div {
	    grid-column: 2 / 3;
    }

    .inputform label+div > div+div {
	    margin-top:4px;
    }

    /* modal styles */
    .modal-dialog.AgendaItemDetailsModal {
        max-width: 1000px;
    }

    .AgendaItemDetailsModal .modal-content {
        max-height:90vh;
        overflow:hidden;
    }

    .AgendaItemDetailsModal .modal-content .modal-body {
        overflow-y:auto;
    }

    .AgendaItemDetailsModal .description {
        max-height:10em;
        overflow-y:auto;
    }

    .VoteResultsModal .Text {
        padding: 2px 0 18px;
    }

    .VoteResultsModal .Banner {
        font-weight:bold;
        padding:5px;
        text-align: center;
    }

    .Votes .VoteHeader {
        font-weight: bold;
        text-align: center;
        padding: 10px;
    }

    .Votes .Voters {
        display: grid;
        grid-template-columns: 33% minmax(0, 34%) 33%;
        grid-gap: 10px;
        align-items: baseline;
        text-align: center;
        border: 1px solid #f7f7f7;
    }

    h3.modal-title {
        font-size:17px;
    }

    #LegislationSupportingDocumentsList > div {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    #LegislationHistoryTable td {
        cursor:pointer;
    }

    #LegislationHistoryTable tr.selected td {
        border-top: 1px solid black;
        border-bottom: 1px solid black;
    }

    #LegislationHistoryTable tr.selected > :first-child {
        border-left:1px solid black;
    }

    #LegislationHistoryTable tr.selected > :last-child {
        border-right:1px solid black;
    }
</style>

<div id="VoteContainerTemplate" style="display:none">
    <div>
        <div class="VoteHeader"><span class="Vote"></span> ( <span class="count">0</span> )</div>
        <div class="Voters"></div>
    </div>
</div>

<script type="text/javascript">
    var AgendaItemswithHistory = [];

    $("document").ready(function() {
        // add agenda item history links dynamically to the agenda //
        $.each(AgendaItemswithHistory, function(i, v) {
            // remove old icon //
            $(".AgendaItem" + v + " .AgendaItemIcons").find(".AgendaItemHistoryLink").remove();

            // add icon //
            $(".AgendaItem" + v + " .AgendaItemIcons").append(
                $('<a href="">')
                    .addClass("AgendaItemHistoryLink")
                    .attr("itemid", v)
                    .append('<i class="las la-history"></i>')
            );
        });

        $(".AgendaItemHistoryLink").click(function(e){
            e.preventDefault();

            AgendaItemHistory.Dialog.Open('128fff38-faa9-4b07-a8cc-e13e88688f9d', $(this).attr("itemid"));
        });
    });
</script>


</body>

</html>

  recorded_at: Fri, 31 Jan 2025 02:28:19 GMT
- request:
    method: get
    uri: https://pub-ottawa.escribemeetings.com/Meeting.aspx?Agenda=Agenda&Id=128fff38-faa9-4b07-a8cc-e13e88688f9d&lang=English
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - pub-ottawa.escribemeetings.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Server:
      - Microsoft-IIS/10.0
      Set-Cookie:
      - ASP.NET_SessionId=uwlahriso5irztzvzraltgdz; path=/; HttpOnly; SameSite=Lax
      Strict-Transport-Security:
      - max-age=31536000
      Date:
      - Fri, 31 Jan 2025 02:28:20 GMT
      Content-Length:
      - '166284'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>




<html lang="en">
<head><meta charset="utf-8" /><meta http-equiv="X-UA-Compatible" content="IE=edge;chrome=1" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><title>
	Planning Committee - September 08, 2022
</title><script src="/bundles/modernizr?v=inCVuEFe6J4Q07A0AcRsbJic_UE5MwpRMNGcOtk94TE1"></script>
<script src="/bundles/jquery?v=8Oos0avDZyPg-cbyVzvkIfERIE1DGSe3sRQdCSYrgEQ1"></script>
<script src="/bundles/Meeting?v=vzF-9MbkbXiinMWgrvzK7C29wf8pirXICHRNY8VkMX01"></script>

        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <link href="/Content/css?v=qzDQfe_MaYWq9JDfD-bbLqBUQ47pEKk1u5XXgwMwxg01" rel="stylesheet"/>
<link rel='stylesheet' type='text/css' href='./FileStream.ashx?DocumentId=94240'><link rel="stylesheet" href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css" /><link rel="stylesheet" href="Content/Customizations.css" /><link rel="stylesheet" href="Content/Meeting.css" /><link href="Content/CalenderViewStyle-updated.css" rel="stylesheet" /><link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" type="text/css" /><link href="favicon.ico" rel="shortcut icon" type="image/x-icon" />

    <!-- This file must exist, otherwise we'll get server side error -->
    <!-- Ottawa Siteimprove Analytics --> 


<script async src="https://siteimproveanalytics.com/js/siteanalyze_876116.js"></script>

<!-- eSCRIBE Global site tag (gtag.js) - Google Analytics --> 

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-178411397-49"></script> 

<script> 

  window.dataLayer = window.dataLayer || []; 

  function gtag(){dataLayer.push(arguments);} 

  gtag('js', new Date()); 

  

  gtag('config', 'UA-178411397-49'); 

</script> 

    <style type="text/css">

        body {
            color: #000000;
        }

        a, A:link, A:visited {
            color: #0059B8;
        }

        .comment-link {
            display: inline-block;
            vertical-align: top;
        }

        .comment-link:hover {
            text-decoration: underline;
        }

        .embed-responsive {
            position: relative;
            display: block;
            width: 100%;
            padding: 0;
            overflow: hidden;
        }

            .embed-responsive::before {
                display: block;
                content: "";
            }

            .embed-responsive .embed-responsive-item, .embed-responsive iframe, .embed-responsive embed, .embed-responsive object, .embed-responsive video {
                /*position: absolute;*/
                top: 0;
                bottom: 0;
                left: 0;
                width: 100%;
                height: 100%;
                border: 0;
            }

        .embed-responsive-21by9::before {
            padding-top: 42.857143%;
        }

        .embed-responsive-16by9::before {
            padding-top: 56.25%;
        }

        .embed-responsive-4by3::before {
            padding-top: 75%;
        }

        .embed-responsive-1by1::before {
            padding-top: 100%;
        }


        html, body, form {
            height: 100%;
            overflow: hidden;
        }

        #Agendadropdownmenu.dropdown-menu {
            right: 0px;
            left: 0px;
        }

        .FontIncrease * {
            font-size: 1em;
            font-weight: bold;
            cursor: pointer;
        }

        .FontDecrease * {
            font-size: 0.85em;
            font-weight: bold;
            cursor: pointer;
        }

        .panel {
            margin-bottom: 22px;
            background-color: #fff;
            border: 1px solid transparent;
            border-radius: 4px;
            -webkit-box-shadow: 0 1px 1px rgba(0,0,0,.05);
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .panel-default {
            border-color: #ddd;
        }

        .panel-heading {
            padding: 10px 15px;
            border-bottom: 1px solid transparent;
            border-top-right-radius: 3px;
            border-top-left-radius: 3px;
        }

        .panel-default > .panel-heading {
            color: #000;
            background-color: #f5f5f5;
            border-color: #ddd;
        }

        .panel-body {
            padding: 15px;
        }

        /*ul.navbar-nav > li {
                display:inline-block;
            }

            .navbar-nav > li > a {
                padding-top:5px !important; padding-bottom:5px !important;
            }
            .navbar {
                min-height:32px !important
            }
            .navbar-toggle {
                margin-top:4px;
                margin-bottom:4px;
                padding-top:4px;
                padding-bottom:4px;
            }

            .affix { 
                right:0px;
                top:32px;
            }

            .affix-top {
                right:0px;
                position:fixed;
                top:32px;
            }*/

        .Details > div {
            padding-right: 0px !important;
            margin-right: 2%;
        }

        a.dropdown-toggle:focus {
            outline: solid 1px #FFFFFF;
        }

        #lnkPoweredBy:focus {
            outline: solid 1px #FFFFFF;
            padding: 4px;
        }

        /*@media (max-height: 760px) {
                .navbar-fixed-bottom {
                    display:none;
                }
            }
            @media (min-height: 760px) {
                body {
                    padding-bottom: 32px;
                }
            }
            
            @media (max-width: 600px) {
                 .AgendaItemContainer > .AgendaItemContainer {
                    margin-left:4em !important;
                }
            }*/

        @media (max-width: 500px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 2em !important;
            }
        }

        @media (max-width: 400px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 1em !important;
            }
        }

        @media (max-width: 300px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 0em !important;
            }
        }

        @media (min-width:768px) and (max-width:991px) {
            .AgendaItemSelectedDetails {display: none !important; }

            .visible-sm.sharing.SocialIcons {
                display: inline-block !important;
                float: none !important;
            }

            .AgendaItemTitleRow.hilighted {
                display: block !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemIcons,
            .AgendaItemTitleRow.hilighted > .AgendaItemIcons{
                display: none !important;
            }


            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle.hasPublicCommentButton {
                margin-right: 135px;
                width: auto !important;
            }
        }

        /*.AgendaItemIcons {
            width: 22% !important;
        }*/

        .visible-xs visible-sm sharing SocialIcons {
            width: 10%;
            padding-top: 5px;
            float: right;
        }

        @media (max-width: 767px) {
            .visible-xs.sharing.SocialIcons {
                display: inline-block !important;
                float: none !important;
            }

            .AgendaItemTitleRow.hilighted {
                display: block !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemIcons,
            .AgendaItemTitleRow.hilighted > .AgendaItemIcons {
                display: none !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle.hasPublicCommentButton {
                margin-right: 65px;
                width: auto !important;
            }
        }

        @media only screen and (device-width: 768px) {

            .navbar-nav .dropdown-menu {
                margin-top: -5px !important;
            }

            .dropdown, .dropleft, .dropright, .dropup {
                width: fit-content !important;
            }

            .collapse:not(.show) {
                display: block !important;
            }

            .navbar-light .navbar-toggler {
                float: right;
                border-color: #ddd !important;
                display: none !important;
            }

            .navbar-nav .dropdown-menu {
                position: absolute !important;
            }
        }

        .visible-xs.visible-sm.sharing.SocialIcons {
            /*width: 10%;
            padding-top: 5px;
            float: right;
            position: absolute;
            right: -8px;
            margin-top: -22px;*/
            position: absolute;
            right: 10px;
            margin: 0;
            position: absolute;
            top: 50%;
            -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        }

            .visible-xs.visible-sm.sharing.SocialIcons > * > span.btn.btn-primary.btn-sm {
                padding: 0px 5px 0px 5px;
            }

            .visible-xs.visible-sm.sharing.SocialIcons,
            .visible-xs.visible-sm.sharing.SocialIcons > *,
            .visible-xs.visible-sm.sharing.SocialIcons > * > span {
                font-size: 12px !important;
                font-weight: normal !important;
            }

        .SocialIcons {
            float: right;
        }


        .poweredBy, .poweredBy a {
            color: white !important;
        }

        @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation : portrait) {
            .visible-xs.visible-sm.sharing.SocialIcons
            {
                right: -8px !important;
                padding-top: 4px !important;
            }
        }

        @media screen and (device-width: 280px) and (device-height: 653px) {
            .visible-xs.visible-sm.sharing.SocialIcons
            {
                position: unset;
                right: unset;
                margin: unset;
                top: unset;
                -ms-transform: unset;
                transform: unset;
            }
            }

        .packageNav {
            position: absolute !important;
        }

    </style>
</head>
<body style="background-color: #e5e5e5">
    <form name="form1" method="post" action="./Meeting.aspx?Id=128fff38-faa9-4b07-a8cc-e13e88688f9d&amp;Agenda=Agenda&amp;lang=English" id="form1">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="KGen/i6ev7rI6edqDorTh9K91HQ75vidbhLWPvlSJXltXTUIgU4TN7suj5MUnrENUg8Ialr0HfzpWrTny+mz7CPkahOlHAbCMVutEq7XJn+nZEBtpKhTWhIrwgrMjt5PVBG3FHkZ9M8oyGqOjne/lu/quW77WniGByxIx9s3w1CElwyQf1gzIpnRChTOgEAuQ7zAYrC9sc/IPUqb2QbEOnfO2p10Au6AYzHP6pGo11zO3fMOXCjsPTNC+sJh/wxKPw7pa0GuWaUlXa/f78gXIIvyQNFgG3/Od5pEOjQoa+8W3/yTeHkvTGQQcWhv+Y7yYY1/A2m0v4/vZ5fIHLCXSaYcVxPA4EYmO2+mitDnw72PV7fnJ4ykz6A3Ug3/hOHM5nsoAGE9hC0qK01V4ejoAONKcIoYCfnp3UCranusrcGV3flqypALS7TPu/ccyVRi9ERZTcXsQAXZX+umVQCyDz/Xh4cTsBe2bTzLjsfMTJaea5KDivX8NMyvrOspTscKOeT+KMCXZKKFkTNcEyYcrCWTx5pV/cUZyoL1euQovv4GcKMeLRkL092+FhZV2oWTFIqQfqWWieS2DCNLiOthAYc5PIDFeiWaT4LCgvpCWlTCvZFBPafdKKkeQ6sM6OWtceZ1rBCWYhGpB+ZTRBFHyqlKC7mTJKbdIdUGzRbQs+tdBVIRJLXLaESIzRqJZoqOetet08LfnS5TyqGmMAhBAPHS9pH8z+rWR5zYfxV59HVWlwjzo3Mx8I3l0zMwgdbXsvfLxXlcTQfLMpyN8X/MfJLhEKEo2ZnO5/cu4Hpv/8uqINqnCum//b3zZTQt9thgHciOFRd3K4lK/En1rX7YGEddyVmRQ7ZAYGrawqQSWdPo5rYLhWqCQlxS6YEacYUl1ULEvJNfu9oKl/eV95cudrtoVMj+sR6Rh1hgludVwHWaH3w4l/yGUtXANRTmAtTW3RttLGJJmHDZ2Suco15dBGxEMgZYX7qLPLhgUHjOuEDX8yBLz/j9UCVE7xCYvS7a/eCb4sfpXixIlByHh3rWnlG+hycMeuIgIOOowrWM27hWOwA1e+lyc9OZIriIYY39KBKpusvisi0kJU62+5vytr0vUz4guDut90k7xNWWiKQ=" />


<script src="/bundles/MsAjaxJs?v=D6VN0fHlwFSIWjbVzi6mZyE9Ls-4LNrSSYVGRU46XF81" type="text/javascript"></script>
<script src="Scripts/bootstrap.min.js" type="text/javascript"></script>
<script src="Scripts/respond.min.js" type="text/javascript"></script>
<script src="/bundles/WebFormsJs?v=N8tymL9KraMLGAMFuPycfH3pXe6uUlRXdhtYv8A_jUU1" type="text/javascript"></script>
<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="4936DBB7" />
<input type="hidden" name="__VIEWSTATEENCRYPTED" id="__VIEWSTATEENCRYPTED" value="" />
        

        <script type="text/javascript">
            function iframeLoaded(iframeHeight) {
                var windowHeight = $(window).height();

                if (iframeHeight > windowHeight) {
                    var newHeight = (windowHeight - 185) + "px";
                    $('#bootstrapModalBody').height(newHeight);
                    $('#modalIframeDiv').height(newHeight);

                    return $('#modalIframeDiv').height() - 85;
                }
                else {
                    var newHeight = iframeHeight + "px";
                    $('#bootstrapModalBody').height(newHeight);
                    $('#modalIframeDiv').height(newHeight);
                    return "0";
                }
            }

            $(document).keydown(function(event) { 
                if (event.keyCode == 27) { 
                    closeBootstrapModal();
                    $(".CommentIcon").focus();
                }
            });

            function closeBootstrapModal() {
                $('#bootstrapModal').modal('hide').attr('aria-hidden', 'true'); 
            }

            $(window).resize(function(){
                var windowWidth = $(window).width();
                var standardHeight = $('.SelectedItemCounter').height();
                var titleHeight = $('.SelectedItemTitle').height();

                //if (Window_OnResize) {
                //    Window_OnResize();
                //}

                if(titleHeight > standardHeight) {
                    $('.panel-heading.clearfix >.sharing.SocialIcons > a.CommentIcon > span').css("margin-top", "4px");
                }

                //Replace the Leave Comment button to icon
                $('#narrow-leave-comment-button').html("<span class='las la-comment-alt' style='vertical-align: middle' title='Leave Comment'></span>");

                if(windowWidth <= 539){
                    $(".Agenda").css("padding-top", $(".affix-top").height()+5);
                } else {
                    $(".Agenda").css("padding-top", "18px");
                }
            });

            function CheckiOSDevice() {
                var userAgent = window.navigator.userAgent;
                if (userAgent.match(/iPad/i) || userAgent.match(/iPhone/i)) {
                    // iPad or iPhone
                    document.body.style.removeProperty("overflow");  
                    // console.log("checkIOSDevice called");
                }                                 
            }

            $(document).ready(
                function () {
                    var url = window.location.href;
                    if(url.indexOf("pub-ottawa") != -1 || url.indexOf("pub-support") != -1) {
                        $('.AgendaHeaderDetailsTable').find('.Label:contains("Période:")').text('Date :');
                        $('.AgendaHeaderDetailsTable').find('.Label:contains("Lieu:")').text('Endroit :');
                    }

                    $(".Details").addClass("d-sm-block");
                    $(".Details").attr("aria-live", "polite");
                    $(".panel-heading").prepend("<span class='visuallyhidden'>Agenda item details popup</span>");
                    $(".affix-top").append("<div class='collapse-stream'><i class='las la-video open-player'></i></div>");

                    $(".collapse-stream").on("click", function(i,v){
                        if($(".VideoPlayerContainer").css("display") == "none"){
                            $(".VideoPlayerContainer").show();
                            $(".la-video").addClass("open-player");
                            $(".Agenda").css("padding-top", $(".affix-top").height()+5);
                        } else {
                            $f().pause();
                            $(".la-video").removeClass("open-player");
                            $(".VideoPlayerContainer").hide();
                            $(".Agenda").css("padding-top", "18px");
                        } 
                    });
                    $('.VideoPlayer').append($('#VideoPlayerControl').detach());

                    if($(window).width() <= 539){
                        $(".Agenda").css("padding-top", $(".affix-top").height()*1.05);
                    }
                    
                    // ensure minutes show if the meeting starts or ends partially through an hour //
                    $(".Time > .Minutes").each(
                        function (index, element) {
                            if ($(element).text() != ":00") {
                                $(element).show();
                            }
                        }
                    );

                    $("[data-toggle='tooltip']").tooltip({placement:'top', boundary: 'window', trigger : 'hover'});

                    //Add/Remove public comment icons for each agenda item (real time)
                    var agendaItem = $('.AgendaItem');

                    for(var i = 0; i < agendaItem.length; i++) {
                        var className =agendaItem[i].className.match(/AgendaItem\d+/);
                        if(className) {
                            var id = className[0].replace("AgendaItem", "");
                            if(id){
                                LoadPublicCommentIcons(id);
                            }
                        }
                            
                    }                                                        
                    CheckiOSDevice();
                    var selectedTab = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Tab").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    SelectItem(getParameterByName("Item") || ((window.location.hash || "").replace(/#/g, '')), true, selectedTab);
                
                    
                    $("#package-container").on("scroll", function(){
                        if ($("#package-container").scrollTop() >= 48){
                            $(".affix-top").css("top", "5px");
                        } else {
                            $(".affix-top").css("top", "48px");
                        }
                    });

                    $("[tabindex]").filter(function() {
                        if ($(this).attr("tabindex") > 0){ $(this).attr("tabindex", "0")}
                    });
                    
                    $(".AgendaItemTitle").on("click", function() {
                        tabIndexLoop(document.querySelector(".AgendaItemSelectedDetailsContainer"));
                        var modalContainer = document.querySelector(".Details");
                        var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                        var focusableElements = modalContainer.querySelectorAll(focusableElementsString);

                        focusableElements = Array.prototype.slice.call(focusableElements);
                        if (focusableElements.length > 0){
                            focusableElements[0].focus();
                        }
                    });

                    $(".AgendaItemContainer").each(function(i,v){
                        var commentIcon = $(v).find(".AgendaItemIcons").find(".la-comment-alt");
                        if(commentIcon.length > 0){
                            commentIcon.append("<span class='sr-only'>Public Comments:</span>");
                        }
                    });


                }
                
                
            );

            
            function setVideoPlayerFocus(container) {
                return new Promise((resolve, reject) => {
                    if(container) {
                        resolve("Video Container found");
                    }
                    else{
                        reject("Video Container not found.");
                    }
                })
				.then(data => {
				    tabIndexLoopVideo(container);
				})
				.catch(error => {
				    console.log("An error occurred when setting focus on video container:", error);
				});
            }
			
            function tabIndexLoopVideo(container) {
                container.addEventListener("keydown", trapTabKey);
                function trapTabKey(e) {
                    if (e.keyCode === 9) {
                        if (e.shiftKey) {
                            $('.hilighted .AgendaItemTitle a').focus();
                            $('.hilighted a.SelectableItem').focus();
                        }
                        else {
                            tabIndexLoop(document.querySelector(".AgendaItemSelectedDetailsContainer"));
                        }						
                    }
                }
                var player = $('.fp-play');
                if(player) {
                    player.attr('tabindex', 0);
                    player.focus();
                }
            }
                                                
            function SelectItem(id, scroll, tab) {
                if(tab === undefined) {
                    tab = 'attachments'
                }

                //The function under eScribe.Agenda only take two parameter. In order to make the icon link works, I have to do a work around for this (reuse the scroll parameter).
                //This should not affect the original functionality of the scroll.
                if(scroll == 'attachments' || scroll == 'comments') {
                    tab = scroll;
                    scroll = false;
                }

                // update url //
                window.history.pushState('', '', UpdateQuery("Item", id.toString()));                    
                window.history.pushState('', '', UpdateQuery("Tab", tab));

                var videoContainer = document.querySelector(".VideoPlayerContainer");
                setVideoPlayerFocus(videoContainer);

                //Update the Citizen Comment using ajax.
                LoadPublicComment(id, scroll);

                if(document.readyState === 'complete' ) {
                    LoadPublicCommentIcons(id);
                }

                //// trigger event //
                //$(document).trigger("item:selected", [id, scroll]);
            }

            function LoadPublicComment(id, scroll) {
                if(id) {
                    var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var language = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("lang").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var tabindex = $('#AgendaItemAgendaItem' + id + 'TitleHeader > .AgendaItemNavigate > .AgendaItemTitle > A').attr("tabindex");

                    $.ajax({
                        type: "POST",
                        url: "Meeting.aspx/GeneratePublicComment",
                        data: "{id: '" + id + "', meetingId: '" + meetingId + "', lang: '" + language + "', tabindex: '" + tabindex + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {

                            var items = document.getElementsByClassName('AgendaItemPublicComment' + id);
                            for(var i = items.length - 1; i >= 0 ; i--){
                                var child = items[i];
                                child.parentNode.removeChild(child);
                            }
                            $(msg.d).appendTo(".AgendaItemPublicCommentList");

                            if($('.AgendaItemPublicCommentListIndent' + id).children('.AgendaItemPublicCommentHeader').length == 0) {
                                $('<div class="AgendaItemAttachment AgendaItemPublicCommentHeader" style="display: block;"></div>').appendTo(".AgendaItemPublicCommentListIndent" + id);
                            }
                            $(msg.d).appendTo(".AgendaItemPublicCommentListIndent" + id);

                            // trigger event //
                            $(document).trigger("item:selected", [id, scroll]);
                                
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }
            }

            function LoadPublicCommentIcons(id) {
                if(id) {
                    var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var agendaItem = $('#AgendaItemAgendaItem' + id +'TitleHeader ' + '> .AgendaItemNavigate > ' + '.AgendaItemIcons');
                    if(agendaItem.length == 0) {
                        agendaItem = $('#AgendaItemAgendaItem' + id +'TitleHeader ').parent().find(".AgendaItemIcons");
                    }

                    var isExist = agendaItem.children('.las.la-comment-alt').length;
                    
                    $.ajax({
                        type: "POST",
                        url: "Meeting.aspx/GeneratePublicCommentIcon",
                        data: "{id: '" + id + "', meetingId: '" + meetingId + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {

                            if(msg.d) {
                                if(isExist == 0) {
                                    $(msg.d).appendTo(agendaItem);
                                }
                            }
                            else {
                                if(isExist > 0){
                                    agendaItem.children('.las.la-comment-alt').remove();
                                }
                            }

                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }
            }
                                                
            function UpdateQuery(parameter, value) {
                var loc = window.location.search;

                if (loc.length == 0) {
                    // no query string //
                    if (value.length > 0) {
                        // add parameter directly to url //
                        return window.location.href + "?" + parameter + "=" + encodeURIComponent(value);
                    }
                }
                else {
                    var found = false;
                    if (loc[0] == '?') {
                        loc = loc.substring(1);
                    }
                    var params = loc.split('&');

                    for (var i = 0; i < params.length; i++) {
                        if (params[i].toLowerCase().startsWith(parameter.toLowerCase() + '=')) {
                            found = true;

                            if (value.length > 0) {
                                // set new value //
                                params[i] = parameter + '=' + encodeURIComponent(value);
                            }
                            else {
                                // remove existing value //
                                params[i] = '';
                            }
                        }
                    }
                    if (found == false && value.length > 0) {
                        params.push(parameter + '=' + value);
                    }

                    var qs = '';
                    for (var i = 0; i < params.length; i++) {
                        if (params[i].length > 0) {
                            if (qs.length == 0) {
                                qs = "?" + params[i];
                            }
                            else {
                                qs += "&" + params[i];
                            }
                        }
                    }

                    return window.location.href.replace("?" + loc, qs);
                }
                return window.location.href;
            }

            function tabIndexLoop(modalContainer) {
                modalContainer.addEventListener("keydown", trapTabKey);

                var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                var focusableElements = modalContainer.querySelectorAll(focusableElementsString);
                focusableElements = Array.prototype.slice.call(focusableElements);
                focusableElements = focusableElements.filter(element => $(element).is(':visible'));
				
                var videoContainer = document.querySelector(".VideoPlayerContainer");
				
                var firstTabStop = focusableElements[0];
                var lastTabStop = focusableElements[focusableElements.length - 1];
                if(firstTabStop){
                    if (videoContainer) {
                        var player = $('.fp-play');
                        if(player) {
                            player.focus();
                        }
                    }
                    else {
                        firstTabStop.focus();
                    }
                }
                else {
                    $('.hilighted .AgendaItemTitle a').focus();
                    $('.hilighted a.SelectableItem').focus();
                }

                function trapTabKey(e) {
                    var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                    var focusableElements = modalContainer.querySelectorAll(focusableElementsString);
                    focusableElements = Array.prototype.slice.call(focusableElements);
                    focusableElements = focusableElements.filter(element => $(element).is(':visible'));
					
                    var firstTabStop = focusableElements[0];
                    var lastTabStop = focusableElements[focusableElements.length - 1];
                    if (e.keyCode === 9) {
                        if (e.shiftKey) {
                            if (document.activeElement === firstTabStop) {
                                e.preventDefault();
                                var videoContainer = document.querySelector(".VideoPlayerContainer");
                                if (videoContainer) {
                                    videoContainer.addEventListener("keydown", trapTabKey);
                                    var player = $('.fp-play');
                                    if(player) {
                                        player.focus();
                                    }
                                }
                                else {
                                    $('.hilighted .AgendaItemTitle a').focus();
                                    $('.hilighted a.SelectableItem').focus();
                                }
                            }
                        } 
                        else {
                            if (document.activeElement === lastTabStop) {
                                e.preventDefault();
                                $('.hilighted .AgendaItemTitle a').focus();
                                $('.hilighted a.SelectableItem').focus();
                            }
                        }
                    }
                }
            }
        </script>

        

<style type="text/css">
    body {
        background-color: #9A9185;
        margin: 0px;
    }

    #isi_player {
        margin: auto;
        width: 100% !important;
        height: auto !important;
    }

    .isi_message {
        visibility: hidden;
    }
</style>

<div id="VideoPlayerControl" style="">
    <div id="divDebug" style="color: wheat; display: none"></div>
    <div id="divMessages" style="color: white; display: none"></div>
    <div id="isi_player" data-client_id="ottawa" data-stream_name="Haydon Hall - EN_PC_2022-09-08-09-25.mp4" data-auto_play="false" data-play_icon="//video.isilive.ca/cdn/play_white_240x240.png"></div>
    <div id="status_indicator_div"></div>
</div>

<script type="text/javascript">
    // foreach polyfill //
    if (!Array.prototype.forEach) {
        Array.prototype.forEach = function (callback) {
            var T, k;

            if (this == null) {
                throw new TypeError('this is null or not defined');
            }

            var O = Object(this);
            var len = O.length >>> 0;

            if (typeof callback !== 'function') {
                throw new TypeError(callback + ' is not a function');
            }

            if (arguments.length > 1) {
                T = arguments[1];
            }

            k = 0;
            while (k < len) {
                var kValue;

                if (k in O) {
                    kValue = O[k];
                    callback.call(T, kValue, k, O);
                }
                k++;
            }
        };
    }
</script>

<script type="text/javascript">
    var video = {
        StartAt : 0,
        StopAt : -1,
        Bookmarks : [{"AgendaItemId":17,"TimeStart":558309,"TimeEnd":596800},{"AgendaItemId":19,"TimeStart":596800,"TimeEnd":650059},{"AgendaItemId":20,"TimeStart":650059,"TimeEnd":937499},{"AgendaItemId":21,"TimeStart":937499,"TimeEnd":996676},{"AgendaItemId":22,"TimeStart":996676,"TimeEnd":1759656},{"AgendaItemId":23,"TimeStart":1759656,"TimeEnd":1803916},{"AgendaItemId":25,"TimeStart":1803916,"TimeEnd":1822763},{"AgendaItemId":19,"TimeStart":1822763,"TimeEnd":1836468},{"AgendaItemId":18,"TimeStart":1836468,"TimeEnd":2307575},{"AgendaItemId":23,"TimeStart":2307575,"TimeEnd":4323980},{"AgendaItemId":24,"TimeStart":4323980,"TimeEnd":8590740},{"AgendaItemId":26,"TimeStart":8590740,"TimeEnd":8789397},{"AgendaItemId":13,"TimeStart":8789397,"TimeEnd":8789819},{"AgendaItemId":14,"TimeStart":8789819,"TimeEnd":8795742},{"AgendaItemId":15,"TimeStart":8795742,"TimeEnd":8846079}],
        get Hash() { return document.location.hash.replace('#', '') },
        RequestedItem : document.location.hash.replace('#', ''),
        Log : function() {
            //console.log(video);
        },
        SetStartTime : function() {
            var b = video.Bookmark(video.Hash);

            if (b != null) {
                video.StartAt = b.TimeStart/1000;
                video.StopAt = b.TimeEnd/1000;
               

                $("#isi_player").data("initial_seek", (b.TimeStart/1000).toString());

                video.Log();
            }
        },

        AddCuePoints : function() {
            player.addCuepoint(0);

            for (var i=0; i<video.Bookmarks.length; i++) {
                var b = video.Bookmarks[i];

                // add cue point //
                player.addCuepoint(b.TimeEnd/1000);
            }
        },

        SetBookmark : function() {
            const queryString = window.location.search;
            const urlParams = new URLSearchParams(queryString);
            const item = urlParams.get('Item')
            video.SeekItem(item);
        },

        OnCuepoint : function(e, api, cuepoint) {
            if (video.StopAt < 0) {
                GetItemByTime(cuepoint.time * 1000);
            }
            else if (video.StopAt <= cuepoint.time && !api.paused) {
                player.pause();
                video.StartAt = cuepoint.time;
                video.StopAt = -1;
            }

            video.Log();
        },

        OnSeek : function (e, api, seek) {
            if (video.RequestedItem == null) {
                video.StartAt = seek;
                video.StopAt = -1;
            }

            video.Log();

            GetItemByTime(seek*1000);
            video.RequestedItem = null;
            var videoContainer = document.querySelector(".VideoPlayerContainer");
            if (videoContainer) {
                var videoPlayer = $('.fp-play');
                if(videoPlayer) {
                    videoPlayer.focus();
                }
            }
        },

        OnPause : function (e, api) {
        },
        
        OnResume : function (e, api) {
            if (api.ready) {
                //GetItemByTime(video.StartAt*1000);
            }

            video.Log();
        },

        OnPlayerLoaded : function () {
            Window_OnResize();

            if (player.ready) {
                video.AddCuePoints();
            }
            else {
                player.on("ready", video.AddCuePoints);
                player.on("ready", video.SetBookmark);
            }
          

            player.on("pause", video.OnPause);
            player.on("cuepoint", video.OnCuepoint);
            player.on("seek", video.OnSeek);
            player.on("resume", video.OnResume);
        },

        Bookmark : function(agendaItemId) {
            for (var i=0; i<video.Bookmarks.length; i++) {
                if (video.Bookmarks[i].AgendaItemId == agendaItemId) {
                    return video.Bookmarks[i];
                }
            }

            return null;
        },

        ShowBookmarks : function() {
            var book = $("<div>");

            $.each(video.Bookmarks, function(i, v) {
                var b = $("<div>").height("4px").css("min-width", "1px");

                if (v.TimeStart < v.TimeEnd) {
                    b.css("background-color", "green");
                    b.css("margin-left", v.TimeStart/1000 * $("#VideoPlayerControl").width() / player.video.duration + "px");
                    b.css("width", (v.TimeEnd-v.TimeStart)/1000 * $("#VideoPlayerControl").width() / player.video.duration + "px");
                }
                else {
                    b.css("background-color", "red");
                    b.css("margin-left", v.TimeEnd/1000 * $("#VideoPlayerControl").width() / player.video.duration + "px");
                    b.css("width", (v.TimeStart-v.TimeEnd)/1000 * $("#VideoPlayerControl").width() / player.video.duration + "px");
                }

                book.append(b);
            });

            $("#VideoPlayerControl").append(book);
        },

        SeekItem : function(agendaItemId, pause) {
            var b = video.Bookmark(agendaItemId);

            if (b != null) {
                video.RequestedItem = agendaItemId;
                video.StartAt = b.TimeStart/1000;
                video.StopAt = b.TimeEnd/1000;
                video.Log();

                if (player != null) {
                    try {
                        if (typeof(pause) === "undefined" || pause == true) {
                            player.pause();
                        }

                        player.seek(video.StartAt);

                    }
                    catch (ex) {
                    }
                }
            }
        }
    };

    video.SetStartTime();

    var SelectItemOld;
    $(document).ready(function() {
        $(window).on('resize', Window_OnResize);
        {
            // add video controls to items with bookmarks //
            for (var i=0; i<video.Bookmarks.length; i++) {
                var b = video.Bookmarks[i];

                var nav = $(".AgendaItem" + b.AgendaItemId)
                    
                if (nav.find(".InlineVideoControls").length == 0) {
                    nav.find(".AgendaItemNavigate").after(
                        $("<div>")
                            .addClass("sr-only InlineVideoControls")
                            .append("This item has Video",
                                    $("<input type='button'>").addClass("PlayItem").val("Seek Video to this item"),
                                    $("<input type='button'>").addClass("PlayPause").val("Play/Pause video"))
                                    ////,$("<input type='button'>").addClass("RewindVideo").val("Rewind video to start"))
                    );

                    // add to all items, to ensure tabindex //
                    $(".AgendaItemNavigate").each(function(i, e) {
                        var tab = $(e).find("a").attr("tabindex", 0);

                        $(e).find(".PlayItem, .PlayPause").attr("tabindex", tab);
                    });
                }
            }

            $(".AgendaItemTitleRow .PlayItem").click(function(e){
                e.preventDefault();

                var itemId = $(this).closest(".AgendaItem").attr("class").replace(/AgendaItem/g, '').replace(/ /, '');

                video.SeekItem(itemId, false);
            });

            $(".AgendaItemTitleRow .PlayPause").click(function(e){
                e.preventDefault();

                player.toggle();
            });
        }

        $(document).on("item:selected", function (e, id) {
            video.SeekItem(id);
        });

    });

    function VideoChangeSelectedItem(AgendaItemId) {
        hilightItem(AgendaItemId);

        if (AgendaItemId == null) {
            // no item selected, scroll to top of the page //
            $('html').scrollTop(0);
        }
        else {
            // scroll the automatically selected item to the top of the page //
            $('html').scrollTop($(".hilighted").offset().top - 40);
        }
    }

    function GetItemByTime(T) {
        if (video.RequestedItem == null) {
            for (i = 0; i < video.Bookmarks.length; i++) {
                if (T>=video.Bookmarks[i].TimeStart && T<video.Bookmarks[i].TimeEnd) {
                    VideoChangeSelectedItem(video.Bookmarks[i].AgendaItemId);
                    return;
                }
            }

            VideoChangeSelectedItem(null);
        }
    }

    function Window_OnResize() {
        setTimeout(
            function () {
                try {
                    var maxheight = 0;
                    var videoContainerHeight = $(".VideoPlayerContainer").outerHeight();

                    if ($(".navbar-fixed-bottom").is(":visible")) {
                        maxheight = $(window).height() - $(".navbar-nav").height() - $(".navbar-fixed-bottom").height();
                    }
                    else {
                        maxheight = $(window).height() - $(".navbar-nav").height();
                    }

                    $(".AgendaItemAttachmentsArea").css("max-height", "");

                    
                    if (detailsheight() > maxheight) {
                        var contentMaxHeight = maxheight - $('.AgendaItemSelectedDetails > div.panel-heading').outerHeight() - videoContainerHeight - 55;
                        $(".AgendaItemAttachmentsArea").css("max-height", contentMaxHeight + "px");
                    }
                }
                catch (e) {
                }
            },
            1
        );
    }
</script>

<script type="text/javascript" src="//video.isilive.ca/cdn/isi_player.js"></script>

<script type="text/javascript">
    function TestFlow() {
        if (typeof(player) == "undefined" || player == null) {
            window.setTimeout(TestFlow, 100);
        }
        else {
            video.OnPlayerLoaded();
        }
    }
    
    TestFlow();
</script>


        <div id="package-container" style="overflow: auto; height: 100%">
            <nav class="navbar navbar-expand-lg navbar-light navbar-fixed-top navbarbg" role="navigation">
                <div class="container">
                        <ul class="nav navbar-nav narbar-left">
                            <li class="nav-item dropdown">
                                <a href="#" id="navbarDropdown" class="nav-link dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color: white" tabindex="1">
                                    Agenda
                                </a>
                                <span class="caret"></span>
                                <ul class="dropdown-menu packageNav" role="menu" id="Agendadropdownmenu" aria-labelledby="navbarDropdown">
                                    
                                            
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=128fff38-faa9-4b07-a8cc-e13e88688f9d&Agenda=Agenda&lang=English' tabindex='1' lang='en'>
                                                    Agenda
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=128fff38-faa9-4b07-a8cc-e13e88688f9d&Agenda=Agenda&lang=French' tabindex='1' lang='fr'>
                                                    Ordre du jour
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=128fff38-faa9-4b07-a8cc-e13e88688f9d&Agenda=PostMinutes&lang=English' tabindex='1' lang='en'>
                                                    Minutes
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=128fff38-faa9-4b07-a8cc-e13e88688f9d&Agenda=PostMinutes&lang=French' tabindex='1' lang='fr'>
                                                    Procès-verbal
                                                </a>
                                            </li>
                                        
                                        
                                    <li class=''>
                                        <a class="VideoLink dropdown-item" href='./Players/ISIStandAlonePlayer.aspx?Id=128fff38-faa9-4b07-a8cc-e13e88688f9d' title='Open Video in new Window' target="_blank" tabindex="6">
                                            <span class="HiddenAnchorDescription">
                                                Open Video in new Window</span>
                                            Video
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                </div>
            </nav>

            <main class="container body-content" style="background-color: #ffffff">
                <ARTICLE class='Meeting row' ><SECTION class='Agenda col-xs-12 col-sm-12 col-md-8 col-lg-8' ><DIV style="padding:1em; width:auto;" ><HEADER class='AgendaHeader' style="padding:0px 4px" ><DIV class='AgendaHeaderLogo' ><img  src='filestream.ashx?DocumentId=94238' alt='City of Ottawa Logo'  /></DIV><H1 Id='AgendaHeaderTitle' class='AgendaHeaderTitle' >Planning Committee<br/><br/>Agenda<br/></H1><DIV class='AgendaHeaderDetails' ><DIV class='AgendaHeaderDetailsTable' ><DIV class='AgendaMeetingNumber' ><DIV class='AgendaHeaderDetails Label' ><TH scope='Row' >Meeting #:</TH></DIV><DIV class='Value AgendaMeetingNumberText' >69</DIV></DIV><DIV class='AgendaTimeContainer' ><TR ><DIV class='Label' ><TH scope='Row' >Date:</TH></DIV><TD class='Value' colspan='0' headers='' ><DIV class='AgendaMeetingTime Value' ><TIME datetime='2022-09-08' ><SPAN class='Date' ><SPAN class='DayOfWeek' >Thursday, </SPAN>September 08, 2022<SPAN class='DayOfWeek' ></SPAN></SPAN></TIME></DIV></TD></TR></DIV><DIV class='AgendaTimeContainer' ><DIV class='Label' >Time:</DIV><DIV ><DIV class='AgendaMeetingTime Value' ><SPAN class='AgendaMeetingTimeStart' ><TIME datetime='09:30' ><SPAN class='Time' > 9<SPAN class='Minutes' >:30</SPAN><SPAN class='Meridian' > A</SPAN><SPAN class='Meridian Period' >.</SPAN><SPAN class='Meridian' >m</SPAN><SPAN class='Meridian Period' >.</SPAN></SPAN></TIME></SPAN><SPAN class='AgendaMeetingTimeEnd' > - <TIME datetime='15:30' ><SPAN class='Time' > 3<SPAN class='Minutes' >:30</SPAN><SPAN class='Meridian' > P</SPAN><SPAN class='Meridian Period' >.</SPAN><SPAN class='Meridian' >m</SPAN><SPAN class='Meridian Period' >.</SPAN></SPAN></TIME></SPAN></DIV></DIV></DIV><DIV class='AgendaMeetingLocation' ><DIV class='AgendaHeaderDetails Label' ><TH scope='Row' >Location:</TH></DIV><DIV class='Value LocationValue' ><DIV class='Location' >Electronic Participation</DIV><DIV class='Address1' ></DIV><DIV class='Address2' ></DIV><DIV class='Address3' ></DIV></DIV></DIV><DIV ><DIV ><DIV style="height:5px" ></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaHeaderAttendance' ><DIV class='AgendaHeaderAttendanceTable' ><DIV ><DIV class='Label' >Members:</DIV><DIV class='Value' ><UL ><LI >Co-chair Glen Gower,&nbsp;</LI><LI >Co-chair Scott Moffatt,&nbsp;</LI><LI >Councillor Riley Brockington,&nbsp;</LI><LI >Councillor Jean Cloutier,&nbsp;</LI><LI >Councillor Cathy Curry,&nbsp;</LI><LI >Councillor Laura Dudas,&nbsp;</LI><LI >Councillor Allan Hubley,&nbsp;</LI><LI >Councillor Catherine Kitts,&nbsp;</LI><LI >Councillor Jeff Leiper,&nbsp;</LI><LI >Councillor Shawn Menard,&nbsp;</LI><LI > and Councillor Tim Tierney</LI></UL></DIV></DIV></DIV></DIV><DIV class='AgendaHeaderSpecialComments' ><p style="text-align&#58;center;"><span><strong>Kelly Crozier, Committee Coordinator</strong><br><strong>(613) 580-2424, ext. 16875</strong><br><strong>Kelly.Crozier@ottawa.ca</strong><br></span></p></DIV><DIV style="float:none;clear:both" ></DIV><HR class='AgendaHeaderSeparator' /></HEADER><DIV class='AgendaItems' ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem1' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem1TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >1.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(1);" >Notices and meeting information for meeting participants and the public</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(1, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment1' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94206" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Public Notices English - Standing Committee.pdf' target='_blank' ><SPAN class='Link' >Public Notices English - Standing Committee.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment1' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94207" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Public Notices French - Standing Committee.pdf' target='_blank' ><SPAN class='Link' >Public Notices French - Standing Committee.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Notices and meeting information are attached to the agenda and minutes, including&#58; availability of simultaneous interpretation and accessibility accommodations;<em> in camera</em> meeting procedures; information items not subject to discussion; personal information disclaimer for correspondents and public speakers; notices regarding minutes; and remote participation details.</p><br><p>Accessible formats and communication supports are available, upon request.</p><br><p>Except where otherwise indicated, reports requiring Council consideration will be presented to Council on September 21, 2022 in Planning Committee Report 67.</p><br><p>The deadline to register by phone to speak, or submit written comments or visual presentations is 4 pm on September 7, and the deadline to register to speak by email is 8&#58;30 am on September 8.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem2' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem2TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >2.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(2);" >Declarations of Interest</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem3' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem3TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >3.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(3);" >Confirmation of Minutes</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem4' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem4TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >3.1</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(4);" >PLC Minutes 68 – Thursday, August 25, 2022</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ></DIV></LI></UL></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem6' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem6TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >4.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(6);" >Postponements and Deferrals</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem18' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem18TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >4.1</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(18);" >Appeal with respect to Official Plan Amendment and Zoning By-law Amendment - 1186, 1188, and 1194 Wellington Street West </a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(18, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment18' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94214" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.1 - ACS2022-ICS-LEG-0005 - Appeal re OPA and ZBA - 1186, 1188, 1194 Wellington Street West.pdf' target='_blank' ><SPAN class='Link' >4.1 - ACS2022-ICS-LEG-0005 - Appeal re OPA and ZBA - 1186, 1188, 1194 Wellington Street West.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment18' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94215" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.1 - Document 1 - Planning Report ACS2022 PIE PS 0044.pdf' target='_blank' ><SPAN class='Link' >4.1 - Document 1 - Planning Report ACS2022 PIE PS 0044.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment18' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94216" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.1 - Document 2 - Details of Recommended Zoning to Replace Document 3 in Report ACS2022 PI PS 0044.pdf' target='_blank' ><SPAN class='Link' >4.1 - Document 2 - Details of Recommended Zoning to Replace Document 3 in Report ACS2022 PI PS 0044.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-ICS-LEG-0005 - Kitchissippi (15)&#160;</p><br><p><em>Deferred from the Planning Committee meeting of May 12, 2022.</em></p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<p><strong>That Planning Committee recommend that Council&#58;</strong></p>
<ol>
<li><strong>Subject to recommendation 2, endorse the position recommended by the Planning, Real Estate and Economic Development Department in Report ACS2022-PIE-PS-0044;</strong></li>
<li><strong>That the details of the zoning (Document 3 in Report ACS2022-PIE-PS-0044) be in accordance with Document 2 to this report;&#160;</strong></li>
<li><strong>Instruct Legal Services to seek a resolution to the appeals concerning the zoning and official plan amendment applications in respect of 1186, 1188 and 1194 Wellington West in accordance with this report.</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem17' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem17TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >4.2</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(17);" >Development Charge Complaint - 1354, 1376 Carling Avenue</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(17, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment17' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94204" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.2 - ACS2022-PIE-BCS-0002 - Dev Charge Complaint - 1354, 1376 Carling Avenue.pdf' target='_blank' ><SPAN class='Link' >4.2 - ACS2022-PIE-BCS-0002 - Dev Charge Complaint - 1354, 1376 Carling Avenue.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment17' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94205" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.2 - Document 1 - Carling Ottawa Phase 1 - Development Charges Complaint.pdf' target='_blank' ><SPAN class='Link' >4.2 - Document 1 - Carling Ottawa Phase 1 - Development Charges Complaint.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-BCS-0002 - River (Ward 16)</p><br><p><em>Deferred from the Planning Committee meeting of August 25, 2022.</em></p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendation</strong></p>
<p><strong>That Planning Committee recommend that Council dismiss the development charge complaint in respect of 1354, 1376 Carling Avenue.</strong></p></DIV></LI></UL></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem7' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem7TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(7);" >Planning, Real Estate and Economic Development Department</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem19' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem19TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.1</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(19);" >Official Plan and Zoning By-Law Amendment – 1071 Ambleside Drive</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(19, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment19' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94217" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.1 - ACS2022-PIE-PS-0095 - OPA and ZBLA – 1071 Ambleside Drive.pdf' target='_blank' ><SPAN class='Link' >5.1 - ACS2022-PIE-PS-0095 - OPA and ZBLA – 1071 Ambleside Drive.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-PS-0095 - Bay (Ward 7)</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<ol>
<li><strong>That Planning Committee Recommend Council&#160;</strong><br>
<ol style="list-style-type&#58;lower-alpha;">
<li><strong>Approve an amendment to the Cleary and New Orchard Area Site-Specific Policies in the Official Plan Volume 2b by adding a new policy permitting building heights of up to 32 storeys, specific to the site at 1071 Ambleside Drive, as detailed in Document 2a.</strong></li>
<li><strong>Approve an amendment to Zoning By-law 2008-250 for part of 1071 Ambleside Drive to permit a residential development with heights up to 32 storeys, as detailed in Documents 3 and 4.</strong></li>
<li><strong>Direct staff to incorporate an amendment to the Sherbourne and New Orchard Secondary Plan in the New Official Plan Volume 2a, as detailed in Document 2b, as part of the new Official Plan being considered for approval by the Ministry of Municipal Affairs and Housing.</strong></li>
</ol>
</li>
<li><strong>That Planning Committee approve the Consultation Details Section of this report be included as part of the ‘brief explanation’ in the Summary of Written and Oral Public Submissions, to be prepared by the Office of the City Clerk and submitted to Council in the report titled, “Summary of Oral and Written Public Submissions for Items Subject to the <em>Planning Act</em> ‘Explanation Requirements’ at the City Council Meeting of September 21,” subject to submissions received between the publication of this report and the time of Council’s decision.</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem20' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem20TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.2</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(20);" >Zoning By-law Amendment - 70 and 74 Nicholas Street </a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(20, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment20' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94218" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.2 - ACS2022-PIE-PS-0118 - ZBLA - 70, 74 Nicholas Street.pdf' target='_blank' ><SPAN class='Link' >5.2 - ACS2022-PIE-PS-0118 - ZBLA - 70, 74 Nicholas Street.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-PS-0118 - Rideau-Vanier (Ward 12)&#160;</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<ol>
<li><strong>That Planning Committee recommend Council approve an amendment to Zoning By-law 2008-250 for 70 and 74 Nicholas Street, as shown in Document 1, to create a new exception and to remove the subject property from the Heritage Overlay, to permit the construction of a 21-storey, mixed-use building incorporating the City Registry Office, a designated heritage building, as detailed in Document 2.</strong></li>
<li><strong>That Planning Committee approve the Consultation Details Section of this report be included as part of the ‘brief explanation’ in the Summary of Written and Oral Public Submissions, to be prepared by the Office of the City Clerk and submitted to Council in the report titled, “Summary of Oral and Written Public Submissions for Items Subject to the <em>Planning Act</em> ‘Explanation Requirements’ at the City Council Meeting of 21 September 2022” subject to submissions received between the publication of this report and the time of Council’s decision.</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem21' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem21TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.3</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(21);" >Application to alter 70 Nicholas Street, a property designated under Part IV of the Ontario Heritage Act</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(21, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94208" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - ACS2022-PIE-RHU-0029 - 70 Nicholas Street.pdf' target='_blank' ><SPAN class='Link' >5.3 - ACS2022-PIE-RHU-0029 - 70 Nicholas Street.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94209" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 4 - Statement of Reasons for the Designation.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 4 - Statement of Reasons for the Designation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94210" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 5 - Cultural Heritage Impact Statement.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 5 - Cultural Heritage Impact Statement.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94211" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 6 - Architectural Plans.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 6 - Architectural Plans.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94212" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 7 - Landscape Plan.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 7 - Landscape Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94213" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 8 - Conservation Plan.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 8 - Conservation Plan.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-RHU-0029 - Rideau-Vanier (Ward 12)&#160;</p><br><p><em>The statutory 90-day timeline for consideration of this application under the </em>Ontario Heritage Act<em> will expire on September 21, 2022.</em></p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<p><strong>That Planning Committee recommend that Council&#58;</strong></p>
<ol>
<li><strong>Approve the application to alter the City Registry Office, 70 Nicholas Street, according to the drawings prepared by Zeidler Architecture, dated April 29, 2022 and attached as Document 6, conditional upon&#58;</strong><br>
<ol style="list-style-type&#58;lower-alpha;">
<li><strong>The applicant identifying opportunities to enhance the proposed landscaping and public realm in consultation with Heritage Planning, Development Review, and Urban Design staff prior to Site Plan Control Approval. This may include reducing the hardscaping around the City Registry Office building and establishing a connection to the arts district through lighting and public art;</strong></li>
</ol>
</li>
<li><strong>Delegate the authority for minor design changes to the General Manager, Planning, Real Estate and Economic Development Department; and</strong></li>
<li><strong>Approve the issuance of the heritage permit with a two-year expiry date from the date of issuance unless otherwise extended by Council.&#160;</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem22' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem22TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.4</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(22);" >Zoning By-law Amendment - 1649 Montreal Road and 741 Blair Road</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(22, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment22' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94219" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.4 - ACS2022-PIE-PS-0100 - ZBLA- 1649 Montreal Road_741 Blair Road.pdf' target='_blank' ><SPAN class='Link' >5.4 - ACS2022-PIE-PS-0100 - ZBLA- 1649 Montreal Road_741 Blair Road.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-PS-0100 - Beacon Hill-Cyrville (Ward 11)&#160;</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<ol>
<li><strong>That Planning Committee recommend Council refuse an amendment to Zoning By-law 2008-250 for 1649 Montreal Road and 741 Blair Road, as shown in Document 1, to permit a 26-storey mixed-use building, as detailed in Documents 2 and 3.</strong></li>
<li><strong>That Planning Committee approve the Consultation Details Section of this report be included as part of the ‘brief explanation’ in the Summary of Written and Oral Public Submissions, to be prepared by the Office of the City Clerk and submitted to Council in the report titled, “Summary of Oral and Written Public Submissions for Items Subject to the <em>Planning Act</em> ‘Explanation Requirements’ at the City Council Meeting of September 21, 2022,” subject to submissions received between the publication of this report and the time of Council’s decision.</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem23' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem23TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.5</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(23);" >Zoning By-law Amendment – 2254, 2262, 2270 Braeside Avenue, and 2345 Alta Vista Drive </a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(23, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94220" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.5 - ACS2022-PIE-PS-0109 - ZBLA – 2254, 2262, 2270 Braeside Avenue_2345 Alta Vista Drive.pdf' target='_blank' ><SPAN class='Link' >5.5 - ACS2022-PIE-PS-0109 - ZBLA – 2254, 2262, 2270 Braeside Avenue_2345 Alta Vista Drive.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-PS-0109 - Alta Vista (Ward 18)&#160;</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<ol>
<li><strong>That Planning Committee recommend Council approve an amendment to Zoning By-law 2008-250 for 2254, 2262, 2270 Braeside Avenue, and 2345 Alta Vista Drive, as shown in Document 1, to permit the construction of a low-rise apartment building, as detailed in Document 2.</strong></li>
<li><strong>That Planning Committee approve the Consultation Details Section of this report be included as part of the ‘brief explanation’ in the Summary of Written and Oral Public Submissions, to be prepared by the Office of the City Clerk and submitted to Council in the report titled, “Summary of Oral and Written Public Submissions for Items Subject to the <em>Planning Act</em> ‘Explanation Requirements’ at the City Council Meeting of September 21, 2022,” subject to submissions received between the publication of this report and the time of Council’s decision.</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem24' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem24TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.6</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(24);" >Orléans Corridor Secondary Plan</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(24, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94221" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - ACS2022-PIE-EDP-0024 - Orleans Corridor Secondary Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - ACS2022-PIE-EDP-0024 - Orleans Corridor Secondary Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94222" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 1 - Orleans Corridor Secondary Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 1 - Orleans Corridor Secondary Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94223" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 2 - Schedule A - Orleans Corridor Designation Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 2 - Schedule A - Orleans Corridor Designation Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94224" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 3 - Schedule B - Orleans Corridor Maximum Building Heights.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 3 - Schedule B - Orleans Corridor Maximum Building Heights.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94225" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 4 - Schedule C - Orleans Corridor Public Realm and Mobility Improvements.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 4 - Schedule C - Orleans Corridor Public Realm and Mobility Improvements.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94226" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 5 - Annex A Interchange Designs.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 5 - Annex A Interchange Designs.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94227" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 6a - St Joseph Blvd Concept Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 6a - St Joseph Blvd Concept Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >8.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94228" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 6b - St Joseph Blvd Cross Sections and Renderings.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 6b - St Joseph Blvd Cross Sections and Renderings.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >9.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94229" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 6c - St Joseph Blvd Conceptual Design Memos.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 6c - St Joseph Blvd Conceptual Design Memos.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >10.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94230" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 7 - Changes to Plan from Technical Circulation.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 7 - Changes to Plan from Technical Circulation.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-PIE-EDP-0024 - Orléans (Ward 1), Innes (Ward 2)</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<p><strong>That Planning Committee recommend that Council&#58;</strong></p>
<ol>
<li><strong>Authorize the adoption of an amendment to the new Official Plan, as detailed in Document 1, into Volume 2A – Urban Secondary Plans, upon the coming into force of the new Official Plan.</strong></li>
<li><strong>Authorize the adoption of an amendment to the new Official Plan to incorporate changes to Schedule C16 of Volume 1 of the new Official Plan for Road Right-of-Way Protection Requirements for Youville Drive and Belcourt Boulevard between St. Joseph Boulevard and Toulouse Crescent as detailed in Document 1, upon the coming into force of the new Official Plan.</strong></li>
<li><strong>Authorize the adoption of an amendment to the new Official Plan to repeal Area-Specific Policy no. 27 from Volume 2C of the new Official Plan for the property at 8600 Jeanne d’Arc Boulevard North, upon the coming into force of the new Official Plan.</strong></li>
<li><strong>Repeal the St. Joseph Boulevard Corridor Study Community Design Plan effective upon the Official Plan Amendment set forth in Document 1 coming into force.&#160;</strong></li>
<li><strong>Approve the concept plan for St Joseph Boulevard as a complete street as shown in Document 6;</strong></li>
<li><strong>The Planning Committee approve the Consultation Details Section of this report be included as part of the ‘brief explanation’ in the Summary of Written and Oral Public Submissions, to be prepared by the Office of the City Clerk and submitted to Council in the report titled, “Summary of Oral and Written Public Submissions for Items Subject to the <em>Planning Act</em> ‘Explanation Requirements’ at the City Council Meeting of September 21, 2022,” subject to submissions received between the publication of this report and the time of Council’s decision.</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem8' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem8TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >6.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(8);" >Finance Services Department</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem25' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem25TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >6.1</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(25);" >Treasurer’s Report on 2021 Growth-Related Revenues</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(25, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94232" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - ACS2022-FSD-FSP-0014 - 2021 Treasurer's Report.pdf' target='_blank' ><SPAN class='Link' >6.1 - ACS2022-FSD-FSP-0014 - 2021 Treasurer's Report.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94233" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 1- Summary Statement of Development Charges Reserve Funds.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 1- Summary Statement of Development Charges Reserve Funds.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94234" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 2 - Details of 2021 Development Charge Capital Project Funding.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 2 - Details of 2021 Development Charge Capital Project Funding.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94235" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 3 - Details of 2021 Citywide and Ward CILP Capital Project Funding.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 3 - Details of 2021 Citywide and Ward CILP Capital Project Funding.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94236" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 4 - Section 37 Deferred Revenue Accounts.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 4 - Section 37 Deferred Revenue Accounts.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94237" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 5 - Summary List of Development Charge Exemptions Granted at Building Permit Issuance.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 5 - Summary List of Development Charge Exemptions Granted at Building Permit Issuance.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-FSD-FSP-0014 - City-wide</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendation</strong></p>
<p><strong>That the Planning Committee recommend that Council receive this report for information.</strong></p></DIV></LI></UL></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem10' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem10TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >7.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(10);" >In Camera Items</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ></DIV></LI></UL></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem12' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem12TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >8.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(12);" >Motions of Which Notice has been Previously Given </a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem26' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem26TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >8.1</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(26);" >Councillor L. Dudas - Motion – Stepbacks within the Innes Road Zoning Review Area </a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(26, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94231" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='8.1 - ACS2022-OCC-PLC-0009 - Motion - Stepbacks - Innes.pdf' target='_blank' ><SPAN class='Link' >8.1 - ACS2022-OCC-PLC-0009 - Motion - Stepbacks - Innes.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>File No. ACS2022-OCC-PLC-0009 - Innes (Ward 2)&#160;</p></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><UL class='AgendaItemMotions' ><LI class='AgendaItemMotion' ><DIV class='Number' ></DIV><DIV class='MotionText RichText' ><p><strong>Report recommendations</strong></p>
<p><strong>That the Planning Committee recommend Council approve that staff be directed&#58;</strong></p>
<ol>
<li><strong>to investigate amending the Zoning By-law in the next Omnibus Amendment so that stepbacks within the Innes Road Zoning Review Area (Document 1) are applied to both the rear and side yards where development abuts low-rise residential zones (properties subject to an active planning application will be exempt from these changes);</strong></li>
<li><strong>to re-examine the appropriateness of the AM11 Subzone within the Innes Road Zoning Review Area as part of the New Zoning By-law Project, as concerns related to building height and compatibility with the surrounding community remain. &#160;</strong></li>
</ol></DIV></LI></UL></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem13' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem13TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >9.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(13);" >Notices of Motions (For Consideration at Subsequent Meeting)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem14' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem14TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >10.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(14);" >Inquiries</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem15' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem15TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >11.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(15);" >Other Business</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem16' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem16TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >12.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(16);" >Adjournment</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Next Meeting</p><br><p>Thursday, September 22, 2022.</p></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION><SECTION class='Details col-xs-3 col-sm-3 col-md-4 col-lg-4 col-xs-offset-9 col-sm-offset-9' ><DIV class='affix affix-top col-xs-3 col-sm-3 col-md-4 col-lg-4 col-xs-offset-9 col-sm-offset-9 d-sm-block' style="width:inherit; padding-right:5%;" ><DIV class='panel panel-default' style="width:auto;box-shadow:3px 3px 3px rgba(0,0,0,.33);" ><DIV class='VideoPlayerContainer panel panel-default' ><DIV class='VideoPlayer' ></DIV></DIV><DIV class='visible-md visible-lg AgendaItemSelectedDetailsContainer' ><DIV class='panel-body AgendaItemAttachment AgendaItemAttachmentNotSelected' >No Item Selected</DIV><DIV class='panel panel-default AgendaItemSelectedDetails' style="display:none" ><DIV class='panel-heading' ><SPAN class='SelectedItemCounter' ></SPAN> &nbsp; <SPAN class='SelectedItemTitle' ></SPAN></DIV><DIV class='panel-body' ><DIV class='AgendaItemAttachmentsArea' ><DIV class='AgendaItemAttachmentsList' ><DIV class='AgendaItemAttachment AgendaItemAttachmentNone' >This item has no attachments</DIV><DIV class='AgendaItemAttachment AgendaItemAttachment17' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94204" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.2 - ACS2022-PIE-BCS-0002 - Dev Charge Complaint - 1354, 1376 Carling Avenue.pdf' target='_blank' ><SPAN class='Link' >4.2 - ACS2022-PIE-BCS-0002 - Dev Charge Complaint - 1354, 1376 Carling Avenue.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment17' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94205" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.2 - Document 1 - Carling Ottawa Phase 1 - Development Charges Complaint.pdf' target='_blank' ><SPAN class='Link' >4.2 - Document 1 - Carling Ottawa Phase 1 - Development Charges Complaint.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment1' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94206" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Public Notices English - Standing Committee.pdf' target='_blank' ><SPAN class='Link' >Public Notices English - Standing Committee.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment1' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94207" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Public Notices French - Standing Committee.pdf' target='_blank' ><SPAN class='Link' >Public Notices French - Standing Committee.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94208" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - ACS2022-PIE-RHU-0029 - 70 Nicholas Street.pdf' target='_blank' ><SPAN class='Link' >5.3 - ACS2022-PIE-RHU-0029 - 70 Nicholas Street.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94209" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 4 - Statement of Reasons for the Designation.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 4 - Statement of Reasons for the Designation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94210" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 5 - Cultural Heritage Impact Statement.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 5 - Cultural Heritage Impact Statement.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94211" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 6 - Architectural Plans.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 6 - Architectural Plans.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94212" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 7 - Landscape Plan.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 7 - Landscape Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment21' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94213" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.3 - Document 8 - Conservation Plan.pdf' target='_blank' ><SPAN class='Link' >5.3 - Document 8 - Conservation Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment18' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94214" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.1 - ACS2022-ICS-LEG-0005 - Appeal re OPA and ZBA - 1186, 1188, 1194 Wellington Street West.pdf' target='_blank' ><SPAN class='Link' >4.1 - ACS2022-ICS-LEG-0005 - Appeal re OPA and ZBA - 1186, 1188, 1194 Wellington Street West.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment18' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94215" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.1 - Document 1 - Planning Report ACS2022 PIE PS 0044.pdf' target='_blank' ><SPAN class='Link' >4.1 - Document 1 - Planning Report ACS2022 PIE PS 0044.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment18' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94216" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='4.1 - Document 2 - Details of Recommended Zoning to Replace Document 3 in Report ACS2022 PI PS 0044.pdf' target='_blank' ><SPAN class='Link' >4.1 - Document 2 - Details of Recommended Zoning to Replace Document 3 in Report ACS2022 PI PS 0044.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment19' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94217" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.1 - ACS2022-PIE-PS-0095 - OPA and ZBLA – 1071 Ambleside Drive.pdf' target='_blank' ><SPAN class='Link' >5.1 - ACS2022-PIE-PS-0095 - OPA and ZBLA – 1071 Ambleside Drive.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment20' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94218" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.2 - ACS2022-PIE-PS-0118 - ZBLA - 70, 74 Nicholas Street.pdf' target='_blank' ><SPAN class='Link' >5.2 - ACS2022-PIE-PS-0118 - ZBLA - 70, 74 Nicholas Street.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment22' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94219" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.4 - ACS2022-PIE-PS-0100 - ZBLA- 1649 Montreal Road_741 Blair Road.pdf' target='_blank' ><SPAN class='Link' >5.4 - ACS2022-PIE-PS-0100 - ZBLA- 1649 Montreal Road_741 Blair Road.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94220" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.5 - ACS2022-PIE-PS-0109 - ZBLA – 2254, 2262, 2270 Braeside Avenue_2345 Alta Vista Drive.pdf' target='_blank' ><SPAN class='Link' >5.5 - ACS2022-PIE-PS-0109 - ZBLA – 2254, 2262, 2270 Braeside Avenue_2345 Alta Vista Drive.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94221" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - ACS2022-PIE-EDP-0024 - Orleans Corridor Secondary Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - ACS2022-PIE-EDP-0024 - Orleans Corridor Secondary Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94222" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 1 - Orleans Corridor Secondary Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 1 - Orleans Corridor Secondary Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94223" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 2 - Schedule A - Orleans Corridor Designation Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 2 - Schedule A - Orleans Corridor Designation Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94224" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 3 - Schedule B - Orleans Corridor Maximum Building Heights.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 3 - Schedule B - Orleans Corridor Maximum Building Heights.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94225" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 4 - Schedule C - Orleans Corridor Public Realm and Mobility Improvements.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 4 - Schedule C - Orleans Corridor Public Realm and Mobility Improvements.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94226" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 5 - Annex A Interchange Designs.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 5 - Annex A Interchange Designs.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94227" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 6a - St Joseph Blvd Concept Plan.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 6a - St Joseph Blvd Concept Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >8.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94228" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 6b - St Joseph Blvd Cross Sections and Renderings.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 6b - St Joseph Blvd Cross Sections and Renderings.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >9.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94229" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 6c - St Joseph Blvd Conceptual Design Memos.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 6c - St Joseph Blvd Conceptual Design Memos.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >10.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94230" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='5.6 - Document 7 - Changes to Plan from Technical Circulation.pdf' target='_blank' ><SPAN class='Link' >5.6 - Document 7 - Changes to Plan from Technical Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94231" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='8.1 - ACS2022-OCC-PLC-0009 - Motion - Stepbacks - Innes.pdf' target='_blank' ><SPAN class='Link' >8.1 - ACS2022-OCC-PLC-0009 - Motion - Stepbacks - Innes.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94232" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - ACS2022-FSD-FSP-0014 - 2021 Treasurer's Report.pdf' target='_blank' ><SPAN class='Link' >6.1 - ACS2022-FSD-FSP-0014 - 2021 Treasurer's Report.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94233" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 1- Summary Statement of Development Charges Reserve Funds.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 1- Summary Statement of Development Charges Reserve Funds.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94234" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 2 - Details of 2021 Development Charge Capital Project Funding.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 2 - Details of 2021 Development Charge Capital Project Funding.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94235" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 3 - Details of 2021 Citywide and Ward CILP Capital Project Funding.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 3 - Details of 2021 Citywide and Ward CILP Capital Project Funding.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94236" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 4 - Section 37 Deferred Revenue Accounts.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 4 - Section 37 Deferred Revenue Accounts.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=94237" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='6.1 - Document 5 - Summary List of Development Charge Exemptions Granted at Building Permit Issuance.pdf' target='_blank' ><SPAN class='Link' >6.1 - Document 5 - Summary List of Development Charge Exemptions Granted at Building Permit Issuance.pdf</SPAN></a></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION></ARTICLE><script type='text/javascript'>
function toggleSelectedDetails(ItemId, tab) {
    window.history.pushState('', '', UpdateQuery('Tab', tab));

    if (tab == 'comments') {
        $('#selectedTabAgendaComments').css({'font-weight':'bold', 'color':'black'});
        $('#selectedTabAgendaComments').attr({'aria-selected':'true'});
        $('#selectedTabAgendaAttachment').css({'font-weight':'normal', 'color': '#595959'});
        $('#selectedTabAgendaAttachment').attr({'aria-selected':'false'});
        $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
        $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'true'});
        $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'normal','color': '#595959' });
        $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'false'});

        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
            $('.AgendaItemAttachmentNone').hide();
        }
        else {
            $('.AgendaItemAttachment' + ItemId).hide();
        }

        if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
            $('.AgendaItemPublicCommentNone').show();
        }
        else {
            $('.AgendaItemPublicComment' + ItemId).show();
        }
        window.dispatchEvent(new Event('resize'));
    }
    else {
        $('#selectedTabAgendaAttachment').css({'font-weight':'bold', 'color':'black'});
        $('#selectedTabAgendaAttachment').attr({'aria-selected':'true'});
        $('#selectedTabAgendaComments').css({'font-weight':'normal', 'color': '#595959'});
        $('#selectedTabAgendaComments').attr({'aria-selected':'false'});
        $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
        $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'true'});
        $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'normal','color': '#595959' });
        $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'false'});

        if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
            $('.AgendaItemPublicCommentNone').hide();
        }
        else {
            $('.AgendaItemPublicComment' + ItemId).hide();
        }

        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
            $('.AgendaItemAttachmentNone').show();
        }
        else {
            $('.AgendaItemAttachment' + ItemId).show();
        }
    }

    var attachmentCounts = $('.AgendaItemPublicCommentList > .AgendaItemAttachment' + ItemId).length;
    var commentCounts = $('.AgendaItemPublicCommentList > .AgendaItemPublicComment' + ItemId).length;
                                
    $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
    $('#selectedTabAgendaCommentsCount').first().text(' (' + commentCounts + ')');
    
    $('#selectedTabAgendaAttachmentCount' + ItemId).first().text(' (' + attachmentCounts + ') ');
    $('#selectedTabAgendaCommentsCount' + ItemId).first().text(' (' + commentCounts + ')');
}

function hilightItem(ItemId) {
    var tabindex = $('#AgendaItemAgendaItem' + ItemId + 'TitleHeader > .AgendaItemNavigate > .AgendaItemTitle > A').attr('tabindex');
    $('#selectedTabAgendaAttachment').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaAttachmentCount').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaComments').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });
    $('#selectedTabAgendaCommentsCount').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });
    $('#selectedTabAgendaAttachment' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaAttachmentCount' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaComments' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });
    $('#selectedTabAgendaCommentsCount' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });

    $('.hilighted').removeClass('hilighted');
    $('.AgendaItemAttachment').hide();
    $('.AgendaItemAttachment').parent().hide();
    $('.AgendaItemPublicComment').hide();

    if (ItemId != '') {
        var item = '.AgendaItem' + ItemId;

        $(item + ' .AgendaItemTitleRow').addClass('hilighted');
        $(item + ' .LateClosedAgendaItemTitleRow').addClass('hilighted');
        $('.AgendaItemAttachementsHeader').show();
        $('.AgendaItemPublicCommentHeader').show();

        $('.AgendaItemSelectedDetails').show();
        $('.SelectedItemCounter').text($(item + ' .AgendaItemCounter').text());
        $('.SelectedItemTitle').text($(item + ' .AgendaItemTitle').text());

        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
            $('.AgendaItemAttachmentNone').show();
            $('.AgendaItemAttachmentNone').parent().show();
        }
        else {
            $('.AgendaItemAttachment' + ItemId).show();
            $('.AgendaItemAttachment' + ItemId).parent().show();
        }
        
        if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
            $('.AgendaItemPublicCommentNone').show();
            $('.AgendaItemPublicCommentNone').parent().show();
        }
        else {
            $('.AgendaItemPublicComment' + ItemId).show();
            $('.AgendaItemPublicComment' + ItemId).parent().show();
        }
    }
    else {  
        $('.AgendaItemSelectedDetails').hide();
        $('.AgendaItemAttachmentNotSelected').show();
    }
}</script><script type='text/javascript'></script>
            </main>
        </div>
        <!-- Bootstrap Modal -->
        <div id='bootstrapModal' aria-live="polite" aria-hidden="true" class='modal fade in' style='display: none;'>
            <div class='modal-dialog modal-dialog-scrollable'>
                <div class='modal-content'>
                    <div class='modal-header'>
                        <h3 id='bootstrapModalTitle' class='modal-title' style='font-size: 17px'>Title</h3>
                        <button type='button' class='close' data-dismiss='modal'><span aria-hidden='true'>×</span> <span class='sr-only'>close</span></button>
                    </div>
                    <div id='bootstrapModalBody' class='modal-body' style="padding: 0px">
                        <div class='embed-responsive z-depth-1-half' id="modalIframeDiv">
                            <iframe id="modalIframe" title="Share Content Options" class='embed-responsive-item' src='' allowfullscreen></iframe>
                        </div>
                    </div>
                    <div class='modal-footer' id="bootstrapModalFooter" style='margin-top: 0; min-height: 55px;'>
                    </div>
                </div>
            </div>
        </div>

        <footer class="navbar navbar-default navbar-fixed-bottom navbarbg">
            <div class="container text-right">
                <div class="navbar-inner navbar-content-center footeralign">
                    <div class="float-right">
                        
                        <copyright class="poweredBy"><a href="https://escribemeetings.com" target="_blank" id="lnkPoweredBy">Powered by eSCRIBE Software Ltd.</a></copyright>
                        
                    </div>
                </div>
            </div>
        </footer>

        <script type="text/javascript">
            var AgendaSize = parseFloat($(".Agenda *").css('font-size'));
            var TitleSize = parseFloat($(".AgendaHeaderTitle").css('font-size'));
            var MeetingTitle = "Planning Committee - September 08, 2022";
            var itemTitles = { };
            var Sharing = false;
            var AllowComment = "False";
			var PublicCommentSettings = [{"Id":1,"AllowPublicComment":false},{"Id":2,"AllowPublicComment":false},{"Id":3,"AllowPublicComment":false},{"Id":4,"AllowPublicComment":false},{"Id":6,"AllowPublicComment":false},{"Id":7,"AllowPublicComment":false},{"Id":8,"AllowPublicComment":false},{"Id":10,"AllowPublicComment":false},{"Id":12,"AllowPublicComment":false},{"Id":13,"AllowPublicComment":false},{"Id":14,"AllowPublicComment":false},{"Id":15,"AllowPublicComment":false},{"Id":16,"AllowPublicComment":false},{"Id":17,"AllowPublicComment":false},{"Id":18,"AllowPublicComment":false},{"Id":19,"AllowPublicComment":false},{"Id":20,"AllowPublicComment":false},{"Id":21,"AllowPublicComment":false},{"Id":22,"AllowPublicComment":false},{"Id":23,"AllowPublicComment":false},{"Id":24,"AllowPublicComment":false},{"Id":25,"AllowPublicComment":false},{"Id":26,"AllowPublicComment":false},{"Id":1,"AllowPublicComment":false},{"Id":2,"AllowPublicComment":false},{"Id":3,"AllowPublicComment":false},{"Id":4,"AllowPublicComment":false},{"Id":6,"AllowPublicComment":false},{"Id":7,"AllowPublicComment":false},{"Id":8,"AllowPublicComment":false},{"Id":10,"AllowPublicComment":false},{"Id":12,"AllowPublicComment":false},{"Id":13,"AllowPublicComment":false},{"Id":14,"AllowPublicComment":false},{"Id":15,"AllowPublicComment":false},{"Id":16,"AllowPublicComment":false},{"Id":17,"AllowPublicComment":false},{"Id":18,"AllowPublicComment":false},{"Id":19,"AllowPublicComment":false},{"Id":20,"AllowPublicComment":false},{"Id":21,"AllowPublicComment":false},{"Id":22,"AllowPublicComment":false},{"Id":23,"AllowPublicComment":false},{"Id":24,"AllowPublicComment":false},{"Id":25,"AllowPublicComment":false},{"Id":26,"AllowPublicComment":false}];
            var LeaveComment = "Leave comment";

            function PrintAgenda() {
                window.print();
            };

            $(".VideoLink").click(function (e) {
                try {
                    $f().pause();
                }
                catch (e) {
                }
            });

            function detailsheight() {
                return $(".Details > div").height();
            };

            function SetDetailsHeight(AgendaItemId) {
                try {
                    if (Window_OnResize) {
                        Window_OnResize();
                    }
                        
                    //For public comment narrow and wide view when resize window
                    $(window).trigger('resize');

                }
                catch (e) {
                }
            }

            function CreateSocialLink(AgendaItemId) {
                var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                var language = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("lang").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                var publicCommentUrl = "PublicComment.aspx?agendaId=" + AgendaItemId + "&meetingId=" + meetingId + "&lang=" + language;
                var allowComment = AllowComment == "True" ? true : false;           
                    
                if(allowComment) {
                    for(i = 0; i < PublicCommentSettings.length; i++) {
                        var setting = PublicCommentSettings[i];
                        if(setting.Id == AgendaItemId) {
                            allowComment = setting.AllowPublicComment;
                            break;
                        }
                    }
                }

                var SocialItems = setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, false);

                $('.SocialIcons').remove();
                $(".hilighted .AgendaItemNavigate").append($("<div class='SocialIcons visible-xs visible-sm'>").append(SocialItems));
                $('.SelectedItemTitle').parent().append(SocialItems);
                $('.SelectedItemTitle').parent().addClass("clearfix");

                //visible-xs visible-sm
                //add the icons under narrow view if not exist
                var iconDiv = $('.AgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemIcons');

                if(iconDiv.length == 0) {
                    iconDiv = $('.AgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemTitle');
                }

                $(setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, true)).insertAfter(iconDiv);
                
                var closedIconDiv = $('.LateClosedAgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemIcons');
                
                if(closedIconDiv.length == 0) {
                    closedIconDiv = $('.LateClosedAgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemTitle');
                }
                $(setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, true)).insertAfter(closedIconDiv);
                SetDetailsHeight(AgendaItemId);
            }

            function setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, isNarrow) {
                var cssClass = isNarrow ? " class='visible-xs visible-sm' " : "";
                var padding = isNarrow ? "style='padding-top: 5px;'" : "";
                var btnId = isNarrow ? "id='narrow-leave-comment-button'" : "";
                    
                if(allowComment && !Sharing) {
                    var SocialItems = $("<div" + cssClass + ">")
                           .addClass("sharing SocialIcons")
                           .css("float", "right")
                           .append(
                               $("<a class='CommentIcon' aria-label='submit public comment'>")
                                   .attr("href", publicCommentUrl)
                                   .append("<span class='btn btn-primary btn-sm' style='vertical-align:middle;' " + btnId + ">" + LeaveComment + "<span>")
                           );

                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                }
                else if (Sharing && !allowComment) {
                    var SocialItems =
                        $("<div" + cssClass + padding + ">")
                            .addClass("sharing SocialIcons")
                            .css("float", "right")
                            .append(
                                $("<a style='padding-right: 13px;'>")
                                    .attr("href", 'Sharing.aspx?u=' + encodeURIComponent(window.location.href))
                                    .append('<img src="Images/share.PNG" style="height:1em;" alt="This can be shared, click to open the sharing popup." title="Share">')
                            );
                }
                else if (Sharing && allowComment) {
                    var SocialItems = $("<div" + cssClass + ">")
                                .addClass("sharing SocialIcons")
                                .css("float", "right")
                                .append(
                                   $("<a class='CommentIcon' aria-label='submit public comment'>")
                                       .attr("href", publicCommentUrl)
                                       .append("<span class='btn btn-primary btn-sm' style='vertical-align:middle;' " + btnId + ">" + LeaveComment + "<span>"))
                                
                                .append(
                                    $("<a style='padding-right: 19px;width: 6%;padding-top: 5px;padding-left: 5px;'>")
                                        .attr("href", 'Sharing.aspx?u=' + encodeURIComponent(window.location.href))
                                        .append('<img src="Images/share.PNG" style="height:1em;" alt="This can be shared, click to open the sharing popup." title="Share">')
                                );

                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                    $('.LateClosedAgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.LateClosedAgendaItemTitleRow hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                }

                return SocialItems;
            }

            function getParameterByName(name) {
                name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
                var regex = new RegExp('[\\?&]' + name + '=([^&#]*)'),
                results = regex.exec(location.search);
                return results == null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
            }

            function UpdateTitle(AgendaItemId) {
                if (itemTitles[AgendaItemId] != null) {
                    document.title = itemTitles[AgendaItemId] + ' - ' + MeetingTitle;
                }
                else {
                    document.title = MeetingTitle;
                }
            }

            // when selected item has changed update page //
            $(document).on("item:selected", function (e, id, scroll) {
                var selectedTab = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Tab").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                  
                hilightItem(id);
                CreateSocialLink(id);
                UpdateTitle(id);

                //Replace the Leave Comment button to icon
                var windowWidth = $(window).width();
                $('#narrow-leave-comment-button').html("<span class='las la-comment-alt' style='vertical-align: middle' title='Leave Comment'></span>");
                $('#narrow-leave-comment-button').attr("aria-label", "submit a public comment on this agenda item");
                    
                if (scroll == true) {
                    // scroll item into view //
                    var current = $(".AgendaItemTitleRow.hilighted");

                    if (current.length > 0) {
                        current[0].scrollIntoView();
                    }
                }

                if(selectedTab) {
                    toggleSelectedDetails(id, selectedTab);
                }
                else {
                    toggleSelectedDetails(id, 'attachments');
                }

                var attachmentCounts = $('.AgendaItemPublicCommentList >.OrderedAttachments > .OrderedAttachment > .AgendaItemAttachment' + id).length;											
                $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
            });

            function toggleSelectedDetails(ItemId, tab) {
                window.history.pushState('', '', UpdateQuery('Tab', tab));

                if (tab == 'comments') {
                    $('#selectedTabAgendaComments').css({'font-weight':'bold', 'color':'black'});
                    $('#selectedTabAgendaComments').attr({'aria-selected':'true'});
                    $('#selectedTabAgendaAttachment').css({'font-weight':'normal', 'color': '#595959'});
                    $('#selectedTabAgendaAttachment').attr({'aria-selected':'false'});
                    $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
                    $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'true'});
                    $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'normal','color': '#595959' });
                    $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'false'});

                    if ($('.OrderedAttachments').length && $('.OrderedAttachments').is(":visible")) {
                        if ($('.OrderedAttachments >.OrderedAttachment >.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').hide();
                        }
                        else {
                            $('.OrderedAttachments >.OrderedAttachment >.AgendaItemAttachment' + ItemId).hide();
                        }
                    }
                    else {
                        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').hide();
                        }
                        else {
                            $('.AgendaItemAttachment' + ItemId).hide();
                        }
                    }

                    if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
                        $('.AgendaItemPublicCommentNone').show();
                    }
                    else {
                        $('.AgendaItemPublicComment' + ItemId).show();
                    }
                    window.dispatchEvent(new Event('resize'));
                }
                else {
                    $('#selectedTabAgendaAttachment').css({'font-weight':'bold', 'color':'black'});
                    $('#selectedTabAgendaAttachment').attr({'aria-selected':'true'});
                    $('#selectedTabAgendaComments').css({'font-weight':'normal', 'color': '#595959'});
                    $('#selectedTabAgendaComments').attr({'aria-selected':'false'});
                    $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
                    $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'true'});
                    $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'normal','color': '#595959' });
                    $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'false'});

                    if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
                        $('.AgendaItemPublicCommentNone').hide();
                    }
                    else {
                        $('.AgendaItemPublicComment' + ItemId).hide();
                    }

                    if ($('.OrderedAttachments').length && $('.OrderedAttachments').is(":visible")) {
                        if ($('.OrderedAttachments>.OrderedAttachment>.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').show();
                        }
                        else {
                            $('.OrderedAttachments >.OrderedAttachment>.AgendaItemAttachment' + ItemId).show();
                        }
                    }
                    else {
                        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').show();
                        }
                        else {
                            $('.AgendaItemAttachment' + ItemId).show();
                        }
                    }
                }

                var attachmentCounts = $('.AgendaItemPublicCommentList >.OrderedAttachments > .OrderedAttachment > .AgendaItemAttachment' + ItemId).length;
                var commentCounts = $('.AgendaItemPublicCommentList > .AgendaItemPublicComment' + ItemId).length;
											
                $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
                $('#selectedTabAgendaCommentsCount').first().text(' (' + commentCounts + ')');
				
                $('#selectedTabAgendaAttachmentCount' + ItemId).first().text(' (' + attachmentCounts + ') ');
                $('#selectedTabAgendaCommentsCount' + ItemId).first().text(' (' + commentCounts + ')');
				
                var modalClass = '.Details';
                var modalContainer = document.querySelector(modalClass);
                var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [contenteditable]';
                var focusableElements = modalContainer.querySelectorAll(focusableElementsString);

                focusableElements = Array.prototype.slice.call(focusableElements);
                if (focusableElements.length > 0){
                    focusableElements[0].focus();
                }
            }

            function UpdateQuery(parameter, value) {
                var loc = window.location.search;

                if (loc.length == 0) {
                    // no query string //
                    if (value.length > 0) {
                        // add parameter directly to url //
                        return window.location.href + "?" + parameter + "=" + encodeURIComponent(value);
                    }
                }
                else {
                    var found = false;
                    if (loc[0] == '?') {
                        loc = loc.substring(1);
                    }

                    // split up existing query string //
                    var params = loc.split('&');

                    for (var i = 0; i < params.length; i++) {
                        if (params[i].toLowerCase().startsWith(parameter.toLowerCase() + '=')) {
                            found = true;

                            if (value.length > 0) {
                                // set new value //
                                params[i] = parameter + '=' + encodeURIComponent(value);
                            }
                            else {
                                // remove existing value //
                                params[i] = '';
                            }
                        }
                    }

                    if (found == false && value.length > 0) {
                        params.push(parameter + '=' + value);
                    }

                    var qs = '';
                    for (var i = 0; i < params.length; i++) {
                        if (params[i].length > 0) {
                            if (qs.length == 0) {
                                qs = "?" + params[i];
                            }
                            else {
                                qs += "&" + params[i];
                            }
                        }
                    }

                    return window.location.href.replace("?" + loc, qs);
                }

                return window.location.href;
            }

            //$(document).ready(function () {
            //    SelectItem(getParameterByName("Item"), true);
            //});
        </script>

        <style type="text/css">
            /*
                @media Screen {
                    .AgendaItemAttachmentsList {
                        // this max height is causing attachments overlap, if exist the height
                             //max-height:200px;
                    }

                    .AgendaItemAttachmentsArea {
                        overflow:hidden;
                        overflow-y:auto;
                    }
                }
                */
        </style>
    </form>

    


<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" />  

<div id="AgendaItemDetailsModal" class="modal fade">
    <div class="modal-dialog AgendaItemDetailsModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Details</h3>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
            </div>
            <div class="modal-body">
                <div>
                    <div class="inputform">
                        <label>
                            Title
                        </label>
                        <div class="ItemTitle"></div>

                        <label>
                            Description
                        </label>
                        <div class="description"></div>

                        <label>
                            Category
                        </label>
                        <div class="Category"></div>

                        <label>
                            Number
                        </label>
                        <div class="LegislationNumberLabel"></div>

                        <label>Stage</label>
                        <div class="LegislationStageLabel"></div>

                        <label>
                            Department
                        </label>
                        <div id="LegislationDepartmentLabel"></div>

                        <label style="vertical-align: top">
                            Attachments
                        </label>
                        <div style="overflow:hidden">
                            <div>
                                <span id="LegislationDocumentIcon"></span>
                                <a id="LegislationDocumentLink"></a>
                            </div>
                            <div id="LegislationSupportingDocumentsList">
                            </div>
                        </div>
                    </div>
                </div>

                <h4 style="margin-top:0.5em">History</h4>
                <div>
                    <table id="LegislationHistoryTable" class="list dataTable">
                        <thead>
                            <tr>
                                <th id="legislationhistory-index-th" class="leg-no-break tablepadding"></th>
                                <th id="legislationhistory-meetingtype-th" class="leg-no-break tablepadding">Meeting Type</th>
                                <th id="legislationhistory-meetingdate-th" class="leg-no-break tablepadding">Meeting Date</th>
                                <th id="legislationhistory-stage-th" class="leg-no-break tablepadding">Stage</th>
                                <th id="legislationhistory-status-th" class="leg-no-break tablepadding">Status</th>
                                <th id="legislationhistory-number-th" class="leg-no-break tablepadding">Number</th>
                                <th id="legislationhistory-vote-th" class="leg-no-break tablepadding">Vote</th>
                            </tr>
                        </thead>
                        <tbody class="history"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="VoteResultsModal" class="modal fade">
    <div class="modal-dialog VoteResultsModal" style="width: 60%">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Vote Result</h3>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
            </div>
            <div class="modal-body">
                <div class="Text"></div>
                <div class="Banner"></div>
                <div class="Votes"></div>
            </div>
            <div class="modal-footer">
                <div class="dataTables_wrapper" style="margin:auto">
                    <div class="dataTables_paginate paging_simple_numbers">
                        <span>
                            <a class="paginate_button current" aria-controls="table-conflicts-details-list" data-dt-idx="1" tabindex="0">1</a>
                        </span>
                    </div>
                </div> 
            </div>
        </div>
    </div>
</div>
 
<script type="text/javascript">
    function FillVoteResultsDialog(motions, index) {
        var dialog = $("#VoteResultsModal");
        var motion = motions[index];

        // paging //
        {
            var paging = dialog.find(".dataTables_paginate").empty();

            // back links //
            {
                // first link
                var firstlink = $('<a class="paginate_button first">&lt;&lt;</a>')
                    .attr("id", "VoteResultsModal-First")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to First Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", 0);

                // previous link //
                var previouslink = $('<a class="paginate_button previous" "">&lt;</a>')
                    .attr("id", "VoteResultsModal-Previous")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Previous Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", 1);


                if (index == 0) {
                    firstlink.addClass('disabled');
                    firstlink.attr("aria-disabled", "true");

                    previouslink.addClass('disabled');
                    previouslink.attr("aria-disabled", "true");
                }
                else {
                    firstlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, 0);
                        });
                    
                    previouslink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, index-1);
                        });
                }

                paging.append(firstlink);
                paging.append(previouslink);                
            }

            // pages //
            {
                var pages = $("<span>");
                for (var i=0; i<motions.length; i++) {
                    let buttonindex = i;

                    var link = $('<a class="paginate_button">')
                        .attr("aria-controls", "VoteResultsModal")
                        .attr("data-dt-idx", i+2)
                        .attr("tabindex", 0)
                        .text(i+1)
                        .click(function(e) {
                            FillVoteResultsDialog(motions, buttonindex);
                        })

                    if (i == index) {
                        link.addClass("current")
                    }

                    pages.append(link);
                }

                paging.append(pages);
            }

            // forward links //
            {
                // next link 
                var nextlink = $('<a class="paginate_button next">&gt;</a>')
                    .attr("id", "VoteResultsModal-Next")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Next Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", motions.length + 2);

                // last link
                var lastlink = $('<a class="paginate_button last">&gt;&gt;</a>')
                    .attr("id", "VoteResultsModal-Last")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Last Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", motions.length + 3);


                if (index == motions.length - 1) {
                    nextlink.addClass('disabled');
                    nextlink.attr("aria-disabled", "true");

                    lastlink.addClass('disabled');
                    lastlink.attr("aria-disabled", "true");
                }
                else {
                    nextlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, index+1);
                        });
                    
                    lastlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, motions.length-1);
                        });
                }

                paging.append(nextlink);
                paging.append(lastlink);
            }
        }


        


        // render motion //

        dialog.find(".Text").text(motion.Text);
                                        
        var banner = dialog.find(".Banner");
        banner.text(motion.BannerText);

        switch (motion.BannerColor) {
            case 'green':
                banner.css("background-color", '#21AE52');
                banner.css("color", 'white');
                break;

            case 'red':
                banner.css("background-color", 'red');
                banner.css("color", 'black');
                break;

            default:
                banner.css("background-color", '');
                banner.css("color", '');
                break;
        }


        dialog.find(".Votes").empty()

        // add votes to dialog //
        var votes = {};
        var voteorder = ["Yes", "No", "Abstain", "Absent"];

        $.each(motion.Votes, function(imv, motionvote) {
            if (!votes.hasOwnProperty(motionvote.Vote)) {
                votes[motionvote.Vote] = [];
            }

            if (voteorder.indexOf(motionvote.Vote) == -1) {
                voteorder.push(motionvote.Vote);
            }

            votes[motionvote.Vote].push(
                $("<span>").text(motionvote.UserName)
            );
        });

        $.each(voteorder, function(iv, vote) {
            var container = $("#VoteContainerTemplate").clone();

            if (votes.hasOwnProperty(vote)) {
                container.find(".VoteHeader .count").text(votes[vote].length);
                container.find(".Voters").append(...(votes[vote]));
            }

            container.find(".VoteHeader .Vote").text(vote);
            dialog.find(".Votes").append(container.children());
        });
    }

    // fix for nested motals //
    $(document).ready(function () {
        $(document).on({
            'show.bs.modal': function () {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () { $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack'); }, 0);
            },
            'hidden.bs.modal': function () {
                if ($('.modal:visible').length > 0) {
                    // restore the modal-open class to the body element, so that scrolling works
                    // properly after de-stacking a modal.
                    setTimeout(function () { $(document.body).addClass('modal-open'); }, 0);
                }
            }
        }, '.modal');
    });
</script>

<style type="text/css">
    /* flex-grid classes */
    .inputform {
	    font-size:1em;
	    display:grid;
	    grid-template-columns:0fr 1fr;
	    grid-gap:10px 10px;
	    align-items:baseline;
    }
			
    @media (max-width: 575px) {
        .inputform {
            grid-template-columns: 1fr;
            grid-gap:0px;
        }

        .inputform > label,
        .inputform > .row > label {
            margin-top:20px;
        }
    }

    .inputform > label,
    .inputform > .row > label {
	    white-space:nowrap;
	    font-size:1em;
	    font-weight:bold;
    }

    .inputform > .row {
	    display:contents;
    }
			
    .inputform > .row > div {
	    grid-column : 1 / 3;
    }
			
    .inputform > .row > label+div {
	    grid-column: 2 / 3;
    }

    .inputform label+div > div+div {
	    margin-top:4px;
    }

    /* modal styles */
    .modal-dialog.AgendaItemDetailsModal {
        max-width: 1000px;
    }

    .AgendaItemDetailsModal .modal-content {
        max-height:90vh;
        overflow:hidden;
    }

    .AgendaItemDetailsModal .modal-content .modal-body {
        overflow-y:auto;
    }

    .AgendaItemDetailsModal .description {
        max-height:10em;
        overflow-y:auto;
    }

    .VoteResultsModal .Text {
        padding: 2px 0 18px;
    }

    .VoteResultsModal .Banner {
        font-weight:bold;
        padding:5px;
        text-align: center;
    }

    .Votes .VoteHeader {
        font-weight: bold;
        text-align: center;
        padding: 10px;
    }

    .Votes .Voters {
        display: grid;
        grid-template-columns: 33% minmax(0, 34%) 33%;
        grid-gap: 10px;
        align-items: baseline;
        text-align: center;
        border: 1px solid #f7f7f7;
    }

    h3.modal-title {
        font-size:17px;
    }

    #LegislationSupportingDocumentsList > div {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    #LegislationHistoryTable td {
        cursor:pointer;
    }

    #LegislationHistoryTable tr.selected td {
        border-top: 1px solid black;
        border-bottom: 1px solid black;
    }

    #LegislationHistoryTable tr.selected > :first-child {
        border-left:1px solid black;
    }

    #LegislationHistoryTable tr.selected > :last-child {
        border-right:1px solid black;
    }
</style>

<div id="VoteContainerTemplate" style="display:none">
    <div>
        <div class="VoteHeader"><span class="Vote"></span> ( <span class="count">0</span> )</div>
        <div class="Voters"></div>
    </div>
</div>

<script type="text/javascript">
    var AgendaItemswithHistory = [];

    $("document").ready(function() {
        // add agenda item history links dynamically to the agenda //
        $.each(AgendaItemswithHistory, function(i, v) {
            // remove old icon //
            $(".AgendaItem" + v + " .AgendaItemIcons").find(".AgendaItemHistoryLink").remove();

            // add icon //
            $(".AgendaItem" + v + " .AgendaItemIcons").append(
                $('<a href="">')
                    .addClass("AgendaItemHistoryLink")
                    .attr("itemid", v)
                    .append('<i class="las la-history"></i>')
            );
        });

        $(".AgendaItemHistoryLink").click(function(e){
            e.preventDefault();

            AgendaItemHistory.Dialog.Open('128fff38-faa9-4b07-a8cc-e13e88688f9d', $(this).attr("itemid"));
        });
    });
</script>


</body>

</html>

  recorded_at: Fri, 31 Jan 2025 02:28:20 GMT
recorded_with: VCR 6.3.1
