---
http_interactions:
- request:
    method: get
    uri: https://ottawa.ca/en/city-hall/elections/2022-municipal-elections/financial-statements-2022-municipal-elections
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - ottawa.ca
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Mon, 03 Apr 2023 12:47:55 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cache-Control:
      - max-age=2764800, public
      X-Drupal-Dynamic-Cache:
      - MISS
      X-Ua-Compatible:
      - IE=edge
      Content-Language:
      - en
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - ALLOW-FROM https://myservice.ottawa.ca
      Permissions-Policy:
      - interest-cohort=()
      Expires:
      - Sun, 19 Nov 1978 05:00:00 GMT
      Last-Modified:
      - Mon, 03 Apr 2023 12:47:55 GMT
      Etag:
      - '"1680526075"'
      Vary:
      - Cookie,Accept-Encoding
      X-Generator:
      - Drupal 9 (https://www.drupal.org)
      X-Drupal-Cache:
      - MISS
      Access-Control-Allow-Origin:
      - "*"
      X-Request-Id:
      - v-c0f67e36-d21d-11ed-b0cd-7bf423f01175
      X-Ah-Environment:
      - prod
      Age:
      - '0'
      Via:
      - varnish
      X-Cache:
      - MISS
      Accept-Ranges:
      - bytes
      Set-Cookie:
      - incap_ses_356_243507=JHpjFPjXQlDA7rRfQc/wBPrKKmQAAAAAKJlpStx5fI93nh9CyJNT6w==;
        path=/; Domain=.ottawa.ca
      - visid_incap_243507=HgfMWhy4StOC4q6nFpGpi/rKKmQAAAAAQUIPAAAAAACUi8p6dDX/kMenXUBpno1V;
        expires=Tue, 02 Apr 2024 06:18:29 GMT; HttpOnly; path=/; Domain=.ottawa.ca
      X-Cdn:
      - Imperva
      X-Iinfo:
      - 12-71709545-71709549 NNNY CT(9 121 0) RT(1680526074451 43) q(0 1 1 6) r(5
        5) U24
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
<!DOCTYPE html>
<html lang="en" dir="ltr" class="h-100">
  <head>
    <meta charset="utf-8" /><script type="text/javascript">(window.NREUM||(NREUM={})).init={ajax:{deny_list:["bam.nr-data.net"]}};(window.NREUM||(NREUM={})).loader_config={licenseKey:"fc5cb84a25",applicationID:"1252325944"};;(()=>{var e,t,r={9071:(e,t,r)=>{"use strict";r.d(t,{I:()=>n});var n=0,i=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);i&&(n=+i[1])},6562:(e,t,r)=>{"use strict";r.d(t,{P_:()=>v,Mt:()=>p,C5:()=>d,DL:()=>y,OP:()=>N,lF:()=>M,Yu:()=>A,Dg:()=>h,CX:()=>f,GE:()=>w,sU:()=>R});var n={};r.r(n),r.d(n,{agent:()=>E,match:()=>D,version:()=>x});var i=r(6797),o=r(909),a=r(8610);class s{constructor(e,t){try{if(!e||"object"!=typeof e)return(0,a.Z)("New setting a Configurable requires an object as input");if(!t||"object"!=typeof t)return(0,a.Z)("Setting a Configurable requires a model to set its initial properties");Object.assign(this,t),Object.entries(e).forEach((e=>{let[t,r]=e;const n=(0,o.q)(t);n.length&&r&&"object"==typeof r&&n.forEach((e=>{e in r&&((0,a.Z)('"'.concat(e,'" is a protected attribute and can not be changed in feature ').concat(t,".  It will have no effect.")),delete r[e])})),this[t]=r}))}catch(e){(0,a.Z)("An error occured while setting a Configurable",e)}}}const c={beacon:i.ce.beacon,errorBeacon:i.ce.errorBeacon,licenseKey:void 0,applicationID:void 0,sa:void 0,queueTime:void 0,applicationTime:void 0,ttGuid:void 0,user:void 0,account:void 0,product:void 0,extra:void 0,jsAttributes:{},userAttributes:void 0,atts:void 0,transactionName:void 0,tNamePlain:void 0},u={};function d(e){if(!e)throw new Error("All info objects require an agent identifier!");if(!u[e])throw new Error("Info for ".concat(e," was never set"));return u[e]}function f(e,t){if(!e)throw new Error("All info objects require an agent identifier!");u[e]=new s(t,c),(0,i.Qy)(e,u[e],"info")}const l={allow_bfcache:!0,privacy:{cookies_enabled:!0},ajax:{deny_list:void 0,enabled:!0,harvestTimeSeconds:10},distributed_tracing:{enabled:void 0,exclude_newrelic_header:void 0,cors_use_newrelic_header:void 0,cors_use_tracecontext_headers:void 0,allowed_origins:void 0},ssl:void 0,obfuscate:void 0,jserrors:{enabled:!0,harvestTimeSeconds:10},metrics:{enabled:!0},page_action:{enabled:!0,harvestTimeSeconds:30},page_view_event:{enabled:!0},page_view_timing:{enabled:!0,harvestTimeSeconds:30,long_task:!1},session_trace:{enabled:!0,harvestTimeSeconds:10},spa:{enabled:!0,harvestTimeSeconds:10}},g={};function v(e){if(!e)throw new Error("All configuration objects require an agent identifier!");if(!g[e])throw new Error("Configuration for ".concat(e," was never set"));return g[e]}function h(e,t){if(!e)throw new Error("All configuration objects require an agent identifier!");g[e]=new s(t,l),(0,i.Qy)(e,g[e],"config")}function p(e,t){if(!e)throw new Error("All configuration objects require an agent identifier!");var r=v(e);if(r){for(var n=t.split("."),i=0;i<n.length-1;i++)if("object"!=typeof(r=r[n[i]]))return;r=r[n[n.length-1]]}return r}const m={accountID:void 0,trustKey:void 0,agentID:void 0,licenseKey:void 0,applicationID:void 0,xpid:void 0},b={};function y(e){if(!e)throw new Error("All loader-config objects require an agent identifier!");if(!b[e])throw new Error("LoaderConfig for ".concat(e," was never set"));return b[e]}function w(e,t){if(!e)throw new Error("All loader-config objects require an agent identifier!");b[e]=new s(t,m),(0,i.Qy)(e,b[e],"loader_config")}const A=(0,i.mF)().o;var E=null,x=null;if(navigator.userAgent){var T=navigator.userAgent,_=T.match(/Version\/(\S+)\s+Safari/);_&&-1===T.indexOf("Chrome")&&-1===T.indexOf("Chromium")&&(E="Safari",x=_[1])}function D(e,t){if(!E)return!1;if(e!==E)return!1;if(!t)return!0;if(!x)return!1;for(var r=x.split("."),n=t.split("."),i=0;i<n.length;i++)if(n[i]!==r[i])return!1;return!0}var j=r(5526),P=r(2374);const k="NRBA_SESSION_ID";function O(){if(!P.il)return null;try{let e;return null===(e=window.sessionStorage.getItem(k))&&(e=(0,j.ky)(16),window.sessionStorage.setItem(k,e)),e}catch(e){return null}}var S=r(8226);const I=e=>({customTransaction:void 0,disabled:!1,isolatedBacklog:!1,loaderType:void 0,maxBytes:3e4,offset:Math.floor(P._A?.performance?.timeOrigin||P._A?.performance?.timing?.navigationStart||Date.now()),onerror:void 0,origin:""+P._A.location,ptid:void 0,releaseIds:{},sessionId:1==p(e,"privacy.cookies_enabled")?O():null,xhrWrappable:"function"==typeof P._A.XMLHttpRequest?.prototype?.addEventListener,userAgent:n,version:S.q}),C={};function N(e){if(!e)throw new Error("All runtime objects require an agent identifier!");if(!C[e])throw new Error("Runtime for ".concat(e," was never set"));return C[e]}function R(e,t){if(!e)throw new Error("All runtime objects require an agent identifier!");C[e]=new s(t,I(e)),(0,i.Qy)(e,C[e],"runtime")}function M(e){return function(e){try{const t=d(e);return!!t.licenseKey&&!!t.errorBeacon&&!!t.applicationID}catch(e){return!1}}(e)}},8226:(e,t,r)=>{"use strict";r.d(t,{q:()=>n});const n="1228.PROD"},9557:(e,t,r)=>{"use strict";r.d(t,{w:()=>o});var n=r(8610);const i={agentIdentifier:""};class o{constructor(e){try{if("object"!=typeof e)return(0,n.Z)("shared context requires an object as input");this.sharedContext={},Object.assign(this.sharedContext,i),Object.entries(e).forEach((e=>{let[t,r]=e;Object.keys(i).includes(t)&&(this.sharedContext[t]=r)}))}catch(e){(0,n.Z)("An error occured while setting SharedContext",e)}}}},4329:(e,t,r)=>{"use strict";r.d(t,{L:()=>d,R:()=>c});var n=r(3752),i=r(7022),o=r(4045),a=r(2325);const s={};function c(e,t){const r={staged:!1,priority:a.p[t]||0};u(e),s[e].get(t)||s[e].set(t,r)}function u(e){e&&(s[e]||(s[e]=new Map))}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"feature";if(u(e),!e||!s[e].get(t))return a(t);s[e].get(t).staged=!0;const r=Array.from(s[e]);function a(t){const r=e?n.ee.get(e):n.ee,a=o.X.handlers;if(r.backlog&&a){var s=r.backlog[t],c=a[t];if(c){for(var u=0;s&&u<s.length;++u)f(s[u],c);(0,i.D)(c,(function(e,t){(0,i.D)(t,(function(t,r){r[0].on(e,r[1])}))}))}delete a[t],r.backlog[t]=null,r.emit("drain-"+t,[])}}r.every((e=>{let[t,r]=e;return r.staged}))&&(r.sort(((e,t)=>e[1].priority-t[1].priority)),r.forEach((e=>{let[t]=e;a(t)})))}function f(e,t){var r=e[1];(0,i.D)(t[r],(function(t,r){var n=e[0];if(r[0]===n){var i=r[1],o=e[3],a=e[2];i.apply(o,a)}}))}},3752:(e,t,r)=>{"use strict";r.d(t,{ee:()=>u});var n=r(6797),i=r(3916),o=r(7022),a=r(6562),s="nr@context";let c=(0,n.fP)();var u;function d(){}function f(){return new d}function l(){u.aborted=!0,u.backlog={}}c.ee?u=c.ee:(u=function e(t,r){var n={},c={},g={},v=!1;try{v=16===r.length&&(0,a.OP)(r).isolatedBacklog}catch(e){}var h={on:b,addEventListener:b,removeEventListener:y,emit:m,get:A,listeners:w,context:p,buffer:E,abort:l,aborted:!1,isBuffering:x,debugId:r,backlog:v?{}:t&&"object"==typeof t.backlog?t.backlog:{}};return h;function p(e){return e&&e instanceof d?e:e?(0,i.X)(e,s,f):f()}function m(e,r,n,i,o){if(!1!==o&&(o=!0),!u.aborted||i){t&&o&&t.emit(e,r,n);for(var a=p(n),s=w(e),d=s.length,f=0;f<d;f++)s[f].apply(a,r);var l=T()[c[e]];return l&&l.push([h,e,r,a]),a}}function b(e,t){n[e]=w(e).concat(t)}function y(e,t){var r=n[e];if(r)for(var i=0;i<r.length;i++)r[i]===t&&r.splice(i,1)}function w(e){return n[e]||[]}function A(t){return g[t]=g[t]||e(h,t)}function E(e,t){var r=T();h.aborted||(0,o.D)(e,(function(e,n){t=t||"feature",c[n]=t,t in r||(r[t]=[])}))}function x(e){return!!T()[c[e]]}function T(){return h.backlog}}(void 0,"globalEE"),c.ee=u)},9252:(e,t,r)=>{"use strict";r.d(t,{E:()=>n,p:()=>i});var n=r(3752).ee.get("handle");function i(e,t,r,i,o){o?(o.buffer([e],i),o.emit(e,t,r)):(n.buffer([e],i),n.emit(e,t,r))}},4045:(e,t,r)=>{"use strict";r.d(t,{X:()=>o});var n=r(9252);o.on=a;var i=o.handlers={};function o(e,t,r,o){a(o||n.E,i,e,t,r)}function a(e,t,r,i,o){o||(o="feature"),e||(e=n.E);var a=t[o]=t[o]||{};(a[r]=a[r]||[]).push([e,i])}},8544:(e,t,r)=>{"use strict";r.d(t,{bP:()=>s,iz:()=>c,m$:()=>a});var n=r(2374);let i=!1,o=!1;try{const e={get passive(){return i=!0,!1},get signal(){return o=!0,!1}};n._A.addEventListener("test",null,e),n._A.removeEventListener("test",null,e)}catch(e){}function a(e,t){return i||o?{capture:!!e,passive:i,signal:t}:!!e}function s(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];window.addEventListener(e,t,a(r))}function c(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];document.addEventListener(e,t,a(r))}},5526:(e,t,r)=>{"use strict";r.d(t,{Rl:()=>i,ky:()=>o});var n=r(2374);function i(){var e=null,t=0,r=n._A?.crypto||n._A?.msCrypto;function i(){return e?15&e[t++]:16*Math.random()|0}r&&r.getRandomValues&&(e=r.getRandomValues(new Uint8Array(31)));for(var o,a="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx",s="",c=0;c<a.length;c++)s+="x"===(o=a[c])?i().toString(16):"y"===o?(o=3&i()|8).toString(16):o;return s}function o(e){var t=null,r=0,n=self.crypto||self.msCrypto;n&&n.getRandomValues&&Uint8Array&&(t=n.getRandomValues(new Uint8Array(31)));for(var i=[],o=0;o<e;o++)i.push(a().toString(16));return i.join("");function a(){return t?15&t[r++]:16*Math.random()|0}}},2053:(e,t,r)=>{"use strict";r.d(t,{B:()=>n,z:()=>i});const n=(new Date).getTime();function i(){return Math.round(performance.now())}},8283:(e,t,r)=>{"use strict";r.d(t,{B:()=>a,L:()=>s});var n=r(6562),i=r(2053),o={};function a(e,t,r){void 0===r&&(r=(0,i.z)()+(0,n.OP)(e).offset),o[e]=o[e]||{},o[e][t]=r}function s(e,t,r,n){const i=e.sharedContext.agentIdentifier;var a=o[i]?.[r],s=o[i]?.[n];void 0!==a&&void 0!==s&&e.store("measures",t,{value:s-a})}},2545:(e,t,r)=>{"use strict";r.d(t,{L:()=>c});var n=r(9071),i=r(8544),o=r(8305),a=r(2374),s=r(6998);if(a.v6){a._A.cleanupTasks=[];const e=a._A.close;a._A.close=()=>{for(let e of a._A.cleanupTasks)e();e()}}function c(e,t){if(a.il)if(t)(0,s.N)(e,!0),(0,i.bP)("pagehide",e);else{var r=(0,o.Z)(e);!n.I||navigator.sendBeacon?(0,i.bP)("pagehide",r):(0,i.bP)("beforeunload",r),(0,i.bP)("unload",r)}else a.v6&&a._A.cleanupTasks.push(e)}},8610:(e,t,r)=>{"use strict";function n(e,t){console&&console.warn&&"function"==typeof console.warn&&(console.warn("New Relic: ".concat(e)),t&&console.warn(t))}r.d(t,{Z:()=>n})},3916:(e,t,r)=>{"use strict";r.d(t,{X:()=>i});var n=Object.prototype.hasOwnProperty;function i(e,t,r){if(n.call(e,t))return e[t];var i=r();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:i,writable:!0,enumerable:!1}),i}catch(e){}return e[t]=i,i}},2374:(e,t,r)=>{"use strict";r.d(t,{_A:()=>o,il:()=>n,lW:()=>a,v6:()=>i});const n=Boolean("undefined"!=typeof window&&window.document),i=Boolean("undefined"!=typeof WorkerGlobalScope&&self.navigator instanceof WorkerNavigator);let o=(()=>{if(n)return window;if(i){if("undefined"!=typeof globalThis&&globalThis instanceof WorkerGlobalScope)return globalThis;if(self instanceof WorkerGlobalScope)return self}throw new Error('New Relic browser agent shutting down due to error: Unable to locate global scope. This is possibly due to code redefining browser global variables like "self" and "window".')})();function a(){return o}},7022:(e,t,r)=>{"use strict";r.d(t,{D:()=>i});var n=Object.prototype.hasOwnProperty;function i(e,t){var r=[],i="",o=0;for(i in e)n.call(e,i)&&(r[o]=t(i,e[i]),o+=1);return r}},8305:(e,t,r)=>{"use strict";r.d(t,{Z:()=>o});var n=r(8683),i=r.n(n);function o(e){var t,r=!1;return function(){return r?t:(r=!0,t=e.apply(this,i()(arguments)))}}},2438:(e,t,r)=>{"use strict";r.d(t,{P:()=>o});var n=r(3752);const i=()=>{const e=new WeakSet;return(t,r)=>{if("object"==typeof r&&null!==r){if(e.has(r))return;e.add(r)}return r}};function o(e){try{return JSON.stringify(e,i())}catch(e){try{n.ee.emit("internal-error",[e])}catch(e){}}}},2650:(e,t,r)=>{"use strict";r.d(t,{K:()=>a,b:()=>o});var n=r(8544);function i(){return"undefined"==typeof document||"complete"===document.readyState}function o(e,t){if(i())return e();(0,n.bP)("load",e,t)}function a(e){if(i())return e();(0,n.iz)("DOMContentLoaded",e)}},6797:(e,t,r)=>{"use strict";r.d(t,{EZ:()=>u,Qy:()=>c,ce:()=>o,fP:()=>a,gG:()=>d,mF:()=>s});var n=r(2053),i=r(2374);const o={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net"};function a(){return i._A.NREUM||(i._A.NREUM={}),void 0===i._A.newrelic&&(i._A.newrelic=i._A.NREUM),i._A.NREUM}function s(){let e=a();return e.o||(e.o={ST:i._A.setTimeout,SI:i._A.setImmediate,CT:i._A.clearTimeout,XHR:i._A.XMLHttpRequest,REQ:i._A.Request,EV:i._A.Event,PR:i._A.Promise,MO:i._A.MutationObserver,FETCH:i._A.fetch}),e}function c(e,t,r){let i=a();const o=i.initializedAgents||{},s=o[e]||{};return Object.keys(s).length||(s.initializedAt={ms:(0,n.z)(),date:new Date}),i.initializedAgents={...o,[e]:{...s,[r]:t}},i}function u(e,t){a()[e]=t}function d(){return function(){let e=a();const t=e.info||{};e.info={beacon:o.beacon,errorBeacon:o.errorBeacon,...t}}(),function(){let e=a();const t=e.init||{};e.init={...t}}(),s(),function(){let e=a();const t=e.loader_config||{};e.loader_config={...t}}(),a()}},6998:(e,t,r)=>{"use strict";r.d(t,{N:()=>i,e:()=>o});var n=r(8544);function i(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return void(0,n.iz)("visibilitychange",(function(){if(t){if("hidden"!=document.visibilityState)return;e()}e(document.visibilityState)}))}function o(){return"hidden"===document.visibilityState?-1:1/0}},6034:(e,t,r)=>{"use strict";r.d(t,{gF:()=>o,mY:()=>i,t9:()=>n,vz:()=>s,xS:()=>a});const n=r(2325).D.metrics,i="sm",o="cm",a="storeSupportabilityMetrics",s="storeEventMetrics"},2484:(e,t,r)=>{"use strict";r.d(t,{t:()=>n});const n=r(2325).D.pageViewEvent},6382:(e,t,r)=>{"use strict";r.d(t,{t:()=>n});const n=r(2325).D.pageViewTiming},1509:(e,t,r)=>{"use strict";r.d(t,{W:()=>s});var n=r(6562),i=r(3752),o=r(2384),a=r(6797);class s{constructor(e,t,r){this.agentIdentifier=e,this.aggregator=t,this.ee=i.ee.get(e,(0,n.OP)(this.agentIdentifier).isolatedBacklog),this.featureName=r,this.blocked=!1,this.checkConfiguration()}checkConfiguration(){if(!(0,n.lF)(this.agentIdentifier)){let e={...(0,a.gG)().info?.jsAttributes};try{e={...e,...(0,n.C5)(this.agentIdentifier)?.jsAttributes}}catch(e){}(0,o.j)(this.agentIdentifier,{...(0,a.gG)(),info:{...(0,a.gG)().info,jsAttributes:e}})}}}},2384:(e,t,r)=>{"use strict";r.d(t,{j:()=>w});var n=r(8683),i=r.n(n),o=r(2325),a=r(6562),s=r(9252),c=r(7022),u=r(3752),d=r(2053),f=r(4329),l=r(2650),g=r(2374),v=r(8610),h=r(6034);function p(e){["setErrorHandler","finished","addToTrace","inlineHit","addRelease","addPageAction","setCurrentRouteName","setPageViewName","setCustomAttribute","interaction","noticeError"].forEach((t=>{e[t]=function(){for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];return function(t){for(var r=arguments.length,n=new Array(r>1?r-1:0),i=1;i<r;i++)n[i-1]=arguments[i];Object.values(e.initializedAgents).forEach((e=>{e.exposed&&e.api[t]&&e.api[t](...n)}))}(t,...n)}}))}var m=r(6797);const b={stn:[o.D.sessionTrace],err:[o.D.jserrors,o.D.metrics],ins:[o.D.pageAction],spa:[o.D.spa]};const y={};function w(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2?arguments[2]:void 0,w=arguments.length>3?arguments[3]:void 0,{init:A,info:E,loader_config:x,runtime:T={loaderType:n},exposed:_=!0}=t;const D=(0,m.gG)();let j={};return E||(A=D.init,E=D.info,x=D.loader_config,j=D),g.v6&&(E.jsAttributes={...E.jsAttributes,isWorker:!0}),(0,a.CX)(e,E),(0,a.Dg)(e,A||{}),(0,a.GE)(e,x||{}),(0,a.sU)(e,T),function(e,t,n){n||(0,f.R)(e,"api"),p(t);var m=u.ee.get(e),b=m.get("tracer"),y="api-",w=y+"ixn-";function A(){}(0,c.D)(["setErrorHandler","finished","addToTrace","inlineHit","addRelease"],(function(e,r){t[r]=x(y,r,!0,"api")})),t.addPageAction=x(y,"addPageAction",!0,o.D.pageAction),t.setCurrentRouteName=x(y,"routeName",!0,o.D.spa),t.setPageViewName=function(t,r){if("string"==typeof t)return"/"!==t.charAt(0)&&(t="/"+t),(0,a.OP)(e).customTransaction=(r||"http://custom.transaction")+t,x(y,"setPageViewName",!0,"api")()},t.setCustomAttribute=function(t,r){const n=(0,a.C5)(e);return(0,a.CX)(e,{...n,jsAttributes:{...n.jsAttributes,[t]:r}}),x(y,"setCustomAttribute",!0,"api")()},t.interaction=function(){return(new A).get()};var E=A.prototype={createTracer:function(e,t){var r={},n=this,i="function"==typeof t;return(0,s.p)(w+"tracer",[(0,d.z)(),e,r],n,o.D.spa,m),function(){if(b.emit((i?"":"no-")+"fn-start",[(0,d.z)(),n,i],r),i)try{return t.apply(this,arguments)}catch(e){throw b.emit("fn-err",[arguments,this,"string"==typeof e?new Error(e):e],r),e}finally{b.emit("fn-end",[(0,d.z)()],r)}}}};function x(e,t,r,n){return function(){return(0,s.p)(h.xS,["API/"+t+"/called"],void 0,o.D.metrics,m),(0,s.p)(e+t,[(0,d.z)()].concat(i()(arguments)),r?null:this,n,m),r?void 0:this}}function T(){r.e(439).then(r.bind(r,5692)).then((t=>{let{setAPI:r}=t;r(e),(0,f.L)(e,"api")})).catch((()=>(0,v.Z)("Downloading runtime APIs failed...")))}(0,c.D)("actionText,setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),(function(e,t){E[t]=x(w,t,void 0,o.D.spa)})),t.noticeError=function(e,t){"string"==typeof e&&(e=new Error(e)),(0,s.p)(h.xS,["API/noticeError/called"],void 0,o.D.metrics,m),(0,s.p)("err",[e,(0,d.z)(),!1,t],void 0,o.D.jserrors,m)},g.v6?T():(0,l.b)((()=>T()),!0)}(e,j,w),(0,m.Qy)(e,D,"api"),(0,m.Qy)(e,_,"exposed"),(0,m.EZ)("activatedFeatures",y),(0,m.EZ)("setToken",(t=>function(e,t){var r=u.ee.get(t);e&&"object"==typeof e&&((0,c.D)(e,(function(e,t){if(!t)return(b[e]||[]).forEach((t=>{(0,s.p)("block-"+e,[],void 0,t,r)}));y[e]||((0,s.p)("feat-"+e,[],void 0,b[e],r),y[e]=!0)})),(0,f.L)(t,o.D.pageViewEvent))}(t,e))),j}},909:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i,q:()=>o});var n=r(2325);function i(e){switch(e){case n.D.ajax:return[n.D.jserrors];case n.D.sessionTrace:return[n.D.ajax,n.D.pageViewEvent];case n.D.pageViewTiming:return[n.D.pageViewEvent];default:return[]}}function o(e){return e===n.D.jserrors?[]:["auto"]}},2325:(e,t,r)=>{"use strict";r.d(t,{D:()=>n,p:()=>i});const n={ajax:"ajax",jserrors:"jserrors",metrics:"metrics",pageAction:"page_action",pageViewEvent:"page_view_event",pageViewTiming:"page_view_timing",sessionTrace:"session_trace",spa:"spa"},i={[n.pageViewEvent]:1,[n.pageViewTiming]:2,[n.metrics]:3,[n.jserrors]:4,[n.ajax]:5,[n.sessionTrace]:6,[n.pageAction]:7,[n.spa]:8}},8683:e=>{e.exports=function(e,t,r){t||(t=0),void 0===r&&(r=e?e.length:0);for(var n=-1,i=r-t||0,o=Array(i<0?0:i);++n<i;)o[n]=e[t+n];return o}}},n={};function i(e){var t=n[e];if(void 0!==t)return t.exports;var o=n[e]={exports:{}};return r[e](o,o.exports,i),o.exports}i.m=r,i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((t,r)=>(i.f[r](e,t),t)),[])),i.u=e=>(({78:"page_action-aggregate",147:"metrics-aggregate",193:"session_trace-aggregate",317:"jserrors-aggregate",348:"page_view_timing-aggregate",439:"async-api",729:"lazy-loader",786:"page_view_event-aggregate",873:"spa-aggregate",898:"ajax-aggregate"}[e]||e)+"."+{78:"1ef08094",147:"56d9a464",193:"ada8b15b",317:"64f61365",348:"ced8c919",439:"61caf4d9",729:"37550b27",786:"46b69e61",862:"e74e95d2",873:"7222cbb6",898:"e6085a9a"}[e]+"-1228.min.js"),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="NRBA:",i.l=(r,n,o,a)=>{if(e[r])e[r].push(n);else{var s,c;if(void 0!==o)for(var u=document.getElementsByTagName("script"),d=0;d<u.length;d++){var f=u[d];if(f.getAttribute("src")==r||f.getAttribute("data-webpack")==t+o){s=f;break}}s||(c=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.setAttribute("data-webpack",t+o),s.src=r),e[r]=[n];var l=(t,n)=>{s.onerror=s.onload=null,clearTimeout(g);var i=e[r];if(delete e[r],s.parentNode&&s.parentNode.removeChild(s),i&&i.forEach((e=>e(n))),t)return t(n)},g=setTimeout(l.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=l.bind(null,s.onerror),s.onload=l.bind(null,s.onload),c&&document.head.appendChild(s)}},i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.p="https://js-agent.newrelic.com/",(()=>{var e={653:0,227:0};i.f.j=(t,r)=>{var n=i.o(e,t)?e[t]:void 0;if(0!==n)if(n)r.push(n[2]);else{var o=new Promise(((r,i)=>n=e[t]=[r,i]));r.push(n[2]=o);var a=i.p+i.u(t),s=new Error;i.l(a,(r=>{if(i.o(e,t)&&(0!==(n=e[t])&&(e[t]=void 0),n)){var o=r&&("load"===r.type?"missing":r.type),a=r&&r.target&&r.target.src;s.message="Loading chunk "+t+" failed.\n("+o+": "+a+")",s.name="ChunkLoadError",s.type=o,s.request=a,n[1](s)}}),"chunk-"+t,t)}};var t=(t,r)=>{var n,o,[a,s,c]=r,u=0;if(a.some((t=>0!==e[t]))){for(n in s)i.o(s,n)&&(i.m[n]=s[n]);if(c)c(i)}for(t&&t(r);u<a.length;u++)o=a[u],i.o(e,o)&&e[o]&&e[o][0](),e[o]=0},r=window.webpackChunkNRBA=window.webpackChunkNRBA||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var o={};(()=>{"use strict";i.r(o);var e=i(2325),t=i(6562);const r=Object.values(e.D);function n(e){const n={};return r.forEach((r=>{n[r]=function(e,r){return!1!==(0,t.Mt)(r,"".concat(e,".enabled"))}(r,e)})),n}var a=i(2384),s=i(909),c=i(9252),u=i(2053),d=i(8283),f=i(4329),l=i(1509),g=i(2650),v=i(2374),h=i(8610);class p extends l.W{constructor(e,t,r){let n=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];super(e,t,r),this.hasAggregator=!1,this.auto=n,this.abortHandler,n&&(0,f.R)(e,r)}importAggregator(){if(this.hasAggregator||!this.auto)return;this.hasAggregator=!0;const e=async()=>{try{const{lazyLoader:e}=await i.e(729).then(i.bind(i,8110)),{Aggregate:t}=await e(this.featureName,"aggregate");new t(this.agentIdentifier,this.aggregator)}catch(e){(0,h.Z)("Downloading ".concat(this.featureName," failed...")),this.abortHandler?.()}};v.v6?e():(0,g.b)((()=>e()),!0)}}var m,b,y,w=i(2484);class A extends p{constructor(e,r){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e,r,w.t,n),(0,d.B)(e,"starttime",(0,t.OP)(e).offset),(0,d.B)(e,"firstbyte",u.B),(0,g.K)((()=>this.measureDomContentLoaded())),(0,g.b)((()=>this.measureWindowLoaded()),!0),this.importAggregator()}measureWindowLoaded(){var r=(0,u.z)();(0,d.B)(this.agentIdentifier,"onload",r+(0,t.OP)(this.agentIdentifier).offset),(0,c.p)("timing",["load",r],void 0,e.D.pageViewTiming,this.ee)}measureDomContentLoaded(){(0,d.B)(this.agentIdentifier,"domContent",(0,u.z)()+(0,t.OP)(this.agentIdentifier).offset)}}m=A,b="featureName",y=w.t,(b=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(b))in m?Object.defineProperty(m,b,{value:y,enumerable:!0,configurable:!0,writable:!0}):m[b]=y;var E=i(9557),x=i(7022);class T extends E.w{constructor(e){super(e),this.aggregatedData={}}store(e,t,r,n,i){var o=this.getBucket(e,t,r,i);return o.metrics=function(e,t){t||(t={count:0});return t.count+=1,(0,x.D)(e,(function(e,r){t[e]=_(r,t[e])})),t}(n,o.metrics),o}merge(e,t,r,n,i){var o=this.getBucket(e,t,n,i);if(o.metrics){var a=o.metrics;a.count+=r.count,(0,x.D)(r,(function(e,t){if("count"!==e){var n=a[e],i=r[e];i&&!i.c?a[e]=_(i.t,n):a[e]=function(e,t){if(!t)return e;t.c||(t=D(t.t));return t.min=Math.min(e.min,t.min),t.max=Math.max(e.max,t.max),t.t+=e.t,t.sos+=e.sos,t.c+=e.c,t}(i,a[e])}}))}else o.metrics=r}storeMetric(e,t,r,n){var i=this.getBucket(e,t,r);return i.stats=_(n,i.stats),i}getBucket(e,t,r,n){this.aggregatedData[e]||(this.aggregatedData[e]={});var i=this.aggregatedData[e][t];return i||(i=this.aggregatedData[e][t]={params:r||{}},n&&(i.custom=n)),i}get(e,t){return t?this.aggregatedData[e]&&this.aggregatedData[e][t]:this.aggregatedData[e]}take(e){for(var t={},r="",n=!1,i=0;i<e.length;i++)t[r=e[i]]=j(this.aggregatedData[r]),t[r].length&&(n=!0),delete this.aggregatedData[r];return n?t:null}}function _(e,t){return null==e?function(e){e?e.c++:e={c:1};return e}(t):t?(t.c||(t=D(t.t)),t.c+=1,t.t+=e,t.sos+=e*e,e>t.max&&(t.max=e),e<t.min&&(t.min=e),t):{t:e}}function D(e){return{t:e,min:e,max:e,sos:e*e,c:1}}function j(e){return"object"!=typeof e?[]:(0,x.D)(e,P)}function P(e,t){return t}var k=i(6797),O=i(5526),S=i(2438);var I,C=i(6998),N=i(8544),R=i(6382),M=-1,B=function(e){addEventListener("pageshow",(function(t){t.persisted&&(M=t.timeStamp,e(t))}),!0)},L=function(){return window.performance&&performance.getEntriesByType&&performance.getEntriesByType("navigation")[0]},z=function(){var e=L();return e&&e.activationStart||0},V=function(e,t){var r=L(),n="navigate";return M>=0?n="back-forward-cache":r&&(n=document.prerendering||z()>0?"prerender":document.wasDiscarded?"restore":r.type.replace(/_/g,"-")),{name:e,value:void 0===t?-1:t,rating:"good",delta:0,entries:[],id:"v3-".concat(Date.now(),"-").concat(Math.floor(8999999999999*Math.random())+1e12),navigationType:n}},W=function(e,t,r){try{if(PerformanceObserver.supportedEntryTypes.includes(e)){var n=new PerformanceObserver((function(e){Promise.resolve().then((function(){t(e.getEntries())}))}));return n.observe(Object.assign({type:e,buffered:!0},r||{})),n}}catch(e){}},q=function(e,t,r,n){var i,o;return function(a){t.value>=0&&(a||n)&&((o=t.value-(i||0))||void 0===i)&&(i=t.value,t.delta=o,t.rating=function(e,t){return e>t[1]?"poor":e>t[0]?"needs-improvement":"good"}(t.value,r),e(t))}},Z=function(e){var t=function(t){"pagehide"!==t.type&&"hidden"!==document.visibilityState||e(t)};addEventListener("visibilitychange",t,!0),addEventListener("pagehide",t,!0)},H=function(e){document.prerendering?addEventListener("prerenderingchange",(function(){return e()}),!0):e()},F=(new Date,0),U=1/0,G=0,X=function(e){e.forEach((function(e){e.interactionId&&(U=Math.min(U,e.interactionId),G=Math.max(G,e.interactionId),F=G?(G-U)/7+1:0)}))},Q=function(){return I?F:performance.interactionCount||0},K=function(){"interactionCount"in performance||I||(I=W("event",X,{type:"event",buffered:!0,durationThreshold:0}))},Y=[200,500],J=0,$=function(){return Q()-J},ee=[],te={},re=function(e){var t=ee[ee.length-1],r=te[e.interactionId];if(r||ee.length<10||e.duration>t.latency){if(r)r.entries.push(e),r.latency=Math.max(r.latency,e.duration);else{var n={id:e.interactionId,latency:e.duration,entries:[e]};te[n.id]=n,ee.push(n)}ee.sort((function(e,t){return t.latency-e.latency})),ee.splice(10).forEach((function(e){delete te[e.id]}))}},ne=i(2545);class ie extends p{constructor(r,n){var i;let o=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(super(r,n,R.t,o),i=this,v.il){if(this.pageHiddenTime=(0,C.e)(),this.performanceObserver,this.lcpPerformanceObserver,this.clsPerformanceObserver,this.fiRecorded=!1,"PerformanceObserver"in window&&"function"==typeof window.PerformanceObserver){this.performanceObserver=new PerformanceObserver((function(){return i.perfObserver(...arguments)}));try{this.performanceObserver.observe({entryTypes:["paint"]})}catch(e){}this.lcpPerformanceObserver=new PerformanceObserver((function(){return i.lcpObserver(...arguments)}));try{this.lcpPerformanceObserver.observe({entryTypes:["largest-contentful-paint"]})}catch(e){}this.clsPerformanceObserver=new PerformanceObserver((function(){return i.clsObserver(...arguments)}));try{this.clsPerformanceObserver.observe({type:"layout-shift",buffered:!0})}catch(e){}}this.fiRecorded=!1;["click","keydown","mousedown","pointerdown","touchstart"].forEach((e=>{(0,N.iz)(e,(function(){return i.captureInteraction(...arguments)}))})),function(e,t){t=t||{},H((function(){K();var r,n=V("INP"),i=function(e){e.forEach((function(e){e.interactionId&&re(e),"first-input"===e.entryType&&!ee.some((function(t){return t.entries.some((function(t){return e.duration===t.duration&&e.startTime===t.startTime}))}))&&re(e)}));var t,i=(t=Math.min(ee.length-1,Math.floor($()/50)),ee[t]);i&&i.latency!==n.value&&(n.value=i.latency,n.entries=i.entries,r())},o=W("event",i,{durationThreshold:t.durationThreshold||40});r=q(e,n,Y,t.reportAllChanges),o&&(o.observe({type:"first-input",buffered:!0}),Z((function(){i(o.takeRecords()),n.value<0&&$()>0&&(n.value=0,n.entries=[]),r(!0)})),B((function(){ee=[],J=Q(),n=V("INP"),r=q(e,n,Y,t.reportAllChanges)})))}))}((t=>{let{name:r,value:n,id:i}=t;(0,c.p)("timing",[r.toLowerCase(),n,{metricId:i}],void 0,e.D.pageViewTiming,this.ee)})),!0===(0,t.Mt)(this.agentIdentifier,"page_view_timing.long_task")&&(e=>{const t=t=>{t.forEach((t=>{const r={name:"LT",value:t.duration,info:{ltFrame:t.name,ltStart:t.startTime,ltCtr:t.attribution[0].containerType}};"window"!==r.info.ltCtr&&Object.assign(r.info,{ltCtrSrc:t.attribution[0].containerSrc,ltCtrId:t.attribution[0].containerId,ltCtrName:t.attribution[0].containerName}),e(r)}))};let r;try{PerformanceObserver.supportedEntryTypes.includes("longtask")&&(r=new PerformanceObserver((e=>{Promise.resolve().then((()=>{t(e.getEntries())}))})),r.observe({type:"longtask",buffered:!0}))}catch(e){}r&&(0,ne.L)((()=>{t(r.takeRecords())}),!0)})((t=>{let{name:r,value:n,info:i}=t;(0,c.p)("timing",[r.toLowerCase(),n,i],void 0,e.D.pageViewTiming,this.ee)})),(0,C.N)((()=>{this.pageHiddenTime=(0,u.z)(),(0,c.p)("docHidden",[this.pageHiddenTime],void 0,e.D.pageViewTiming,this.ee)}),!0),(0,N.bP)("pagehide",(()=>(0,c.p)("winPagehide",[(0,u.z)()],void 0,e.D.pageViewTiming,this.ee))),this.importAggregator()}}perfObserver(t,r){t.getEntries().forEach((t=>{"first-paint"===t.name?(0,c.p)("timing",["fp",Math.floor(t.startTime)],void 0,e.D.pageViewTiming,this.ee):"first-contentful-paint"===t.name&&(0,c.p)("timing",["fcp",Math.floor(t.startTime)],void 0,e.D.pageViewTiming,this.ee)}))}lcpObserver(t,r){var n=t.getEntries();if(n.length>0){var i=n[n.length-1];if(this.pageHiddenTime<i.startTime)return;var o=[i],a=this.addConnectionAttributes({});a&&o.push(a),(0,c.p)("lcp",o,void 0,e.D.pageViewTiming,this.ee)}}clsObserver(t){t.getEntries().forEach((t=>{t.hadRecentInput||(0,c.p)("cls",[t],void 0,e.D.pageViewTiming,this.ee)}))}addConnectionAttributes(e){var t=navigator.connection||navigator.mozConnection||navigator.webkitConnection;if(t)return t.type&&(e["net-type"]=t.type),t.effectiveType&&(e["net-etype"]=t.effectiveType),t.rtt&&(e["net-rtt"]=t.rtt),t.downlink&&(e["net-dlink"]=t.downlink),e}captureInteraction(r){if(r instanceof t.Yu.EV&&!this.fiRecorded){var n=Math.round(r.timeStamp),i={type:r.type};this.addConnectionAttributes(i);const o=(0,t.OP)(this.agentIdentifier).offset;n<=(0,u.z)()?i.fid=(0,u.z)()-n:n>o&&n<=Date.now()?(n-=o,i.fid=(0,u.z)()-n):n=(0,u.z)(),this.fiRecorded=!0,(0,c.p)("timing",["fi",n,i],void 0,e.D.pageViewTiming,this.ee)}}}!function(e,t,r){(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r}(ie,"featureName",R.t);const oe={dedicated:Boolean(v._A?.Worker),shared:Boolean(v._A?.SharedWorker),service:Boolean(v._A?.navigator?.serviceWorker)};let ae,se,ce;var ue=i(6034);class de extends p{constructor(t,r){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(t,r,ue.t9,n),function(e){if(!ae){if(oe.dedicated){ae=Worker;try{v._A.Worker=r(ae,"Dedicated")}catch(e){o(e,"Dedicated")}if(oe.shared){se=SharedWorker;try{v._A.SharedWorker=r(se,"Shared")}catch(e){o(e,"Shared")}}else n("Shared");if(oe.service){ce=navigator.serviceWorker.register;try{v._A.navigator.serviceWorker.register=(t=ce,function(){for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];return i("Service",r[1]?.type),t.apply(navigator.serviceWorker,r)})}catch(e){o(e,"Service")}}else n("Service");var t;return}n("All")}function r(e,t){return"undefined"==typeof Proxy?e:new Proxy(e,{construct:(e,r)=>(i(t,r[1]?.type),new e(...r))})}function n(t){v.v6||e("Workers/".concat(t,"/Unavailable"))}function i(t,r){e("Workers/".concat(t,"module"===r?"/Module":"/Classic"))}function o(t,r){e("Workers/".concat(r,"/SM/Unsupported")),(0,h.Z)("NR Agent: Unable to capture ".concat(r," workers."),t)}}((t=>(0,c.p)(ue.xS,[t],void 0,e.D.metrics,this.ee))),this.importAggregator()}}!function(e,t,r){(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r}(de,"featureName",ue.t9),new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,O.ky)(16);this.agentIdentifier=t,this.sharedAggregator=new T({agentIdentifier:this.agentIdentifier}),this.features={},this.desiredFeatures=new Set(e.features||[]),this.desiredFeatures.add(A),Object.assign(this,(0,a.j)(this.agentIdentifier,e,e.loaderType||"agent")),this.start()}get config(){return{info:(0,t.C5)(this.agentIdentifier),init:(0,t.P_)(this.agentIdentifier),loader_config:(0,t.DL)(this.agentIdentifier),runtime:(0,t.OP)(this.agentIdentifier)}}start(){const t="features";try{const r=n(this.agentIdentifier),i=Array.from(this.desiredFeatures);i.sort(((t,r)=>e.p[t.featureName]-e.p[r.featureName])),i.forEach((t=>{if(r[t.featureName]||t.featureName===e.D.pageViewEvent){const e=(0,s.Z)(t.featureName),n=e.every((e=>r[e]));n||(0,h.Z)("".concat(t.featureName," is enabled but one or more dependent features has been disabled (").concat((0,S.P)(e),"). This may cause unintended consequences or missing data...")),this.features[t.featureName]=new t(this.agentIdentifier,this.sharedAggregator)}})),(0,k.Qy)(this.agentIdentifier,this.features,t)}catch(e){(0,h.Z)("Failed to initialize all enabled instrument classes (agent aborted) -",e);for(const e in this.features)this.features[e].abortHandler?.();const r=(0,k.fP)();return delete r.initializedAgents[this.agentIdentifier]?.api,delete r.initializedAgents[this.agentIdentifier]?.[t],delete this.sharedAggregator,r.ee?.abort(),delete r.ee?.get(this.agentIdentifier),!1}}}({features:[A,ie,de],loaderType:"lite"})})(),window.NRBA=o})();</script>
<noscript><style>form.antibot * :not(.antibot-message) { display: none !important; }</style>
</noscript><script async src="/sites/default/files/google_analytics/gtag.js?rsiejq"></script>
<script>window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments)};gtag("js", new Date());gtag("set", "developer_id.dMDhkMT", true);gtag("config", "G-GTBB95F8N6", {"groups":"default","page_location":location.pathname + location.search + location.hash});</script>
<style>/* @see https://github.com/aFarkas/lazysizes#broken-image-symbol */.js img.lazyload:not([src]) { visibility: hidden; }/* @see https://github.com/aFarkas/lazysizes#automatically-setting-the-sizes-attribute */.js img.lazyloaded[data-sizes=auto] { display: block; width: 100%; }/* Transition effect. */.js .lazyload, .js .lazyloading { opacity: 0; }.js .lazyloaded { opacity: 1; -webkit-transition: opacity 2000ms; transition: opacity 2000ms; }</style>
<link rel="canonical" href="https://ottawa.ca/en/city-hall/elections/2022-municipal-elections/financial-statements-2022-municipal-elections" />
<meta name="dcterms.title" content="Financial statements for the 2022 Municipal Elections" />
<meta name="dcterms.creator" content="Office of the City Clerk" />
<meta name="dcterms.date" content="2023-03-31" />
<meta name="dcterms.language" content="en" />
<meta name="Generator" content="Drupal 9 (https://www.drupal.org)" />
<meta name="MobileOptimized" content="width" />
<meta name="HandheldFriendly" content="true" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<link rel="icon" href="/themes/custom/ottca_theme/favicon.ico" type="image/vnd.microsoft.icon" />
<link rel="alternate" hreflang="en" href="https://ottawa.ca/en/city-hall/elections/2022-municipal-elections/financial-statements-2022-municipal-elections" />
<link rel="alternate" hreflang="fr" href="https://ottawa.ca/fr/hotel-de-ville/elections/elections-municipales-de-2022/etats-financiers-pour-les-elections-municipales-de-2022" />
<script src="/sites/default/files/google_tag/ottawa.ca_google_container/google_tag.script.js?rsiejq" defer></script>

    <title>Financial statements for the 2022 Municipal Elections | City of Ottawa</title>
    <link rel="stylesheet" media="all" href="/sites/default/files/css/css_d8arOMhVqXfQnFd0i13-Ilohepz34I7VTOTaSouKEFc.css" />
<link rel="stylesheet" media="all" href="/sites/default/files/css/css_hYapqr3SfjfdnLa7gBdg-16MQv5FBEVf0D9z6fGvEGQ.css" />
<link rel="stylesheet" media="all" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
<link rel="stylesheet" media="all" href="/sites/default/files/css/css_1I_0VSewGIZ7fLYcI7cCmYG5pfss1FX8o1T_LQZs6JQ.css" />
<link rel="stylesheet" media="all" href="//ottux.ottawa.ca/widgets/v1.4.4/css/app.css" />

    <script type="application/json" data-drupal-selector="drupal-settings-json">{"path":{"baseUrl":"\/","scriptPath":null,"pathPrefix":"en\/","currentPath":"node\/2257896","currentPathIsAdmin":false,"isFront":false,"currentLanguage":"en"},"pluralDelimiter":"\u0003","suppressDeprecationErrors":true,"popup_survey":{"frequency":"10","botlist":"alexa|bot|crawl|bing|facebookexternalhit|feedburner|google|preview|nagios|postrank|pingdom|slurp|spider|yahoo|yandex|sogou"},"google_analytics":{"account":"G-GTBB95F8N6","trackOutbound":true,"trackMailto":true,"trackTel":true,"trackDownload":true,"trackDownloadExtensions":"7z|aac|arc|arj|asf|asx|avi|bin|csv|doc(x|m)?|dot(x|m)?|exe|flv|gif|gz|gzip|hqx|jar|jpe?g|js|mp(2|3|4|e?g)|mov(ie)?|msi|msp|pdf|phps|png|ppt(x|m)?|pot(x|m)?|pps(x|m)?|ppam|sld(x|m)?|thmx|qtm?|ra(m|r)?|sea|sit|tar|tgz|torrent|txt|wav|wma|wmv|wpd|xls(x|m|b)?|xlt(x|m)|xlam|xml|z|zip","trackUrlFragments":true},"lazy":{"lazysizes":{"lazyClass":"lazyload","loadedClass":"lazyloaded","loadingClass":"lazyloading","preloadClass":"lazypreload","errorClass":"lazyerror","autosizesClass":"lazyautosizes","srcAttr":"data-src","srcsetAttr":"data-srcset","sizesAttr":"data-sizes","minSize":40,"customMedia":[],"init":true,"expFactor":1.5,"hFac":0.80000000000000004,"loadMode":2,"loadHidden":true,"ricTimeout":0,"throttleDelay":125,"plugins":{"native-loading":"native-loading\/ls.native-loading"}},"placeholderSrc":"","preferNative":true,"minified":true,"libraryPath":"\/libraries\/lazysizes"},"data":{"extlink":{"extTarget":true,"extTargetNoOverride":true,"extNofollow":false,"extNoreferrer":true,"extFollowNoOverride":false,"extClass":"ext","extLabel":"(link is external)","extImgClass":false,"extSubdomains":false,"extExclude":"","extInclude":"","extCssExclude":"#ott-header-container,#ottawa-footer,.fa,.fas,.far,.fal,.fab","extCssExplicit":"","extAlert":false,"extAlertText":"This link will take you to an external web site. We are not responsible for their content.","mailtoClass":"mailto","mailtoLabel":"(link opens email application)","extUseFontAwesome":true,"extIconPlacement":"append","extFaLinkClasses":"fas fa-external-link-alt","extFaMailtoClasses":"far fa-envelope","whitelistedDomains":[]}},"user":{"uid":0,"permissionsHash":"795af65f74f8c504ca3d404517938abbc87adf8211cf83e67e65b7cdc5267474"}}</script>
<script src="/sites/default/files/js/js_5gD9j_3kzV4kBWwRSsinwxvIP4oMvaF9-M4G6AYswrg.js"></script>
<script src="https://cdn.jsdelivr.net/npm/powerbi-client@2.22.1/dist/powerbi.min.js"></script>
<script src="/modules/contrib/powerbi_embed/js/powerbi_embed-customizer.js?v=1.0.0"></script>

  </head>
  <body class="path-node page-node-type-long-page   d-flex flex-column h-100">
        <noscript><iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NDWQN39" height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
      <div class="dialog-off-canvas-main-canvas d-flex flex-column h-100" data-off-canvas-main-canvas>
    
        <div id="ottux-header" data-skip-to-content-id="main-content" data-api-server="https://ottawa.ca" data-api-alert-server="https://ottawa.ca" data-search-target="https://search.ottawa.ca/en" data-search-field-name="keywords" data-language-link="/fr/hotel-de-ville/elections/elections-municipales-de-2022/etats-financiers-pour-les-elections-municipales-de-2022" data-menu-label="Sign-in" data-home-url="/en" data-home-title="City of Ottawa Home page" class="region region-branding">
    <div id="block-ottca-theme-branding">



<div class="navbar-brand d-flex align-items-center">

    <a href="/en" title="Home" rel="home" class="site-logo d-block">
    <img src="/themes/custom/ottca_theme/logo.svg" alt="Home" />
  </a>
  
  <div>
        <a href="/en" title="Home" rel="home" class="site-title">
      City of Ottawa
    </a>
    
      </div>
</div>

</div>
<div class="language-switcher-language-url" id="block-languageswitcher" role="navigation">



  <ul class="links"><li hreflang="en" data-drupal-link-system-path="node/2257896" class="en is-active"><a href="/en/city-hall/elections/2022-municipal-elections/financial-statements-2022-municipal-elections" class="language-link is-active" hreflang="en" data-drupal-link-system-path="node/2257896">English</a></li><li hreflang="fr" data-drupal-link-system-path="node/2257896" class="fr"><a href="/fr/hotel-de-ville/elections/elections-municipales-de-2022/etats-financiers-pour-les-elections-municipales-de-2022" class="language-link" hreflang="fr" data-drupal-link-system-path="node/2257896">Français</a></li></ul>

</div>

  </div>


    <script language="JavaScript">
      // inline to fix flicker issue
    document.getElementById("block-ottca-theme-branding").style.visibility = 'hidden';
    document.getElementById("block-languageswitcher").style.visibility = 'hidden';
    </script>

  
<main class="container" id="main-content" tabindex="-1">
  
      <div id="highlighted" class="row">
      <div class="col">
          <div class="region region-highlighted">
    <div data-drupal-messages-fallback class="hidden"></div>

  </div>

      </div>
    </div>
  
  
      <div id="content" class="row">
                      <div class="col">
                        <div class="region region-content">
    <div id="block-breadcrumbs-2">



    <nav aria-label="breadcrumb">
  <ol class="breadcrumb">
                  <li class="breadcrumb-item">
        <a href="/en">Home</a>
                        <li class="breadcrumb-item">
        <a href="/en/city-hall">City Hall</a>
                        <li class="breadcrumb-item">
        <a href="/en/city-hall/elections">Elections</a>
                        <li class="breadcrumb-item">
        <a href="/en/city-hall/elections/2022-municipal-elections">2022 Municipal Elections</a>
                        <li class="breadcrumb-item active" aria-current="page">
        Financial statements for the 2022 Municipal Elections
            </ol>
</nav>



</div>
<div id="block-ottca-theme-page-title">



  
  <h1 class="page-title"><span class="field field--name-title field--type-string field--label-hidden">Financial statements for the 2022 Municipal Elections</span>
</h1>



</div>
<div id="block-mainpagecontent">



  

<article role="article" class="node node--type-long-page node--view-mode-full">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-6e3bbe5239433800aa7b437d57f363214d764d95922f3c4fc4cebd24e1fc2bce">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-7397697e448a70fe6196232ed8819b43825d0c955b211b60d85964f848a09161">
  
    
      
  
          </div>
</div>


</div>



  

<div id="sticky-anchor"></div>
<div  class="toc-js" id="toc-js-block-toc-js-block" data-id="toc_js_block" data-label="Toc.js block" data-label-display="0" data-provider="toc_js" data-selectors="h2:not(.no-toc)" data-selectors-minimum="1" data-container=".paragraph--type--layout &gt;.layout.toc-selectors" data-prefix="section" data-list-type="ul" data-back-to-top="0" data-back-to-top-label="Back to top" data-smooth-scrolling="0" data-scroll-to-offset="100" data-highlight-on-scroll="1" data-highlight-offset="100" data-sticky="0" data-sticky-offset="0" data-sticky-stop="" data-sticky-stop-padding="0">
  <div  class="toc-title h2">On this page</div>
  <nav role="navigation" aria-label="On this page"></nav>
</div>





  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-457971af-dcb8-4b51-b0ca-f050966a09f5" data-target="#section-457971af-dcb8-4b51-b0ca-f050966a09f5" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Filing requirements</button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-457971af-dcb8-4b51-b0ca-f050966a09f5">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Filing requirements</h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-39023d2ea15fbb47d0c862b3fc8724ab461245d0c8cb5e0e1fcc0dc556d26c93">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-c3f497468048148c36a431415c0bf78edd93f580db1a7a3de24199a4e3dfcfdd">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--text-block paragraph--view-mode--default">
          
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><p><span><span><span><span><span><span>Pursuant to Section 88(9.1) of the </span></span></span><a href="https://www.ontario.ca/laws/statute/96m32" target="_blank"><em><span lang="EN-US" xml:lang="EN-US" xml:lang="EN-US"><span><span>Municipal Elections Act, 1996</span></span></span></em></a><span><span><span>, financial statements as filed by candidates and registered third party advertisers are made available for public viewing on this webpage at no cost. </span></span></span></span></span></span></p>
<h3><span><span><span><strong><span><span><span>Financial statement key dates</span></span></span></strong></span></span></span></h3>
<p><span><span><span><span><strong><span><span><span><span>January 3, 2023</span></span></span></span></strong></span></span></span></span></p>
<ul><li><span><span><span><span><span><span><span><span><span>Campaign period ends for candidates and third party advertisers, meaning they cannot accept any contributions or incur any expenses.</span></span></span></span></span></span></span></span></span></li>
<li><span><span><span><span><span><span><span><span><span>Candidates or third party advertisers that wish to extend their campaign, due to a deficit, must file a Notice of Extension of Campaign Period – Form 6 by 4:30 pm.</span></span></span></span></span></span></span></span></span></li>
</ul><p><span><span><span><span><strong><span><span><span><span>March 30, 2023</span></span></span></span></strong></span></span></span></span></p>
<ul><li><span><span><span><span><span><span><span><span><span>Last day for a candidate or third party advertiser to apply to Superior Court of Justice to extend the time to file their initial financial statement.</span></span></span></span></span></span></span></span></span></li>
</ul><p><span><span><span><span><strong><span><span><span><span>March 31, 2023</span></span></span></span></strong></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span>By 2 pm:</span></span></span></span></span></span></span></span></p>
<ul><li><span><span><span><span><span><span><span><span><span>Last day for candidates and third party advertisers to file an initial financial statement and auditor’s’ report, if required, for the reporting period ending January 3, 2023.</span></span></span></span></span></span></span></span></span>
<ul><li><span><span><span><span><span><em><span><span><span><span>Note:</span></span></span></span></em><span><span><span><span> An auditor’s report is required if the candidate is participating in the Contribution Rebate Program. An auditor’s report is also required for candidates and third party advertisers if the total contributions received, and total expenses incurred in the election campaign up to the end of the relevant reporting period are each equal to or more than $10,000.</span></span></span></span></span></span></span></span></span></li>
</ul></li>
<li><span><span><span><span><span><span><span><span><span>Last day for a candidate or third party advertiser to notify the City Clerk, in writing, of a filing extension received from the Superior Court of Justice.</span></span></span></span></span></span></span></span></span></li>
</ul><p><span><span><span><span><strong><span><span><span><span>May 1, 2023</span></span></span></span></strong></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span>By 2 pm:</span></span></span></span></span></span></span></span></p>
<ul><li><span><span><span><span><span><span><span><span><span>Last day for a candidate or third party advertiser to file an initial financial statement and auditor’s report, if required, and pay the $500 late filing fee.</span></span></span></span></span></span></span></span></span>
<ul><li><span><span><span><span><span><em><span><span><span><span>Note:</span></span></span></span></em><span><span><span><span> An auditor’s report is required if the candidate is participating in the Contribution Rebate Program. An auditor’s report is also required for candidates and third party advertisers if the total contributions received, and total expenses incurred in the election campaign up to the end of the relevant reporting period are each equal to or more than $10,000.</span></span></span></span></span></span></span></span></span></li>
</ul></li>
</ul><ul><li><span><span><span><span><span><span><span><span><span>Penalties take effect at 2:01 pm.</span></span></span></span></span></span></span></span></span></li>
</ul><p><span><span><span><span><strong><span><span><span><span>June 30, 2023</span></span></span></span></strong></span></span></span></span></p>
<ul><li><span><span><span><span><span><span><span><span><span>Campaign period ends for candidates and third party advertisers that extended their campaign, meaning they cannot accept any contributions or incur any expenses.</span></span></span></span></span></span></span></span></span></li>
</ul><p><span><span><span><span><strong><span><span><span><span>September 28, 2023</span></span></span></span></strong></span></span></span></span></p>
<ul><li><span><span><span><span><span><span><span><span><span>Last day for a candidate or third party advertiser to apply to Superior Court of Justice to extend the time to file their supplementary financial statement.</span></span></span></span></span></span></span></span></span></li>
</ul><p><span><span><span><span><strong><span><span><span><span>September 29, 2023</span></span></span></span></strong></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span>By 2 pm:</span></span></span></span></span></span></span></span></p>
<ul><li><span><span><span><span><span><span><span><span><span>Last day for those who filed a Notice of Extension of Campaign Period - Form 6 to extend the campaign period to file a supplementary financial statement and auditors’ report, if required, for the reporting period ending June 30, 2023.</span></span></span></span></span></span></span></span></span>
<ul><li><span><span><span><span><span><em><span><span><span><span>Note:</span></span></span></span></em><span><span><span><span> An auditor’s report is required if the candidate is participating in the Contribution Rebate Program. An auditor’s report is also required for candidates and third party advertisers if the total contributions received, and total expenses incurred in the election campaign up to the end of the relevant reporting period are each equal to or more than $10,000.</span></span></span></span></span></span></span></span></span></li>
</ul></li>
<li><span><span><span><span><span><span><span><span><span>Last day for a candidate or third party advertiser to notify the City Clerk of a filing extension received from the Superior Court of Justice.</span></span></span></span></span></span></span></span></span></li>
</ul><p><span><span><span><span><strong><span><span><span><span>October 30, 2023</span></span></span></span></strong></span></span></span></span></p>
<p><span><span><span><span><span><span><span><span>By 2 pm:</span></span></span></span></span></span></span></span></p>
<ul><li><span><span><span><span><span><span><span><span><span>Last day for a candidate or third party advertiser to file a supplementary financial statement and auditor’s report, if required, and pay $500 late filing fee.</span></span></span></span></span></span></span></span></span>
<ul><li><span><span><span><span><span><em><span><span><span><span>Note:</span></span></span></span></em><span><span><span><span> An auditor’s report is required if the candidate is participating in the Contribution Rebate Program. An auditor’s report is also required for candidates and third party advertisers if the total contributions received, and total expenses incurred in the election campaign up to the end of the relevant reporting period are each equal to or more than $10,000.</span></span></span></span></span></span></span></span></span></li>
</ul></li>
</ul><ul><li><span><span><span><span><span><span><span><span><span>Penalties take effect at 2:01 pm.</span></span></span></span></span></span></span></span></span></li>
</ul></div>
      
      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-d2a82ff1-9838-49f9-8349-d9083036f498" data-target="#section-d2a82ff1-9838-49f9-8349-d9083036f498" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Financial statements and alternative formats</button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-d2a82ff1-9838-49f9-8349-d9083036f498">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Financial statements and alternative formats</h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-0123989974c8a68a4f977de5416e13e8732d5059962abf95ede2bb6eca97c5f7">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-12bf8f62a0d9d92bfc9cc85ddef90f194fd489e82ef074c5d89d8f62331cf285">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--text-block paragraph--view-mode--default">
          
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><ul><li><span><span><span><span><span><span><span>Statements filed are available online in PDF format. If a candidate or third party advertiser has not filed a financial statement, no PDF will be available. </span></span></span></span></span></span></span></li>
<li><span><span><span><span><span><span><span>The PDF is a scanned copy of a financial statement that was filed with the Elections Office by the candidate or registered third party advertiser. </span></span></span></span></span></span></span></li>
<li><span><span><span><span><span><span><span>The PDF is made available in the language in which the candidate or third party chose to submit their statement. </span></span></span></span></span></span></span></li>
<li><span><span><span><span><span><span><span>Financial statements are available in alternate formats or large print by contacting the </span></span></span><a href="https://ottawa.ca/en/city-hall/your-city-government/elections/information-candidates/contact-elections-office"><span lang="EN-US" xml:lang="EN-US" xml:lang="EN-US"><span><span>Elections Office</span></span></span></a><span><span><span>.</span></span></span></span></span></span></span></li>
<li><span><span><span><span><span><span><span>To request an accessible version of the original PDF:</span></span></span></span></span></span></span>
<ol><li><span><span><span><span><span><span><span>Open the PDF.</span></span></span></span></span></span></span></li>
<li><span><span><span><span><span><span><span>Select the accessibility button on the top left of the PDF.</span></span></span></span></span></span></span></li>
<li><span><span><span><span><span><span><span>You will be redirected to a new web browser.</span></span></span></span></span></span></span></li>
<li><span><span><span><span><span><span><span>Follow the steps to submit a request for an accessible version.</span></span></span></span></span></span></span></li>
</ol><ul><li><span><span><span><span><span lang="EN-CA" xml:lang="EN-CA" xml:lang="EN-CA"><span><span>Note: This service is provided by an external vendor and the information provided on the form is not in the City of Ottawa custody and control. </span></span></span></span></span></span></span></li>
</ul></li>
</ul></div>
      
      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-546e9e7c-a54e-49f7-a2b5-9e4fc215cc47" data-target="#section-546e9e7c-a54e-49f7-a2b5-9e4fc215cc47" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for Mayor </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-546e9e7c-a54e-49f7-a2b5-9e4fc215cc47">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for Mayor </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-19c53abbacf63dd945a6689ea2ee13f654227ff74eeae5cb58564c8a641cc664">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-a4f675e3b92e18b90cd3a78fa9839b7f7a589d69ac079e75c4f301094ed0a520">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for Mayor</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program </th>
			<th><strong>Extended campaign period</strong>  </th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement file</strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Brandon Bay</td>
			<td>May 2, 2022</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 29, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_mayor_brandon_bay_en.pdf">Initial Financial Statement</a>
			</td>
			<td>
			June 29, 2023
			</td>
		</tr><tr><td>Bob Chiarelli </td>
			<td>May 2, 2022</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 21, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_mayor_bob_chiarelli_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Bernard Couchman</td>
			<td>May 2, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			October 28, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_mayor_bernard_couchman_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Graham MacDonald</td>
			<td>May 3, 2022</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_mayor_graham_macdonald_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Catherine McKenney</td>
			<td>May 3, 2022</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_mayor_catherine_mckenney_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Ade Olumide</td>
			<td>May 10, 2022</td>
			<td>May 10, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 13, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_mayor_ade_olumide_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Param Singh</td>
			<td>May 16, 2022</td>
			<td>May 16, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Mark Sutcliffe</td>
			<td>June 29, 2022</td>
			<td>June 29, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_mayor_mark_sutcliffe_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Mike Maguire</td>
			<td>June 29, 2022</td>
			<td>August 3, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_mayor_mike_maguire_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Celine Debassige</td>
			<td>July 15, 2022</td>
			<td>July 15, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Gregory Jreg Guevara</td>
			<td>July 22, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			January 10, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_mayor_gregory_jreg_guevara_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Nour Kadri</td>
			<td>August 2, 2022</td>
			<td>August 2, 2022</td>
			<td>Yes</td>
			<td>Ongoing as candidate filed a Notice of Extension of Campaign Period - Form 6.</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Zed Chebib</td>
			<td>August 10, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			February 15, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_mayor_zed_chebib_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Jacob Solomon</td>
			<td>August 19, 2022</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table>

 </div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-72a1ecc7-95d3-4ba9-b60f-7fdf3eeba020" data-target="#section-72a1ecc7-95d3-4ba9-b60f-7fdf3eeba020" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 1 Orléans East-Cumberland</button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-72a1ecc7-95d3-4ba9-b60f-7fdf3eeba020">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 1 Orléans East-Cumberland</h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-ac4da24f6796908bb9d55cfb02712223b9dc3562d24c3a3e90a4cbac095d9198">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-84ab66bfcc5330738919dbcfface4908d799f7aa70f9564028aaad118e34e1b4">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 1 Orléans East-Cumberland</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Matthew Luloff</td>
			<td>May 2, 2022</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w1_matthew_luloff_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Rosemee Cantave</td>
			<td>August 4, 2022</td>
			<td>August 17, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w1_rosemee_cantave_fr.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Tessa Franklin</td>
			<td>August 9, 2022</td>
			<td>August 9, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-1ba644f5-b234-49d0-a9c6-c1f159c44e0c" data-target="#section-1ba644f5-b234-49d0-a9c6-c1f159c44e0c" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 2 Orléans West-Innes  </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-1ba644f5-b234-49d0-a9c6-c1f159c44e0c">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 2 Orléans West-Innes  </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-45123fe854ce71f50359b484f3c27b5c38131f71e45136a43b8030d4e2cfc473">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-b13fb33a155dccb488d2f0e89f0f309beb33a574985c1f82b6fba0e5fa626ce3">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 2 Orléans West-Innes</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed</strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Laura Dudas</td>
			<td>May 9, 2022</td>
			<td>May 9, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 15, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w2_laura_dudas_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Lori Stinson</td>
			<td>August 18, 2022</td>
			<td>August 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w2_lori_stinson_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Chris Fraser</td>
			<td>August 18, 2022</td>
			<td>August 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 8, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w2_chris_fraser_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-b5fd87a4-fa3d-45e0-ac60-6c9f3a01ffa8" data-target="#section-b5fd87a4-fa3d-45e0-ac60-6c9f3a01ffa8" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 3 Barrhaven West </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-b5fd87a4-fa3d-45e0-ac60-6c9f3a01ffa8">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 3 Barrhaven West </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-1a9d976ae66d65fe55cb6a1fb87cecc4a4826e4a426630409be319cc949acb6d">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-f99bf4d70c4d2ccfd7dd42485969392ff360be2705bdb796959efa9e2afe53ea">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 3 Barrhaven West</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Taayo Simmonds</td>
			<td>May 2, 2022</td>
			<td>May 9, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w3_taayo_simmonds_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>David Hill</td>
			<td>May 3, 2022</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 17, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w3_david_hill_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Sadaf Ebrahim</td>
			<td>May 11, 2022</td>
			<td>May 11, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w3_sadaf_ebrahim_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Jay Chadha</td>
			<td>July 18, 2022</td>
			<td>July 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			January 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w3_jay_chadha_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-e7c18bf8-c833-4f0e-8c0b-42a2f45ab755" data-target="#section-e7c18bf8-c833-4f0e-8c0b-42a2f45ab755" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 4 Kanata North </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-e7c18bf8-c833-4f0e-8c0b-42a2f45ab755">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 4 Kanata North </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-2ccb59c055810cd54597b8752fe3b761a614ce49a3c80ffc8275c78932706b3c">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-8ddba80f5074935e88dabe58a26c764c93a3417129b66cc072ff45e0836135eb">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 30, 2023

<table><caption>Candidates for City Councillor – Ward 4 Kanata North</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed</strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Cathy Curry</td>
			<td>May 3, 2022</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 29, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w4_cathy_curry_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Christine Moulaison</td>
			<td>May 3, 2022</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Viorel Copil</td>
			<td>July 22, 2022</td>
			<td>July 25, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 28, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w4_viorel_copil_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-537ee1f5-ea78-4fbd-8f02-e13ac490fc64" data-target="#section-537ee1f5-ea78-4fbd-8f02-e13ac490fc64" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 5 West Carleton-March </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-537ee1f5-ea78-4fbd-8f02-e13ac490fc64">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 5 West Carleton-March </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-170fcec75f91be77ae150714edc958d8bce71636009b5e76a2ea5693b686cd4d">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-002b9951510b59818c0266939606edec94c185864c6c423459f3a34b98761420">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 5 West Carleton-March</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Clarke Kelly</td>
			<td>June 3, 2022</td>
			<td>June 3, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 30, 2023
			</td>
			<td><a href="https://documents.ottawa.ca/sites/documents/files/statement_w5_clarke_kelly_en.pdf">Initial Financial Statement</a></td>
			<td>June 29, 2023</td>
		</tr><tr><td>Nagmani Sharma</td>
			<td>July 26, 2022</td>
			<td>July 26, 2022</td>
			<td>No</td>
			<td>December 19, 2022</td>
			<td>
			December 19, 2022
			</td>
			<td><a href="https://documents.ottawa.ca/sites/documents/files/statement_w5_nagmani_sharma_en_0.pdf">Initial Financial Statement</a></td>
			<td>June 29, 2023</td>
		</tr><tr><td>Greg Patacairk</td>
			<td>August 5, 2022</td>
			<td>August 5, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 17, 2023
			</td>
			<td><a href="https://documents.ottawa.ca/sites/documents/files/statement_w5_greg_patacairk_en.pdf">Initial Financial Statement</a></td>
			<td>June 29, 2023</td>
		</tr><tr><td>Stephanie Maghnam</td>
			<td>August 5, 2022</td>
			<td>August 8, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td><a href="https://documents.ottawa.ca/sites/documents/files/statement_w5_stephanie_maghnam_en.pdf">Initial Financial Statement</a></td>
			<td>June 29, 2023</td>
		</tr><tr><td>Colin Driscoll</td>
			<td>August 12, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Sasha Duguay</td>
			<td>August 15, 2022</td>
			<td>August 15, 2022</td>
			<td>
			No
			</td>
			<td>January 3, 2023</td>
			<td>
			March 24, 2023
			</td>
			<td><a href="https://documents.ottawa.ca/sites/documents/files/statement_w5_sasha_duguay_en.pdf">Initial Financial Statement</a></td>
			<td>June 29, 2023</td>
		</tr><tr><td>Ian Madill</td>
			<td>August 19, 2022</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 24, 2023
			</td>
			<td><a href="https://documents.ottawa.ca/sites/documents/files/statement_w5_ian_madill_en.pdf">Initial Financial Statement</a></td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-a538b4c0-a89e-490b-ad63-463fb505db6f" data-target="#section-a538b4c0-a89e-490b-ad63-463fb505db6f" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 6 Stittsville </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-a538b4c0-a89e-490b-ad63-463fb505db6f">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 6 Stittsville </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-c3eb6546e58d58b1fa83d8db6ab8fc33b49eea8acb447656ee1978f8b59f94fe">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-880d4a25757c11aea71b76c7f68153261475517a289e57aac36140687c8cdd73">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 6 Stittsville </caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Glen Gower</td>
			<td>May 3, 2022</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 24, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w6_glen_gower_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Tanya Hein</td>
			<td>May 3, 2022</td>
			<td>May 30, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w6_tanya_hein_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Mathew Duchesne</td>
			<td>July 26, 2022</td>
			<td>July 26, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			 

			March 8, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w6_mathew_duchesne_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Kevin Hua</td>
			<td>August 8, 2022</td>
			<td>August 8, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w6_kevin_hua_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-f35ec89e-6c1f-4ce3-b729-154e759c695c" data-target="#section-f35ec89e-6c1f-4ce3-b729-154e759c695c" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 7 Bay </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-f35ec89e-6c1f-4ce3-b729-154e759c695c">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 7 Bay </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-116ff76f43305ee9d945d867c16c353d9b23a28f5243b898596da890893a35c9">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-d11d4f4961b3b1d49769f86e0172389a100a44f4daecf0671366b615914ae78c">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 7 Bay</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Theresa Kavanagh</td>
			<td>May 12, 2022</td>
			<td>May 12, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			February 10, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w7_theresa_kavanagh_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Robert Hill</td>
			<td>June 20, 2022</td>
			<td>June 20, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w7_robert_hill_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Othman Alhusain</td>
			<td>August 19, 2022</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 9, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w7_othman_alhusain_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-d627bd6b-3135-4c4f-aff7-3395e5cefd4f" data-target="#section-d627bd6b-3135-4c4f-aff7-3395e5cefd4f" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 8 College </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-d627bd6b-3135-4c4f-aff7-3395e5cefd4f">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 8 College </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-13614fe6f8b089a533d5cad69aebc99b738ba0cccbdc56fe739caa0e16d891ac">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-b003c7ddf0b4852045441a190c2b7e3b5c2bb1052ca0f64c078ac4a1120529a1">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 8 College</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Laine Johnson</td>
			<td>May 2, 2022</td>
			<td>May 9, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 22, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w8_laine_johnson_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Granda Kopytko</td>
			<td>May 5, 2022</td>
			<td>May 5, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 10, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w8_granda_kopytko_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Wendy Davidson</td>
			<td>June 17, 2022</td>
			<td>June 17, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 14, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w8_wendy_davidson_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Pat McGarry</td>
			<td>July 13, 2022</td>
			<td>July 13, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w8_pat_mcgarry_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Vilteau Delvas</td>
			<td>August 18, 2022</td>
			<td>August 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w8_vilteau_delvas_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-68fa1cbd-930c-4f3a-a480-03b781784fa6" data-target="#section-68fa1cbd-930c-4f3a-a480-03b781784fa6" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 9 Knoxdale-Merivale</button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-68fa1cbd-930c-4f3a-a480-03b781784fa6">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 9 Knoxdale-Merivale</h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-a26b73d17d4fc4d0637fddfdb70d9e1156f0d5d734be45082ffc3add93f4442f">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-e37964db58f096f684c61113546bd7ae3f413e0a0c46ce55cdeacb255da87842">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 9 Knoxdale-Merivale</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Sean Devine</td>
			<td>May 16, 2022</td>
			<td>May 16, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w9_sean_devine_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>James Dean</td>
			<td>June 27, 2022</td>
			<td>Not registered </td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Peter Anthony Weber</td>
			<td>June 28, 2022</td>
			<td>Not registered </td>
			<td>No</td>
			<td>December 9, 2022</td>
			<td>
			December 9, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w9_peter_anthony_weber_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Myles Egli</td>
			<td>July 4, 2022</td>
			<td>July 4, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w9_myles_egli_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Joseph Ben-Ami</td>
			<td>July 6, 2022</td>
			<td>July 12, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Peter Westaway</td>
			<td>July 29, 2022</td>
			<td>July 29, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w9_peter_westaway_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Michael Wood</td>
			<td>August 15, 2022</td>
			<td>August 15, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 27, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w9_michael_wood_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-979fa1bf-e767-4391-8ef8-6c0672be37da" data-target="#section-979fa1bf-e767-4391-8ef8-6c0672be37da" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 10 Gloucester-Southgate</button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-979fa1bf-e767-4391-8ef8-6c0672be37da">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 10 Gloucester-Southgate</h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-0ad27050b283f68b928862bf442226ff92d5693412b3b412f9462b9a9160e2d6">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-097ac63d611a6206539b40e7b57005812baa433cd6d429a29612802afc8a283e">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 10 Gloucester-Southgate</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed</strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Aria Alavi</td>
			<td>May 11, 2022</td>
			<td>May 11, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 28, 2023

			 
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w10_aria_alavi_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>John Redins</td>
			<td>May 20, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>
			December 6, 2022
			</td>
			<td>
			December 6, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w10_john_redins_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Hussein Mahmoud</td>
			<td>August 5, 2022</td>
			<td>August 5, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 24, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w10_hussein_mahmoud_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Jessica Bradley</td>
			<td>August 15, 2022</td>
			<td>August 15, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			February 24, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w10_jessica_bradley_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Taylor Houstoun</td>
			<td>August 17, 2022</td>
			<td>August 17, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w10_taylor_houstoun_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Ron Keays</td>
			<td>August 18, 2022</td>
			<td>August 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-560b6e26-f892-44dc-94a8-f4e6180221ce" data-target="#section-560b6e26-f892-44dc-94a8-f4e6180221ce" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 11 Beacon Hill-Cyrville </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-560b6e26-f892-44dc-94a8-f4e6180221ce">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 11 Beacon Hill-Cyrville </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-d89078ffe2eb165489319a0fe333cc975a7120c3f0961ac2dcca2c1d5765407e">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-da4e3e3e4851fb36115c33e3d8d4a8a971b24d3ebd85576768e2ad160cfc1c37">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 11 Beacon Hill-Cyrville</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed</strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Tim Tierney</td>
			<td>May 2, 2022</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>March 29, 2023</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w11_tim_tierney_en.pdf">Initial Financial Statement</a>
			</td>
			<td>
			June 29, 2023
			</td>
		</tr><tr><td>Miranda Gray</td>
			<td>August 11, 2022</td>
			<td>August 11, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>March 28, 2023</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w11_miranda_gray_en.pdf">Initial Financial Statement</a>
			</td>
			<td>
			June 29, 2023
			</td>
		</tr><tr><td>Nicolas Castro</td>
			<td>August 18, 2022</td>
			<td>August 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>March 16, 2023</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w11_nicolas_castro_en.pdf">Initial Financial Statement</a>
			</td>
			<td>
			June 29, 2023
			</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-4b047738-c813-4431-ba1f-55e78c899441" data-target="#section-4b047738-c813-4431-ba1f-55e78c899441" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 12 Rideau-Vanier </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-4b047738-c813-4431-ba1f-55e78c899441">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 12 Rideau-Vanier </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-8f14c052193de84d9827cf0b691d2731e39daeda8dcf45d3335a5691cf210cde">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-f32fb4f5b271648cad07fd029b8bc1b26a2b0b2b9b2712d60f321ac2b8faae6e">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 12 Rideau-Vanier</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Laura Shantz</td>
			<td>May 2, 2022</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w12_laura_shantz_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Alex Osorio</td>
			<td>May 16, 2022</td>
			<td>June 28, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Tyler Cybulski</td>
			<td>May 20, 2022</td>
			<td>August 16, 2022</td>
			<td>No</td>
			<td>November 1, 2022</td>
			<td>
			November 1, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w12_tyler_cybulski_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Julie Fiala</td>
			<td>May 24, 2022</td>
			<td>May 24, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Patrick Auguste</td>
			<td>August 12, 2022</td>
			<td>August 12, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w12_patrick_auguste_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Jwane Izzetpanah</td>
			<td>August 12, 2022</td>
			<td>August 12, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Burthomley Douzable</td>
			<td>August 16, 2022</td>
			<td>August 16, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Stéphanie Plante</td>
			<td>August 17, 2022</td>
			<td>Not registered</td>
			<td>
			No
			</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Hicham Boutaleb</td>
			<td>August 17, 2022</td>
			<td>August 17, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 2, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w12_hicham_boutaleb_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Kim Leclerc</td>
			<td>August 19, 2022</td>
			<td>August 19, 2022</td>
			<td>Yes</td>
			<td>Ongoing as candidate filed a Notice of Extension of Campaign Period - Form 6.</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-e446b8a9-3115-4ee1-8f9e-c3d2063edc4c" data-target="#section-e446b8a9-3115-4ee1-8f9e-c3d2063edc4c" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 13 Rideau-Rockcliffe </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-e446b8a9-3115-4ee1-8f9e-c3d2063edc4c">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 13 Rideau-Rockcliffe </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-a50f3f0ca5bd4821d61e7fcb1a9dba1acb3a58f4387bc4ef57d8a07cbfa59060">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-40446473a8079514a805bf1bad0e7293d591b868061d79caa106e27b71a61188">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 13 Rideau-Rockcliffe</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Rawlson King</td>
			<td>May 16, 2022</td>
			<td>May 16, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			February 10, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w13_rawlson_king_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Clayton Fitzsimmons</td>
			<td>August 18, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Peter Jan Karwacki</td>
			<td>August 19, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			January 25, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w13_peter_jan_karwacki_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Peter Zanette</td>
			<td>August 19, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 20, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w13_peter_zanette_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-dac90b7e-d05a-40a6-a918-5c8389d8e7c4" data-target="#section-dac90b7e-d05a-40a6-a918-5c8389d8e7c4" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 14 Somerset </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-dac90b7e-d05a-40a6-a918-5c8389d8e7c4">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 14 Somerset </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-a9df89e4d86d20cd07136f229437042092f089835e1973b521f9e97681415fa8">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-c6ee27e84cdef1f04fee051206235f6a3ac9488683b435931bae460a60a5dc34">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 14 Somerset </caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Brandon Russell</td>
			<td>May 2, 2022</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Stuart MacKay</td>
			<td>May 3, 2022</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 22, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w14_stuart_mackay_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Ariel Troster</td>
			<td>June 13, 2022</td>
			<td>June 13, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w14_ariel_troster_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-46d0c1a5-f16c-4e4c-bc79-30b4bd3eab03" data-target="#section-46d0c1a5-f16c-4e4c-bc79-30b4bd3eab03" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 15 Kitchissippi </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-46d0c1a5-f16c-4e4c-bc79-30b4bd3eab03">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 15 Kitchissippi </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-1724e7e80082dd188b40c78e6e521028b1e669448f46e25074ed9c67566d30ee">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-d002ae8ffa2fbcd7d8fefc92d6bd8ca8e98ea5b830559e54210a85b0288c7350">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 15 Kitchissippi</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Jeff Leiper</td>
			<td>May 3, 2022</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 14, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w15_jeff_leiper_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Dan Stringer</td>
			<td>May 11, 2022</td>
			<td>August 16, 2022</td>
			<td>Yes</td>
			<td>Ongoing as candidate filed a Notice of Extension of Campaign Period - Form 6.</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Oonagh Fitzgerald</td>
			<td>June 24, 2022</td>
			<td>June 24, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			January 23, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w15_oonagh_fitzgerald_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-dd997ad4-4090-49fd-9674-5b3f8813df5b" data-target="#section-dd997ad4-4090-49fd-9674-5b3f8813df5b" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 16 River </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-dd997ad4-4090-49fd-9674-5b3f8813df5b">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 16 River </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-e222373d0c67bc221152b23a53efc8f309a9f7581f949e7d5e59695940ca5674">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-fcada4849f398f7dfb69ccb9dadd88210369398e2cf98fd690fd8315cc79a70c">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 16 River</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Riley Brockington</td>
			<td>May 19, 2022</td>
			<td>May 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w16_riley_brockington_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Ethan Sabourin</td>
			<td>August 5, 2022</td>
			<td>August 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Alex Dugal</td>
			<td>August 19, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 20, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w16_alex_dugal_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-b80c037c-9987-4597-9f9e-d1d51b9a35a9" data-target="#section-b80c037c-9987-4597-9f9e-d1d51b9a35a9" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 17 Capital </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-b80c037c-9987-4597-9f9e-d1d51b9a35a9">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 17 Capital </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-3121be10ccad07af412b18b85940ee8feefd15b955e991f242a42c9247589e6f">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-79cd6dd57ea6c04e62b126334b6cbceab27bdd73eeb2ebe5d2c555e59b320b21">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 17 Capital</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Rebecca Bromwich</td>
			<td>May 3, 2022</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Shawn Menard</td>
			<td>June 22, 2022</td>
			<td>June 22, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 24, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w17_shawn_menard_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Daniel Rogers</td>
			<td>August 19, 2022</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 28, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w17_daniel_rogers_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-74f6da81-18e9-49d9-98a5-34b8086cc586" data-target="#section-74f6da81-18e9-49d9-98a5-34b8086cc586" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 18 Alta Vista </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-74f6da81-18e9-49d9-98a5-34b8086cc586">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 18 Alta Vista </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-d563c50d738462ccff42d5d3b0d45deab26ee6b407d19df1e727c1ebcdebf840">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-cb09d16e4203a146eb48434da58dcfc6a61957c05ea495f665f83cbfb7693fe1">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 18 Alta Vista</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Marty Carr</td>
			<td>May 2, 2022</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 17, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w18_marty_carr_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Carolyn Kropp</td>
			<td>July 4, 2022</td>
			<td>July 4, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 15, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w18_carolyn_kropp_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Bob Perkins</td>
			<td>August 18, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			January 20, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w18_bob_perkins_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Angelo Gino Scaffidi</td>
			<td>August 19, 2022</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 29, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w18_angelo_gino_scaffidi_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-0368e4a4-ed0e-4bb3-9462-b235208c35d4" data-target="#section-0368e4a4-ed0e-4bb3-9462-b235208c35d4" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 19 Orléans South-Navan </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-0368e4a4-ed0e-4bb3-9462-b235208c35d4">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 19 Orléans South-Navan </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-0ed9e3e5049d0b460b98b04abe4ab53ed6346aa54f6de991271dfbbdfd71834e">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-50082bea4aaffacbe38c6818e7a3f6764397f58bd94aebadb5d276fa8567b197">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 19 Orléans South-Navan</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Catherine Kitts</td>
			<td>May 2, 2022</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 28, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w19_catherine_kitts_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Yvette Ashiri</td>
			<td>May 26, 2022</td>
			<td>May 26, 2022</td>
			<td>No</td>
			<td>January 3, 2023
			 
			</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w19_yvette_ashiri_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Shamsa Sheikh Ahmed</td>
			<td>August 18, 2022</td>
			<td>August 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-a26497fa-0f70-4b44-800d-2613cf49deb3" data-target="#section-a26497fa-0f70-4b44-800d-2613cf49deb3" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 20 Osgoode </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-a26497fa-0f70-4b44-800d-2613cf49deb3">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 20 Osgoode </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-25f597b0d2bb8153fe96a5c5f393c84f03511f76a1fe4ec53df800f2b30f1b62">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-52528ea762d495b0525579a0e84e05a3e341cac9fee5bf3f055a731f0411f4cf">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 20 Osgoode</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>George Darouze</td>
			<td>June 29, 2022</td>
			<td>June 29, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 17, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w20_george_darouze_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Doug Thompson</td>
			<td>July 21, 2022</td>
			<td>Not registered </td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 22, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w20_doug_thompson_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Dan O'Brien</td>
			<td>July 29, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 21, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w20_dan_obrien_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Bob Masaro</td>
			<td>August 3, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 14, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w20_bob_masaro_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Bruce Anthony Faulkner</td>
			<td>August 19, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			December 15, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w20_bruce_anthony_faulkner_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-a31a2b0c-783c-489e-965b-9a33a0b2e408" data-target="#section-a31a2b0c-783c-489e-965b-9a33a0b2e408" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 21 Rideau-Jock </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-a31a2b0c-783c-489e-965b-9a33a0b2e408">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 21 Rideau-Jock </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-b6ee721e95c929ba11e297dee3f753413e8ef4c5b5bfc9dd6c4c15ab305bd2a6">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-d1bafe8a6d12ab5b886cbbb836e4bb111b778ab5450ab6bd505d6eb863ae8d98">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 21 Rideau-Jock</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Leigh-Andrea Brunet</td>
			<td>May 4, 2022</td>
			<td>June 20, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w21_leighandrea_brunet_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Patty Searl</td>
			<td>May 10, 2022</td>
			<td>May 10, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 27, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w21_patricia_searl_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>David Brown</td>
			<td>June 1, 2022</td>
			<td>June 1, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 29, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w21_david_brown_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Kevin Setia</td>
			<td>August 9, 2022</td>
			<td>August 14, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w21_kevin_setia_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Michael J Nowak</td>
			<td>August 10, 2022</td>
			<td>August 10, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-9ed06a04-74ca-4e30-a740-073b513e50fb" data-target="#section-9ed06a04-74ca-4e30-a740-073b513e50fb" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 22 Riverside South-Findlay Creek </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-9ed06a04-74ca-4e30-a740-073b513e50fb">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 22 Riverside South-Findlay Creek </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-870b91be33248ff31238892d0dfb0ccacd5525c9d56620dabfd5611a88d4977e">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-93b6e1b73c660ffb3d6288c0160743de81dafe6d6c9fcd3d0232a04388142205">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 22 Riverside South-Findlay Creek </caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Em McLellan</td>
			<td>May 2, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Steve Desroches</td>
			<td>May 18, 2022</td>
			<td>May 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 9, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w22_steve_desroches_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Salah Elsaadi</td>
			<td>August 19, 2022</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Zainab Alsalihiy</td>
			<td>August 19, 2022</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-4e3d934b-727c-4df8-bfe2-21a85b1fa0eb" data-target="#section-4e3d934b-727c-4df8-bfe2-21a85b1fa0eb" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 23 Kanata South </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-4e3d934b-727c-4df8-bfe2-21a85b1fa0eb">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 23 Kanata South </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-6d1aa1c5f2afbee0f10cfc94ef6dc46bb9b099643473da72330e186b34cebddc">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-f8eb4a761193cf7f6b08f0976fbcc8fe7cfaddefd997a48dfa0d7252ca043e20">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 23 Kanata South </caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Bina Shah</td>
			<td>May 9, 2022</td>
			<td>May 25, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w23_bina_shah_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Rouba Fattal</td>
			<td>May 17, 2022</td>
			<td>May 17, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w23_rouba_fattal_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Erin Coffin</td>
			<td>May 26, 2022</td>
			<td>May 26, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 24, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w23_erin_coffin_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Allan Hubley</td>
			<td>June 17, 2022</td>
			<td>June 17, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 29, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w23_allan_hubley_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Mike Dawson</td>
			<td>August 12, 2022</td>
			<td>Not registered</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w23_mike_dawson_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-88d9a13f-70bb-4981-a916-3919b607cf01" data-target="#section-88d9a13f-70bb-4981-a916-3919b607cf01" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for City Councillor – Ward 24 Barrhaven East </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-88d9a13f-70bb-4981-a916-3919b607cf01">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for City Councillor – Ward 24 Barrhaven East </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-1e35ed54c94ea4b80e48783e9eaaa0642fcfcacd051c3d2cb0460e215c74cfff">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-bfe79c83ed4681933024bf1601d1e76aa30eaca7da202b98b7e240ef78c04a24">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Candidates for City Councillor – Ward 24 Barrhaven East </caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Dominik Janelle</td>
			<td>May 6, 2022</td>
			<td>June 16, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			December 1, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w24_dominik_janelle_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Kathleen Caught</td>
			<td>May 26, 2022</td>
			<td>May 26, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w24_kathleen_caught_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Wilson Lo</td>
			<td>June 24, 2022</td>
			<td>June 24, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w24_wilson_lo_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Patrick Brennan</td>
			<td>July 29, 2022</td>
			<td>July 29, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w24_pat_brennan_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Richard Garrick</td>
			<td>August 11, 2022</td>
			<td>August 11, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w24_richard_garrick_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Guy Boone</td>
			<td>August 19, 2022</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w24_guy_boone_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Atiq Qureshi</td>
			<td>August 19, 2022</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w24_atiq_qureshi_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-cd5c5989-6047-48f8-a1c7-4d9e842684fb" data-target="#section-cd5c5989-6047-48f8-a1c7-4d9e842684fb" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for School Board Trustee – Ottawa Catholic School Board</button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-cd5c5989-6047-48f8-a1c7-4d9e842684fb">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for School Board Trustee – Ottawa Catholic School Board</h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-55c7e4e3246e197ea3c15c4d517e5746de996fd9bdfc9abbd219e043c41b7221">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-cc4298a6ed43ea244fc01f13d2d16220a1f0849ad6cc219e4c475ed3ec86502b">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 1</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa Catholic School Board - Zone 1</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Mardi de Kemp</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>
			December 13, 2022
			</td>
			<td>
			December 13, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z1_mardi_dekemp_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Jeff Darwin</td>
			<td>August 16, 2022</td>
			<td>No</td>
			<td>November 1, 2022</td>
			<td>
			November 2, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z1_jeff_darwin_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Scott Phelan</td>
			<td>August 16, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 27, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z1_scott_phelan_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 2</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa Catholic School Board - Zone 2</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Sandra Moore </td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 13, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z2_sandra_moore_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Alex Sithole</td>
			<td>July 22, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			January 6, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z2_alex_sithole_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 3</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa Catholic School Board - Zone 3</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Brian Coburn</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>
			November 7, 2022
			</td>
			<td>
			November 7, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z3_brian_coburn_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Marguerite Gravelle </td>
			<td>August 17, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Paul Safi</td>
			<td>August 17, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 28, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z3_paul_safi_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 4</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa Catholic School Board - Zone 4</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Greg Hopkins</td>
			<td>May 5, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 3, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z4_greg_hopkins_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Spencer Warren</td>
			<td>May 6, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z4_spencer_warren_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Nicolas Caravaggio</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 5</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa Catholic School Board - Zone 5</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Joanne MacEwan</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>
			November 2, 2022
			</td>
			<td>
			November 2, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z5_joanne_macewan_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Marc Bélisle</td>
			<td>August 8, 2022</td>
			<td>No</td>
			<td>December 6, 2022</td>
			<td>
			December 6, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z5_marc_b%C3%A9lisle_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 6</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa Catholic School Board - Zone 6</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Eugene Milito</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 27, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z6_eugene_milito_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Glen Armstrong</td>
			<td>June 6, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 3, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z6_glen_armstrong_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Melissa Fraser-Arnott</td>
			<td>June 21, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			January 9, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z6_melissa_fraserarnott_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Patrick Suwalski</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>December 5, 2022</td>
			<td>
			December 5, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z6_patrick_suwalski_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 7</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa Catholic School Board - Zone 7</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Jeremy Wittet</td>
			<td>May 4, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 9, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z7_jeremy_wittet_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Danny Arrais</td>
			<td>August 9, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z7_danny_arrais_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 8</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa Catholic School Board - Zone 8</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Mark D Mullan</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 28, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z8_mark_d_mullan_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Christopher Andrew John Kelly</td>
			<td>August 9, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 14, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z8_christopher_kelly_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 9</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa Catholic School Board - Zone 9</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Shelley Lawrence</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 9, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z9_shelley_lawrence_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Guillermo Fernandez</td>
			<td>August 4, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 27, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z9_guillermo_fernandez_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Jenny Rivera</td>
			<td>August 16, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 6, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z9_jenny_rivera_en_0.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 10</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa Catholic School Board - Zone 10</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Cindy Desclouds-Simpson</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 17, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z10_cindy_descloudssimpson_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Cameron Bonesso</td>
			<td>May 17, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocsb_z10_cameron_bonesso_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-422fc807-8497-4f42-81be-05143be505a1" data-target="#section-422fc807-8497-4f42-81be-05143be505a1" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for School Board Trustee – Ottawa-Carleton District School Board </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-422fc807-8497-4f42-81be-05143be505a1">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for School Board Trustee – Ottawa-Carleton District School Board </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-f645ff179946f68b7f147c64825f0f0003ac43078fb5026f037abfad84c4a37d">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-ad192e8b9b3c773b58ea6bc696650971d60121ce71dddd63958b7e44f6422a44">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 1</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa-Carleton District School Board - Zone 1</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Gananatha Subrahmanyam</td>
			<td>July 28, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z1_lynn_scott_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Jonathon Salinas</td>
			<td>August 8, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Lynn Scott</td>
			<td>August 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z1_lynn_scott_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 2</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa-Carleton District School Board - Zone 2</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Ashley Darling</td>
			<td>May 31, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 16, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z2_ashley_darling_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Alex Rochman</td>
			<td>August 3, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			January 5, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z2_alexandre_rochman_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Alastair Luft</td>
			<td>August 9, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Alysha Aziz</td>
			<td>August 17, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 28, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z2_alysha_aziz_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Michael Edwards</td>
			<td>August 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			January 17, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z2_michael_edwards_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Thomas DeGroot</td>
			<td>August 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 20, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z2_thomas_degroot_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 3</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa-Carleton District School Board - Zone 3</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Donna Blackburn</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z3_donna_blackburn_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Patricia Kmiec</td>
			<td>July 13, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 15, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z3_patricia_kmiec_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Natalie Rowe</td>
			<td>August 17, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 27, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z3_natalie_rowe_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 4</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa-Carleton District School Board - Zone 4</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Suzanne Nash</td>
			<td>May 19, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			January 4, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z4_suzanne_nash_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Kevin Wright</td>
			<td>August 8, 2022</td>
			<td>No</td>
			<td>November 23, 2022</td>
			<td>
			November 23, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z4_kevin_wright_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Rasha Alnaqeeb</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 5</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa-Carleton District School Board - Zone 5</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Steven Warren</td>
			<td>June 3, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 29, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z5_steven_warren_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Amanda Presley</td>
			<td>August 15, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 21, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z5_amanda_presley_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Gemma Nicholson</td>
			<td>August 18, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 6</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa-Carleton District School Board - Zone 6</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Keith de Silvia-Legault</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z6_keith_desilvialegault_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Lyra Evans</td>
			<td>June 13, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z6_lyra_evans_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Ryan Ward</td>
			<td>June 20, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 21, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z6_ryan_ward_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Shannon Boschy</td>
			<td>June 21, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 27, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z6_shannon_boschy_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Anthony Hope</td>
			<td>June 29, 2022</td>
			<td>No</td>
			<td>October 28, 2022</td>
			<td>
			October 28, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z6_anthony_hope_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Jennifer Moroziuk</td>
			<td>August 15, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 27, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z6_jennifer_moroziuk_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 7</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa-Carleton District School Board - Zone 7</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Jennifer Jennekens</td>
			<td>May 4, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			February 22, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z7_jennifer_jennekens_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Maria Inam Khan</td>
			<td>May 24, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 8, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z7_maria_inam_khan_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 8</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa-Carleton District School Board - Zone 8</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Shannon Kramer</td>
			<td>June 27, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			January 4, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z8_shannon_kramer_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Donna Dickson</td>
			<td>July 22, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 13, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z8_donna_dickson_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Chanel Pfahl</td>
			<td>August 15, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 16, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z8_chanel_pfahl_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 9</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa-Carleton District School Board - Zone 9</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Jessie-Lee Wallace</td>
			<td>May 25, 2022</td>
			<td>
			No
			</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z9_jessie-lee_wallace_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Nili Kaplan-Myrth</td>
			<td>August 16, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 17, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z9_nili_kaplanmyrth_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Josh Rachlis</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 10</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa-Carleton District School Board - Zone 10</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Justine Bell</td>
			<td>May 4, 2022</td>
			<td>No</td>
			<td>
			December 12, 2022
			</td>
			<td>
			December 12, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z10_justine_bell_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>John Bitzan</td>
			<td>August 17, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			January 4, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z10_john_bitzan_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table>

 </div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 11</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa-Carleton District School Board - Zone 11</caption>
	<thead><tr><th>Candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Matthew Lee</td>
			<td>June 24, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			January 4, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z11_matthew_lee_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Mamata Dutta</td>
			<td>July 29, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 20, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z11_mamata_dutta_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Ryan St-Jean</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 14, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z11_ryan_stjean_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Maher Jebara</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 17, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z11_maher_jebara_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 12</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Ottawa-Carleton District School Board - Zone 12</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Sandra Griffith-Bonaparte</td>
			<td>May 13, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z12_sandra_griffithbonaparte_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Peter Heyck</td>
			<td>July 6, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 24, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z12_peter_heyck_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Cathryne Milburn</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>December 21, 2022</td>
			<td>
			December 21, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z12_cathryne_milburn_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-b70649b8-1e78-4543-b89d-b4519e7bbf89" data-target="#section-b70649b8-1e78-4543-b89d-b4519e7bbf89" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for School Board Trustee – Conseil des écoles catholiques du Centre-Est</button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-b70649b8-1e78-4543-b89d-b4519e7bbf89">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for School Board Trustee – Conseil des écoles catholiques du Centre-Est</h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-9db20036c7694bd5953bc3af9c44626a42af55f114ebfab9ab5f493b94c46fd5">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-3ce6f93c5d1aa5d78d226d1929fbbcd360ef7535274256b83c78c33a5364584b">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 4</h3>

Last updated: March 31, 2023

<table><caption>Acclaimed candidate for Conseil des écoles catholiques du Centre-Est - Zone 4</caption>
	<thead><tr><th>Acclaimed candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Jolène Savoie-Day</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 24, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cecce_z4_jol%C3%A8ne_savoieday_fr.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 5</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Conseil des écoles catholiques du Centre-Est - Zone 5</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Chad Mariage</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 23, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cecce_z5_chad_mariage_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Claude Lalonde</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 24, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cecce_z5_claude_lalonde_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 6</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Conseil des écoles catholiques du Centre-Est - Zone 6</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Franklin Epape</td>
			<td>June 7, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			 
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Denis Forget</td>
			<td>August 17, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			 
			</td>
			<td>
			March 29, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cecce_z6_denis_forget_fr.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 7</h3>

Last updated: March 31, 2023

<table><caption>Acclaimed candidate for Conseil des écoles catholiques du Centre-Est - Zone 7</caption>
	<thead><tr><th>Acclaimed candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Robert Rainboth</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 27, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cecce_z7_robert_rainboth_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 8</h3>

Last updated: March 31, 2023

<table><caption>Acclaimed candidate for Conseil des écoles catholiques du Centre-Est - Zone 8</caption>
	<thead><tr><th>Acclaimed candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Dan Boudria</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			January 3, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cecce_z8_dan_doudria_fr.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 9</h3>

Last updated: March 31, 2023

<table><caption>Acclaimed candidate for Conseil des écoles catholiques du Centre-Est - Zone 9</caption>
	<thead><tr><th>Acclaimed candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Johanne Lacombe</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>August 22, 2022</td>
			<td>
			December 5, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cecce_z9_johanne_lacombe_fr.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 10</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Conseil des écoles catholiques du Centre-Est - Zone 10</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Léo Cardinal</td>
			<td>May 9, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Monique Briand</td>
			<td>May 9, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 27, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cecce_z10_monique_briand_fr.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 11</h3>

Last updated: March 31, 2023

<table><caption>Acclaimed candidate for Conseil des écoles catholiques du Centre-Est - Zone 11</caption>
	<thead><tr><th>Acclaimed candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>André Thibodeau</td>
			<td>May 4, 2022</td>
			<td>No</td>
			<td>August 19, 2022</td>
			<td>
			December 13, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cecce_z11_andr%C3%A9_thibodeau_fr.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-a917e734-da0a-4dbb-9698-f1f61c46c9de" data-target="#section-a917e734-da0a-4dbb-9698-f1f61c46c9de" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Candidates for School Board Trustee – Conseil des écoles publiques de l&#039;Est de l&#039;Ontario </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-a917e734-da0a-4dbb-9698-f1f61c46c9de">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Candidates for School Board Trustee – Conseil des écoles publiques de l&#039;Est de l&#039;Ontario </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-efd7459bc6d33560ec7666bf614e286f9e18792baa790261ae82f64e6568b730">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-78bdb139d786e6c75ff32413088c287c30fde58d4608d9903a653998b6e2be0e">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 6</h3>

Last updated: March 31, 2023

<table><caption>Acclaimed candidate for Conseil des écoles publiques de l'Est de l'Ontario - Zone 6</caption>
	<thead><tr><th>
			Acclaimed candidate’s name
			</th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Marc Roy</td>
			<td>May 17, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 1, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cepeo_z6_marc_roy_fr.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 7</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Conseil des écoles publiques de l'Est de l'Ontario - Zone 7</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Nenette Ntema-Mbudi</td>
			<td>June 9, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			January 3, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cepeo_z7_nenette_ntemambudi_fr.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Philippe Landry</td>
			<td>August 5, 2022</td>
			<td>
			No
			</td>
			<td>January 3, 2023</td>
			<td>
			March 29, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cepeo_z7_philippe_landry_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 8</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Conseil des écoles publiques de l'Est de l'Ontario - Zone 8</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Denis Labrèche</td>
			<td>May 18, 2022</td>
			<td>No</td>
			<td>
			November 17, 2022
			</td>
			<td>
			November 21, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cepeo_z8_denis_labr%C3%A8che_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Annila Tharakan</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cepeo_z8_annila_tharakan_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 9</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Conseil des écoles publiques de l'Est de l'Ontario - Zone 9</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Marielle Godbout</td>
			<td>May 5, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 30, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cepeo_z9_marielle_godbout_fr.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Joël Beddows</td>
			<td>August 8, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 14, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cepeo_z9_joel_beddows_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Mahdi Djama Aouled</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 8, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cepeo_z9_mahdi_djama_fr.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 10</h3>

Last updated: March 31, 2023

<table><caption>Candidates for Conseil des écoles publiques de l'Est de l'Ontario - Zone 10</caption>
	<thead><tr><th><strong>Candidate’s name</strong></th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Sonia Boudreault</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 9, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cepeo_z10_sonia_boudreault_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Warsama Aden</td>
			<td>May 3, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 15, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cepeo_z10_warsama_aden_fr.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Joseph-Alphonse André</td>
			<td>August 19, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>
			Financial Statement - Auditor's Report Candidate - Form 4 not filed at this time
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 11</h3>

Last updated: March 31, 2023

<table><caption>Acclaimed candidate for Conseil des écoles publiques de l'Est de l'Ontario - Zone 11</caption>
	<thead><tr><th>Acclaimed candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Jacinthe Marcil</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			February 7, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cepeo_z11_jacinthe_marcil_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><h3>Zone 12</h3>

Last updated: March 31, 2023

<table><caption>Acclaimed candidate for Conseil des écoles publiques de l'Est de l'Ontario - Zone 12</caption>
	<thead><tr><th>Acclaimed candidate’s name</th>
			<th><strong>Date campaign period began</strong></th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Samia Ouled Ali</td>
			<td>May 2, 2022</td>
			<td>No</td>
			<td>
			October 24, 2022
			</td>
			<td>
			December 9, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_cepeo_z12_samia_ouledali_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-70370f26-3820-4bdf-81ed-3a0ba962d68b" data-target="#section-70370f26-3820-4bdf-81ed-3a0ba962d68b" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Registered third party advertisers </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-70370f26-3820-4bdf-81ed-3a0ba962d68b">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Registered third party advertisers </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-4b2e2bae508f1c847cbe567315e87c11c0d43c1b2d34cc2dd43818c036d382cf">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-0c1022e0f96035bf4244744aba566b3e5a672fef0f5d3d7f1fb32a3ef1ee55a7">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Registered third party advertisers</caption>
	<thead><tr><th>Name of registrant</th>
			<th>Date registration filed</th>
			<th><strong>Extended campaign period</strong></th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Horizon Ottawa</td>
			<td>August 24, 2022</td>
			<td>No</td>
			<td>
			January 3, 2023
			</td>
			<td>
			March 31, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_horizon_ottawa_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Campaign Life Coalition</td>
			<td>September 9, 2022</td>
			<td>No</td>
			<td>January 3, 2023</td>
			<td>
			March 2, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_campaign_life_coalition_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table></div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
              <div class="field__item">  <div class="paragraph paragraph--type--layout paragraph--view-mode--default">
          
  

  <div class="layout layout--bootstrap-grid-row-1 row">

  
      <div class="col collapse-region">
      <h2 class="no-toc">
                  
  <button aria-expanded="false" aria-controls="section-db13f477-b9d9-40ab-9aba-73e9e9ce0fc2" data-target="#section-db13f477-b9d9-40ab-9aba-73e9e9ce0fc2" data-toggle="collapse" role="button" class="border border-primary rounded collapse-section no-toc btn-link btn">Withdrawn candidates </button>

      </h2>
      <div class="collapse collapse-wrapper border border-primary border-top-0 no-gutters p-4 w-100" id="section-db13f477-b9d9-40ab-9aba-73e9e9ce0fc2">
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--article-reference paragraph--view-mode--default">
          
            <div class="field field--name-field-content-ref field--type-entity-reference-label-override field--label-hidden field__item">

<article role="article" class="node node--type-article node--view-mode-default">
  
  <div class="node__content">
      <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      


  <span class="field field--name-title field--type-string field--label-hidden"><h2  class="h2">Withdrawn candidates </h2>
</span>


<div class="views-element-container">



  <div><div class="view view-alert view-id-alert view-display-id-alert_related_block js-view-dom-id-0b3257606bae7827855ee77886abc432e74982578b50fc7ddd61fb8ed0dc4f78">
  
    
      
  
          </div>
</div>


</div>
<div class="views-element-container">



  <div><div class="view view-status view-id-status view-display-id-status_related_block js-view-dom-id-b099c846d2af76e8c9915769e346f29c7050f759150e487ff4c17c3a419d1675">
  
    
      
  
          </div>
</div>


</div>



  
      <div class="field field--name-field-paragraphs field--type-entity-reference-revisions field--label-hidden field__items">
              <div class="field__item">  <div class="paragraph paragraph--type--fixed-layout paragraph--view-mode--default">
          
  
  
  <div class="toc-selectors layout layout--bootstrap-fixed-grid-row-1 row">

  
  
              
                      <div  class="layout__region layout__region--main col-12">
          
                <div class="paragraph paragraph--type--text-block paragraph--view-mode--default">
          
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item"><p><span><span><span><span><span><span>The deadline for a nominated candidate to withdraw their nomination with the City Clerk was 2 pm on Friday, August 19, 2022. </span></span></span></span></span></span></p>
<p><span><span><span><span><span><span>In accordance with the <em>Municipal Elections Act, 1996,</em> c</span></span></span><span><span><span>andidates who withdrew their nomination are still required to submit an initial financial statement by Friday, March 31, 2023, at 2 pm that covers all financial transactions up to the time of the withdrawal.</span></span></span></span></span></span></p>
</div>
      
      </div>
  <div class="paragraph paragraph--type--table paragraph--view-mode--default">
            <div class="layout layout--onecol">
    <div  class="layout__region layout__region--content">
      <div class="table-responsive">



  
            <div class="clearfix text-formatted field field--name-field-body field--type-text-long field--label-hidden field__item">Last updated: March 31, 2023

<table><caption>Withdrawn candidates</caption>
	<thead><tr><th>Candidate's name</th>
			<th>Office candidate was nominated for</th>
			<th><strong>Date campaign period began</strong></th>
			<th>Date registered for the Contribution Rebate Program</th>
			<th><strong>Date campaign period ended</strong></th>
			<th><strong>Date financial statement filed </strong></th>
			<th><strong>Copy of financial statement</strong></th>
			<th><strong>Election compliance audit application deadline</strong></th>
		</tr></thead><tbody><tr><td>Carol Anne Meehan</td>
			<td>Ward 24 Barrhaven East</td>
			<td>May 20, 2022</td>
			<td>May 20, 2022</td>
			<td>July 25, 2022</td>
			<td>
			January 3, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w24_carole_anne_meehan_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Ishwar Bhatia</td>
			<td>Ward 10 Gloucester-Southgate</td>
			<td>July 28, 2022</td>
			<td>July 28, 2022</td>
			<td>August 8, 2022</td>
			<td>
			August 8, 2022
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w10_ishwar_bhatia_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Nick Drain</td>
			<td>Ward 5 West Carleton-March</td>
			<td>August 2, 2022</td>
			<td>August 2, 2022</td>
			<td>August 17, 2022</td>
			<td>
			February 28, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_w5_nicholas_daniel_drain_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Michelle Hutchinson</td>
			<td>Zone 3 Ottawa-Carleton District School Board </td>
			<td>July 13, 2022</td>
			<td>Not applicable</td>
			<td>August 19, 2022</td>
			<td>
			March 29, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z3_michelle_hutchinson_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Thomas DeGroot</td>
			<td>Zone 1 Ottawa-Carleton District School Board </td>
			<td>July 28, 2022</td>
			<td>Not applicable</td>
			<td>September 18, 2022</td>
			<td>
			March 20, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z1_thomas_degroot_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr><tr><td>Peter Heyck</td>
			<td>Zone 6 Ottawa-Carleton District School Board </td>
			<td>May 2, 2022</td>
			<td>Not applicable</td>
			<td>July 6, 2022</td>
			<td>
			March 24, 2023
			</td>
			<td>
			<a href="https://documents.ottawa.ca/sites/documents/files/statement_ocdsb_z6_peter_heyck_en.pdf">Initial Financial Statement</a>
			</td>
			<td>June 29, 2023</td>
		</tr></tbody></table>

 </div>
      

</div>

    </div>
  </div>

      </div>

            </div>
              
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>
</div>
      
      </div>

            </div>
              
        </div>
    </div>
  
  
  </div>

      </div>
</div>
          </div>
  


    </div>
  </div>

  </div>

</article>


</div>

  </div>

                  </div>
                </div>
    <div id="ottux-topbutton" data-location="right" data-target-id="h1" data-z-index="4"></div>
</main>

    <div id="ottux-footer" data-api-server="https://ottawa.ca" data-api-alert-server="https://ottawa.ca" class="region region-footer">
    <nav role="navigation" aria-labelledby="block-contactus-menu" id="block-contactus" class="block block-menu navigation menu--contact-us">
      
  <h5 id="block-contactus-menu">Contact us</h5>
  

        
        <ul class="nav navbar-nav">
            <li class="nav-item">
      <a href="https://ottawa.ca/en/3-1-1" target="_self" class="angle-right nav-link">3-1-1 online</a>
          </li>
          <li class="nav-item">
      <span target="_self" class="nav-link">110 Laurier Avenue West</span>
          </li>
          <li class="nav-item">
      <span target="_self" class="nav-link">Ottawa, ON K1P 1J1</span>
          </li>
          <li class="nav-item">
      <a href="tel:3-1-1" target="_self" class="phone-square nav-link" aria-label="3. 1. 1.">3-1-1</a>
          </li>
          <li class="nav-item">
      <a href="tel:613-580-2400" target="_self" class="nav-link" aria-label="6 1 3. 5 8 0. 2 4 0 0">613-580-2400</a>
          </li>
          <li class="nav-item">
      <a href="tel:1-866-261-9799" target="_self" class="nav-link" aria-label="1. 8 6 6. 2 6 1. 9 7 9 9">1-866-261-9799</a>
          </li>
          <li class="nav-item">
      <a href="https://ottawa.ca/en/client-services" target="_self" class="angle-right nav-link">Client Service Centre</a>
          </li>
  </ul>
  


  </nav>
<nav role="navigation" aria-labelledby="block-aboutus-menu" id="block-aboutus" class="block block-menu navigation menu--about-us">
      
  <h5 id="block-aboutus-menu">About us</h5>
  

        
        <ul class="nav navbar-nav">
            <li class="nav-item">
      <a href="/en/terms-use/accessibility" class="angle-right nav-link" data-drupal-link-system-path="node/2259086">Accessibility </a>
          </li>
          <li class="nav-item">
      <a href="/en/terms-use/disclaimer" class="angle-right nav-link" data-drupal-link-system-path="node/1003303">Disclaimer</a>
          </li>
          <li class="nav-item">
      <a href="/en/terms-use/privacy" class="angle-right nav-link" data-drupal-link-system-path="node/1004028">Privacy</a>
          </li>
          <li class="nav-item">
      <a href="/en/city-hall/city-manager-administration-and-policies/policies-and-administrative-structure/pimr-protocols" class="angle-right nav-link" data-drupal-link-system-path="node/1000765">Protocols</a>
          </li>
  </ul>
  


  </nav>
<nav role="navigation" aria-labelledby="block-followus-menu" id="block-followus" class="block block-menu navigation menu--follow-us">
      
  <h5 id="block-followus-menu">Follow us</h5>
  

        
        <ul class="nav navbar-nav">
            <li class="nav-item">
      <a href="https://www.facebook.com/cityofottawa" target="_blank" class="facebook nav-link">Facebook</a>
          </li>
          <li class="nav-item">
      <a href="https://www.instagram.com/cityofottawa/" target="_blank" class="instagram nav-link">Instagram</a>
          </li>
          <li class="nav-item">
      <a href="https://twitter.com/ottawacity" target="_blank" class="twitter nav-link">Twitter</a>
          </li>
          <li class="nav-item">
      <a href="https://www.youtube.com/user/cityottawa" target="_blank" class="youtube nav-link">YouTube</a>
          </li>
          <li class="nav-item">
      <a href="https://forms.ottawa.ca/en/form/esubscriptions/signup-form" target="_blank" class="envelope nav-link">eSubscription</a>
          </li>
  </ul>
  


  </nav>
<nav role="navigation" aria-labelledby="block-reportorrequest-menu" id="block-reportorrequest" class="block block-menu navigation menu--report-or-request">
      
  <h5 id="block-reportorrequest-menu">Report or Request</h5>
  

        
        <ul class="nav navbar-nav">
            <li class="nav-item">
      <a href="https://ottawa.ca/en/3-1-1/report-or-request/parking" target="_self" class="angle-right nav-link">Parking</a>
          </li>
          <li class="nav-item">
      <a href="https://ottawa.ca/en/3-1-1/report-or-request/garbage-and-recycling" target="_self" class="angle-right nav-link">Garbage collection</a>
          </li>
          <li class="nav-item">
      <a href="https://ottawa.ca/en/3-1-1/report-or-request/road-maintenance" target="_self" class="angle-right nav-link">Road maintenance</a>
          </li>
          <li class="nav-item">
      <a href="https://ottawa.ca/en/3-1-1/report-or-request/property-damage-or-maintenance" target="_self" class="angle-right nav-link">Property damage</a>
          </li>
          <li class="nav-item">
      <a href="https://ottawa.ca/en/form/feedback" target="_self" class="angle-right nav-link">Problem with the website</a>
          </li>
  </ul>
  


  </nav>

  </div>


  </div>

      <div class="modal show" id="popupSurveyModal" tabindex="-1" role="dialog" aria-labelledby="popupSurveyModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <i class="fas fa-info-circle modal-icon" aria-hidden="true"></i>
          <h5 class="modal-title" id="popupSurveyModalTitle">Web experience survey</h5>
          <button type="btn btn-primary" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          Would you like to participate in a 2-3 minute web experience survey to help us improve our website?

If YES, a new window will open in the background so you can come back to it when you are finished on the website.

Thank you for considering to help out.
        </div>
        <div class="modal-footer">
          <a id="popupSurveyAccept" role="button" class="btn btn-primary" target="_blank" href="https://s-ca.chkmkt.com/?e=232972&amp;h=4BC024BF9DA7CB6&amp;l=en">Yes</a>
          <button type="button" class="btn btn-outline-primary" data-dismiss="modal">No</button>
        </div>
      </div>
    </div>
  </div>

    <script src="/sites/default/files/js/js_Fl4bOSwalrmHcjWavWk8dHaDnL3jvvROkzxBD9XNC9Q.js"></script>
<script src="//ottux.ottawa.ca/widgets/v1.4.4/js/chunk-vendors.js" async></script>
<script src="//ottux.ottawa.ca/widgets/v1.4.4/js/app.js" async></script>
<script src="/sites/default/files/js/js_DKmBfbMGjqVzq9nUweKy1C6F3UnMEKW83cyoUAefjXM.js"></script>
<script src="https://siteimproveanalytics.com/js/siteanalyze_876116.js"></script>
<script src="/sites/default/files/js/js_iBKKlKdoiy_S8JLpLyG7bVIsxzze0qPGG9DbHazZz7g.js"></script>

  <script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"fc5cb84a25","applicationID":"1252325944","transactionName":"YVBVMkMFC0tQABdaV1gadgVFDQpWHicRRkhXWWsIXgAAZHIMDUdKWVlbA0M4K1dVBjVaXUF2WAhFFgpUXQYRHgZAXFIR","queueTime":2,"applicationTime":387,"atts":"TRdWRAsfGEU=","errorBeacon":"bam.nr-data.net","agent":""}</script><script type="text/javascript" src="/_Incapsula_Resource?SWJIYLWA=719d34d31c8e3a6e6fffd425f7e032f3&ns=1&cb=1385934085" async></script></body>
</html>


  recorded_at: Mon, 03 Apr 2023 12:47:55 GMT
recorded_with: VCR 6.1.0
