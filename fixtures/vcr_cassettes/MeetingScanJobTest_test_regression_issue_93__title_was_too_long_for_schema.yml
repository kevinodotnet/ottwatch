---
http_interactions:
- request:
    method: get
    uri: https://pub-ottawa.escribemeetings.com/Meeting.aspx?Agenda=Agenda&Id=8bb58320-84bf-63d9-a43e-c955acdd42a9&lang=English
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - pub-ottawa.escribemeetings.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Server:
      - Microsoft-IIS/10.0
      Set-Cookie:
      - ASP.NET_SessionId=05fc1j5vig3ttmageexfkswx; path=/; HttpOnly; SameSite=Lax
      Strict-Transport-Security:
      - max-age=31536000
      Date:
      - Fri, 31 Jan 2025 02:28:11 GMT
      Content-Length:
      - '240934'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>




<html lang="en">
<head><meta charset="utf-8" /><meta http-equiv="X-UA-Compatible" content="IE=edge;chrome=1" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><title>
	City Council - October 23, 2019
</title><script src="/bundles/modernizr?v=inCVuEFe6J4Q07A0AcRsbJic_UE5MwpRMNGcOtk94TE1"></script>
<script src="/bundles/jquery?v=8Oos0avDZyPg-cbyVzvkIfERIE1DGSe3sRQdCSYrgEQ1"></script>
<script src="/bundles/Meeting?v=vzF-9MbkbXiinMWgrvzK7C29wf8pirXICHRNY8VkMX01"></script>

        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <link href="/Content/css?v=qzDQfe_MaYWq9JDfD-bbLqBUQ47pEKk1u5XXgwMwxg01" rel="stylesheet"/>
<link rel='stylesheet' type='text/css' href='./FileStream.ashx?DocumentId=16159'><link rel="stylesheet" href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css" /><link rel="stylesheet" href="Content/Customizations.css" /><link rel="stylesheet" href="Content/Meeting.css" /><link href="Content/CalenderViewStyle-updated.css" rel="stylesheet" /><link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" type="text/css" /><link href="favicon.ico" rel="shortcut icon" type="image/x-icon" />

    <!-- This file must exist, otherwise we'll get server side error -->
    <!-- Ottawa Siteimprove Analytics --> 


<script async src="https://siteimproveanalytics.com/js/siteanalyze_876116.js"></script>

<!-- eSCRIBE Global site tag (gtag.js) - Google Analytics --> 

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-178411397-49"></script> 

<script> 

  window.dataLayer = window.dataLayer || []; 

  function gtag(){dataLayer.push(arguments);} 

  gtag('js', new Date()); 

  

  gtag('config', 'UA-178411397-49'); 

</script> 

    <style type="text/css">

        body {
            color: #000000;
        }

        a, A:link, A:visited {
            color: #0059B8;
        }

        .comment-link {
            display: inline-block;
            vertical-align: top;
        }

        .comment-link:hover {
            text-decoration: underline;
        }

        .embed-responsive {
            position: relative;
            display: block;
            width: 100%;
            padding: 0;
            overflow: hidden;
        }

            .embed-responsive::before {
                display: block;
                content: "";
            }

            .embed-responsive .embed-responsive-item, .embed-responsive iframe, .embed-responsive embed, .embed-responsive object, .embed-responsive video {
                /*position: absolute;*/
                top: 0;
                bottom: 0;
                left: 0;
                width: 100%;
                height: 100%;
                border: 0;
            }

        .embed-responsive-21by9::before {
            padding-top: 42.857143%;
        }

        .embed-responsive-16by9::before {
            padding-top: 56.25%;
        }

        .embed-responsive-4by3::before {
            padding-top: 75%;
        }

        .embed-responsive-1by1::before {
            padding-top: 100%;
        }


        html, body, form {
            height: 100%;
            overflow: hidden;
        }

        #Agendadropdownmenu.dropdown-menu {
            right: 0px;
            left: 0px;
        }

        .FontIncrease * {
            font-size: 1em;
            font-weight: bold;
            cursor: pointer;
        }

        .FontDecrease * {
            font-size: 0.85em;
            font-weight: bold;
            cursor: pointer;
        }

        .panel {
            margin-bottom: 22px;
            background-color: #fff;
            border: 1px solid transparent;
            border-radius: 4px;
            -webkit-box-shadow: 0 1px 1px rgba(0,0,0,.05);
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .panel-default {
            border-color: #ddd;
        }

        .panel-heading {
            padding: 10px 15px;
            border-bottom: 1px solid transparent;
            border-top-right-radius: 3px;
            border-top-left-radius: 3px;
        }

        .panel-default > .panel-heading {
            color: #000;
            background-color: #f5f5f5;
            border-color: #ddd;
        }

        .panel-body {
            padding: 15px;
        }

        /*ul.navbar-nav > li {
                display:inline-block;
            }

            .navbar-nav > li > a {
                padding-top:5px !important; padding-bottom:5px !important;
            }
            .navbar {
                min-height:32px !important
            }
            .navbar-toggle {
                margin-top:4px;
                margin-bottom:4px;
                padding-top:4px;
                padding-bottom:4px;
            }

            .affix { 
                right:0px;
                top:32px;
            }

            .affix-top {
                right:0px;
                position:fixed;
                top:32px;
            }*/

        .Details > div {
            padding-right: 0px !important;
            margin-right: 2%;
        }

        a.dropdown-toggle:focus {
            outline: solid 1px #FFFFFF;
        }

        #lnkPoweredBy:focus {
            outline: solid 1px #FFFFFF;
            padding: 4px;
        }

        /*@media (max-height: 760px) {
                .navbar-fixed-bottom {
                    display:none;
                }
            }
            @media (min-height: 760px) {
                body {
                    padding-bottom: 32px;
                }
            }
            
            @media (max-width: 600px) {
                 .AgendaItemContainer > .AgendaItemContainer {
                    margin-left:4em !important;
                }
            }*/

        @media (max-width: 500px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 2em !important;
            }
        }

        @media (max-width: 400px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 1em !important;
            }
        }

        @media (max-width: 300px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 0em !important;
            }
        }

        @media (min-width:768px) and (max-width:991px) {
            .AgendaItemSelectedDetails {display: none !important; }

            .visible-sm.sharing.SocialIcons {
                display: inline-block !important;
                float: none !important;
            }

            .AgendaItemTitleRow.hilighted {
                display: block !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemIcons,
            .AgendaItemTitleRow.hilighted > .AgendaItemIcons{
                display: none !important;
            }


            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle.hasPublicCommentButton {
                margin-right: 135px;
                width: auto !important;
            }
        }

        /*.AgendaItemIcons {
            width: 22% !important;
        }*/

        .visible-xs visible-sm sharing SocialIcons {
            width: 10%;
            padding-top: 5px;
            float: right;
        }

        @media (max-width: 767px) {
            .visible-xs.sharing.SocialIcons {
                display: inline-block !important;
                float: none !important;
            }

            .AgendaItemTitleRow.hilighted {
                display: block !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemIcons,
            .AgendaItemTitleRow.hilighted > .AgendaItemIcons {
                display: none !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle.hasPublicCommentButton {
                margin-right: 65px;
                width: auto !important;
            }
        }

        @media only screen and (device-width: 768px) {

            .navbar-nav .dropdown-menu {
                margin-top: -5px !important;
            }

            .dropdown, .dropleft, .dropright, .dropup {
                width: fit-content !important;
            }

            .collapse:not(.show) {
                display: block !important;
            }

            .navbar-light .navbar-toggler {
                float: right;
                border-color: #ddd !important;
                display: none !important;
            }

            .navbar-nav .dropdown-menu {
                position: absolute !important;
            }
        }

        .visible-xs.visible-sm.sharing.SocialIcons {
            /*width: 10%;
            padding-top: 5px;
            float: right;
            position: absolute;
            right: -8px;
            margin-top: -22px;*/
            position: absolute;
            right: 10px;
            margin: 0;
            position: absolute;
            top: 50%;
            -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        }

            .visible-xs.visible-sm.sharing.SocialIcons > * > span.btn.btn-primary.btn-sm {
                padding: 0px 5px 0px 5px;
            }

            .visible-xs.visible-sm.sharing.SocialIcons,
            .visible-xs.visible-sm.sharing.SocialIcons > *,
            .visible-xs.visible-sm.sharing.SocialIcons > * > span {
                font-size: 12px !important;
                font-weight: normal !important;
            }

        .SocialIcons {
            float: right;
        }


        .poweredBy, .poweredBy a {
            color: white !important;
        }

        @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation : portrait) {
            .visible-xs.visible-sm.sharing.SocialIcons
            {
                right: -8px !important;
                padding-top: 4px !important;
            }
        }

        @media screen and (device-width: 280px) and (device-height: 653px) {
            .visible-xs.visible-sm.sharing.SocialIcons
            {
                position: unset;
                right: unset;
                margin: unset;
                top: unset;
                -ms-transform: unset;
                transform: unset;
            }
            }

        .packageNav {
            position: absolute !important;
        }

    </style>
</head>
<body style="background-color: #e5e5e5">
    <form name="form1" method="post" action="./Meeting.aspx?Id=8bb58320-84bf-63d9-a43e-c955acdd42a9&amp;Agenda=Agenda&amp;lang=English" id="form1">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="o5caiP94KV6p2UfT5PVPoj2NBECN5bLqGxSVyhXdTyeJOkUEuUFTAiKQ8ZM6iBSwoy2HgWevgxu+XwPtWdB9NipFWY4g+S4j+qEIRaX5PQKrRls0Jn+iXsISGEoOO9rTrf5ChpGJ0mpUAo5lLZYzy3YROv4/dPRmkWJENfYwn5X2ih1ZVglbuXRVyeYtyD1NB4MYWK2T2IDWoR9H+Sw9J8n9xf2EXK1YN57g5zVWBkCRuQ3mo+jQUWE9AU3f2neUP0T76goQ2Q2w7TWEJ1uQ4KHn9GlEIl10+v4hdZjA3yGV8TywUghSr3xXXmpbGnooO9yzu3YpseWq9VLbDCVwJQjqqB+N9ayfEHpxbmAzrznRCQk3sbgqet/FoiExsJsjMnHwxCQCtEh8LmWMvSWmWe/rVq+OYmwIT2WMVNOlbbLhAfygPleR6gPmce6xupAM4Bzg+mC9aNrRNVLJZVxgWan0r8voT7j0DNd2FEB8W2JCpQrnGJDq/ZY3/CP8ALnMlyukSk0yNxt7Zn8Ul4qImHWdKF/U7LIxlWE2iZsi8zL+A0WcV4giEVcUa+Ok6NgcTF/ONa7slk1bOp0zuCV9iK+KHzZuF0CGTDkdqzik2qsxuDn1QWn9BpAjfqG260M2dfOoP6An6kqu/tm0A2HCMKzjcjbQChWwRdjP3ZveGk45T07bwHGEC0kr0/PurMrsaw+//K5sulC73xO21y0z15p/u3N1KiH7v5wtezRtY4AWeZhEbw+VBxUmluZAintWvx/Z3w3R/eZIS6ep2IJlI1s1qxMAdRjaQsnj7cNpNAz7cT9W8PdxiGZ5L5btv2Uy3bIG/6Ce3Jd+3OTsuzxcdafBTHEd3tLiP6TziWEAsFAAeXj15HzH/F8liLpoPU+ctHc72fj+/hv1DQWs6321RGqNwIkHVvHbkEyG3PvHMNb4lWNIBQMqgnI3ro5NjuZ5jF4k9Kv8LTCr+y13poptr6C4oVcLkwCyNOFt1oNWG6zUu2jo8NlG1Wyi3Bhuvj6yGBcPTf2/v3wlSN3gzJ70wrFnNi/dy/WLXXsRKFXmUvs6Pw+fxoF8Lr5mygDUBBoR7XnQT+Kg07OsthNE+SH2oMmwRest14unNpi1qv7lgRI=" />


<script src="/bundles/MsAjaxJs?v=D6VN0fHlwFSIWjbVzi6mZyE9Ls-4LNrSSYVGRU46XF81" type="text/javascript"></script>
<script src="Scripts/bootstrap.min.js" type="text/javascript"></script>
<script src="Scripts/respond.min.js" type="text/javascript"></script>
<script src="/bundles/WebFormsJs?v=N8tymL9KraMLGAMFuPycfH3pXe6uUlRXdhtYv8A_jUU1" type="text/javascript"></script>
<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="4936DBB7" />
<input type="hidden" name="__VIEWSTATEENCRYPTED" id="__VIEWSTATEENCRYPTED" value="" />
        

        <script type="text/javascript">
            function iframeLoaded(iframeHeight) {
                var windowHeight = $(window).height();

                if (iframeHeight > windowHeight) {
                    var newHeight = (windowHeight - 185) + "px";
                    $('#bootstrapModalBody').height(newHeight);
                    $('#modalIframeDiv').height(newHeight);

                    return $('#modalIframeDiv').height() - 85;
                }
                else {
                    var newHeight = iframeHeight + "px";
                    $('#bootstrapModalBody').height(newHeight);
                    $('#modalIframeDiv').height(newHeight);
                    return "0";
                }
            }

            $(document).keydown(function(event) { 
                if (event.keyCode == 27) { 
                    closeBootstrapModal();
                    $(".CommentIcon").focus();
                }
            });

            function closeBootstrapModal() {
                $('#bootstrapModal').modal('hide').attr('aria-hidden', 'true'); 
            }

            $(window).resize(function(){
                var windowWidth = $(window).width();
                var standardHeight = $('.SelectedItemCounter').height();
                var titleHeight = $('.SelectedItemTitle').height();

                //if (Window_OnResize) {
                //    Window_OnResize();
                //}

                if(titleHeight > standardHeight) {
                    $('.panel-heading.clearfix >.sharing.SocialIcons > a.CommentIcon > span').css("margin-top", "4px");
                }

                //Replace the Leave Comment button to icon
                $('#narrow-leave-comment-button').html("<span class='las la-comment-alt' style='vertical-align: middle' title='Leave Comment'></span>");

                if(windowWidth <= 539){
                    $(".Agenda").css("padding-top", $(".affix-top").height()+5);
                } else {
                    $(".Agenda").css("padding-top", "18px");
                }
            });

            function CheckiOSDevice() {
                var userAgent = window.navigator.userAgent;
                if (userAgent.match(/iPad/i) || userAgent.match(/iPhone/i)) {
                    // iPad or iPhone
                    document.body.style.removeProperty("overflow");  
                    // console.log("checkIOSDevice called");
                }                                 
            }

            $(document).ready(
                function () {
                    var url = window.location.href;
                    if(url.indexOf("pub-ottawa") != -1 || url.indexOf("pub-support") != -1) {
                        $('.AgendaHeaderDetailsTable').find('.Label:contains("Période:")').text('Date :');
                        $('.AgendaHeaderDetailsTable').find('.Label:contains("Lieu:")').text('Endroit :');
                    }

                    $(".Details").addClass("d-sm-block");
                    $(".Details").attr("aria-live", "polite");
                    $(".panel-heading").prepend("<span class='visuallyhidden'>Agenda item details popup</span>");
                    $(".affix-top").append("<div class='collapse-stream'><i class='las la-video open-player'></i></div>");

                    $(".collapse-stream").on("click", function(i,v){
                        if($(".VideoPlayerContainer").css("display") == "none"){
                            $(".VideoPlayerContainer").show();
                            $(".la-video").addClass("open-player");
                            $(".Agenda").css("padding-top", $(".affix-top").height()+5);
                        } else {
                            $f().pause();
                            $(".la-video").removeClass("open-player");
                            $(".VideoPlayerContainer").hide();
                            $(".Agenda").css("padding-top", "18px");
                        } 
                    });
                    $('.VideoPlayer').append($('#VideoPlayerControl').detach());

                    if($(window).width() <= 539){
                        $(".Agenda").css("padding-top", $(".affix-top").height()*1.05);
                    }
                    
                    // ensure minutes show if the meeting starts or ends partially through an hour //
                    $(".Time > .Minutes").each(
                        function (index, element) {
                            if ($(element).text() != ":00") {
                                $(element).show();
                            }
                        }
                    );

                    $("[data-toggle='tooltip']").tooltip({placement:'top', boundary: 'window', trigger : 'hover'});

                    //Add/Remove public comment icons for each agenda item (real time)
                    var agendaItem = $('.AgendaItem');

                    for(var i = 0; i < agendaItem.length; i++) {
                        var className =agendaItem[i].className.match(/AgendaItem\d+/);
                        if(className) {
                            var id = className[0].replace("AgendaItem", "");
                            if(id){
                                LoadPublicCommentIcons(id);
                            }
                        }
                            
                    }                                                        
                    CheckiOSDevice();
                    var selectedTab = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Tab").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    SelectItem(getParameterByName("Item") || ((window.location.hash || "").replace(/#/g, '')), true, selectedTab);
                
                    
                    $("#package-container").on("scroll", function(){
                        if ($("#package-container").scrollTop() >= 48){
                            $(".affix-top").css("top", "5px");
                        } else {
                            $(".affix-top").css("top", "48px");
                        }
                    });

                    $("[tabindex]").filter(function() {
                        if ($(this).attr("tabindex") > 0){ $(this).attr("tabindex", "0")}
                    });
                    
                    $(".AgendaItemTitle").on("click", function() {
                        tabIndexLoop(document.querySelector(".AgendaItemSelectedDetailsContainer"));
                        var modalContainer = document.querySelector(".Details");
                        var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                        var focusableElements = modalContainer.querySelectorAll(focusableElementsString);

                        focusableElements = Array.prototype.slice.call(focusableElements);
                        if (focusableElements.length > 0){
                            focusableElements[0].focus();
                        }
                    });

                    $(".AgendaItemContainer").each(function(i,v){
                        var commentIcon = $(v).find(".AgendaItemIcons").find(".la-comment-alt");
                        if(commentIcon.length > 0){
                            commentIcon.append("<span class='sr-only'>Public Comments:</span>");
                        }
                    });


                }
                
                
            );

            
            function setVideoPlayerFocus(container) {
                return new Promise((resolve, reject) => {
                    if(container) {
                        resolve("Video Container found");
                    }
                    else{
                        reject("Video Container not found.");
                    }
                })
				.then(data => {
				    tabIndexLoopVideo(container);
				})
				.catch(error => {
				    console.log("An error occurred when setting focus on video container:", error);
				});
            }
			
            function tabIndexLoopVideo(container) {
                container.addEventListener("keydown", trapTabKey);
                function trapTabKey(e) {
                    if (e.keyCode === 9) {
                        if (e.shiftKey) {
                            $('.hilighted .AgendaItemTitle a').focus();
                            $('.hilighted a.SelectableItem').focus();
                        }
                        else {
                            tabIndexLoop(document.querySelector(".AgendaItemSelectedDetailsContainer"));
                        }						
                    }
                }
                var player = $('.fp-play');
                if(player) {
                    player.attr('tabindex', 0);
                    player.focus();
                }
            }
                                                
            function SelectItem(id, scroll, tab) {
                if(tab === undefined) {
                    tab = 'attachments'
                }

                //The function under eScribe.Agenda only take two parameter. In order to make the icon link works, I have to do a work around for this (reuse the scroll parameter).
                //This should not affect the original functionality of the scroll.
                if(scroll == 'attachments' || scroll == 'comments') {
                    tab = scroll;
                    scroll = false;
                }

                // update url //
                window.history.pushState('', '', UpdateQuery("Item", id.toString()));                    
                window.history.pushState('', '', UpdateQuery("Tab", tab));

                var videoContainer = document.querySelector(".VideoPlayerContainer");
                setVideoPlayerFocus(videoContainer);

                //Update the Citizen Comment using ajax.
                LoadPublicComment(id, scroll);

                if(document.readyState === 'complete' ) {
                    LoadPublicCommentIcons(id);
                }

                //// trigger event //
                //$(document).trigger("item:selected", [id, scroll]);
            }

            function LoadPublicComment(id, scroll) {
                if(id) {
                    var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var language = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("lang").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var tabindex = $('#AgendaItemAgendaItem' + id + 'TitleHeader > .AgendaItemNavigate > .AgendaItemTitle > A').attr("tabindex");

                    $.ajax({
                        type: "POST",
                        url: "Meeting.aspx/GeneratePublicComment",
                        data: "{id: '" + id + "', meetingId: '" + meetingId + "', lang: '" + language + "', tabindex: '" + tabindex + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {

                            var items = document.getElementsByClassName('AgendaItemPublicComment' + id);
                            for(var i = items.length - 1; i >= 0 ; i--){
                                var child = items[i];
                                child.parentNode.removeChild(child);
                            }
                            $(msg.d).appendTo(".AgendaItemPublicCommentList");

                            if($('.AgendaItemPublicCommentListIndent' + id).children('.AgendaItemPublicCommentHeader').length == 0) {
                                $('<div class="AgendaItemAttachment AgendaItemPublicCommentHeader" style="display: block;"></div>').appendTo(".AgendaItemPublicCommentListIndent" + id);
                            }
                            $(msg.d).appendTo(".AgendaItemPublicCommentListIndent" + id);

                            // trigger event //
                            $(document).trigger("item:selected", [id, scroll]);
                                
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }
            }

            function LoadPublicCommentIcons(id) {
                if(id) {
                    var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var agendaItem = $('#AgendaItemAgendaItem' + id +'TitleHeader ' + '> .AgendaItemNavigate > ' + '.AgendaItemIcons');
                    if(agendaItem.length == 0) {
                        agendaItem = $('#AgendaItemAgendaItem' + id +'TitleHeader ').parent().find(".AgendaItemIcons");
                    }

                    var isExist = agendaItem.children('.las.la-comment-alt').length;
                    
                    $.ajax({
                        type: "POST",
                        url: "Meeting.aspx/GeneratePublicCommentIcon",
                        data: "{id: '" + id + "', meetingId: '" + meetingId + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {

                            if(msg.d) {
                                if(isExist == 0) {
                                    $(msg.d).appendTo(agendaItem);
                                }
                            }
                            else {
                                if(isExist > 0){
                                    agendaItem.children('.las.la-comment-alt').remove();
                                }
                            }

                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }
            }
                                                
            function UpdateQuery(parameter, value) {
                var loc = window.location.search;

                if (loc.length == 0) {
                    // no query string //
                    if (value.length > 0) {
                        // add parameter directly to url //
                        return window.location.href + "?" + parameter + "=" + encodeURIComponent(value);
                    }
                }
                else {
                    var found = false;
                    if (loc[0] == '?') {
                        loc = loc.substring(1);
                    }
                    var params = loc.split('&');

                    for (var i = 0; i < params.length; i++) {
                        if (params[i].toLowerCase().startsWith(parameter.toLowerCase() + '=')) {
                            found = true;

                            if (value.length > 0) {
                                // set new value //
                                params[i] = parameter + '=' + encodeURIComponent(value);
                            }
                            else {
                                // remove existing value //
                                params[i] = '';
                            }
                        }
                    }
                    if (found == false && value.length > 0) {
                        params.push(parameter + '=' + value);
                    }

                    var qs = '';
                    for (var i = 0; i < params.length; i++) {
                        if (params[i].length > 0) {
                            if (qs.length == 0) {
                                qs = "?" + params[i];
                            }
                            else {
                                qs += "&" + params[i];
                            }
                        }
                    }

                    return window.location.href.replace("?" + loc, qs);
                }
                return window.location.href;
            }

            function tabIndexLoop(modalContainer) {
                modalContainer.addEventListener("keydown", trapTabKey);

                var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                var focusableElements = modalContainer.querySelectorAll(focusableElementsString);
                focusableElements = Array.prototype.slice.call(focusableElements);
                focusableElements = focusableElements.filter(element => $(element).is(':visible'));
				
                var videoContainer = document.querySelector(".VideoPlayerContainer");
				
                var firstTabStop = focusableElements[0];
                var lastTabStop = focusableElements[focusableElements.length - 1];
                if(firstTabStop){
                    if (videoContainer) {
                        var player = $('.fp-play');
                        if(player) {
                            player.focus();
                        }
                    }
                    else {
                        firstTabStop.focus();
                    }
                }
                else {
                    $('.hilighted .AgendaItemTitle a').focus();
                    $('.hilighted a.SelectableItem').focus();
                }

                function trapTabKey(e) {
                    var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                    var focusableElements = modalContainer.querySelectorAll(focusableElementsString);
                    focusableElements = Array.prototype.slice.call(focusableElements);
                    focusableElements = focusableElements.filter(element => $(element).is(':visible'));
					
                    var firstTabStop = focusableElements[0];
                    var lastTabStop = focusableElements[focusableElements.length - 1];
                    if (e.keyCode === 9) {
                        if (e.shiftKey) {
                            if (document.activeElement === firstTabStop) {
                                e.preventDefault();
                                var videoContainer = document.querySelector(".VideoPlayerContainer");
                                if (videoContainer) {
                                    videoContainer.addEventListener("keydown", trapTabKey);
                                    var player = $('.fp-play');
                                    if(player) {
                                        player.focus();
                                    }
                                }
                                else {
                                    $('.hilighted .AgendaItemTitle a').focus();
                                    $('.hilighted a.SelectableItem').focus();
                                }
                            }
                        } 
                        else {
                            if (document.activeElement === lastTabStop) {
                                e.preventDefault();
                                $('.hilighted .AgendaItemTitle a').focus();
                                $('.hilighted a.SelectableItem').focus();
                            }
                        }
                    }
                }
            }
        </script>

        

<script type='text/javascript'>
    $(document).ready(
        function () {
            $('.Details').addClass('hidden-xs').addClass('hidden-sm');
            $('.VideoPlayerContainer').detach();

            $(window).on('resize', Window_OnResize);
        }
    );

    function Video_LoadBookmark() { }

    function Window_OnResize() {
        setTimeout(
            function () {
                try {
                    var maxheight = 0;
                    if ($(".navbar-fixed-bottom").is(":visible")) {
                        maxheight = $(window).height() - $(".navbar-nav").height() - $(".navbar-fixed-bottom").height();
                    }
                    else {
                        maxheight = $(window).height() - $(".navbar-nav").height();
                    }

                    $(".AgendaItemAttachmentsArea").css("max-height", "");

                    if (detailsheight() > maxheight) {
                        //need to substract the panel heading height (dynamic depending on user input) and also need to substract 55 for other static components (space between panel elements)
                        var contentMaxHeight = maxheight - $('.AgendaItemSelectedDetails > div.panel-heading').height() - 55;
                        $(".AgendaItemAttachmentsArea").css("max-height", contentMaxHeight + "px");

                        //This will never run ... not sure why it is here
                        if (detailsheight() <= maxheight) {
                            $(".AgendaItemAttachmentsArea").css("max-height", ($(".AgendaItemAttachmentsArea").height() - (detailsheight() - maxheight)) + "px");
                        }
                    }
                }
                catch (e) {
                }
            },
            1
        );
    }
</script>

        <div id="package-container" style="overflow: auto; height: 100%">
            <nav class="navbar navbar-expand-lg navbar-light navbar-fixed-top navbarbg" role="navigation">
                <div class="container">
                        <ul class="nav navbar-nav narbar-left">
                            <li class="nav-item dropdown">
                                <a href="#" id="navbarDropdown" class="nav-link dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color: white" tabindex="1">
                                    Agenda
                                </a>
                                <span class="caret"></span>
                                <ul class="dropdown-menu packageNav" role="menu" id="Agendadropdownmenu" aria-labelledby="navbarDropdown">
                                    
                                            
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=8bb58320-84bf-63d9-a43e-c955acdd42a9&Agenda=Agenda&lang=English' tabindex='1' lang='en'>
                                                    Agenda
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=8bb58320-84bf-63d9-a43e-c955acdd42a9&Agenda=Agenda&lang=French' tabindex='1' lang='fr'>
                                                    Ordre du jour
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=8bb58320-84bf-63d9-a43e-c955acdd42a9&Agenda=PostMinutes&lang=English' tabindex='1' lang='en'>
                                                    Minutes
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=8bb58320-84bf-63d9-a43e-c955acdd42a9&Agenda=PostMinutes&lang=French' tabindex='1' lang='fr'>
                                                    Procès-verbal
                                                </a>
                                            </li>
                                        
                                        
                                    <li class='d-none'>
                                        <a class="VideoLink dropdown-item" href='' title='Open Video in new Window' target="_blank" tabindex="6">
                                            <span class="HiddenAnchorDescription">
                                                Open Video in new Window</span>
                                            Video
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                </div>
            </nav>

            <main class="container body-content" style="background-color: #ffffff">
                
<ARTICLE class='Meeting row'>
    <SECTION class='Agenda col-xs-12 col-sm-12 col-md-8 col-lg-8'>
        <DIV style='padding:1em; width:auto; margin:8px'>
            <link href="content/Ottawa.css" rel="stylesheet" type="text/css"><script src="scripts/Ottawa.js" type="text/javascript"></script>


<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="Generator" content="Microsoft Word 12 (filtered)">
<title>City Council Agenda</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";}
h1
	{mso-style-link:"Heading 1 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
h2
	{mso-style-link:"Heading 2 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
h3
	{mso-style-link:"Heading 3 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:normal;}
h4
	{mso-style-link:"Heading 4 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:normal;}
h5
	{mso-style-link:"Heading 5 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
h6
	{mso-style-link:"Heading 6 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-link:"Heading 8 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-link:"Header Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-link:"Footer Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Title Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{mso-style-link:"Body Text Char";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-link:"Subtitle Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	color:black;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{mso-style-link:"Body Text 2 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
a:link, span.MsoHyperlink
	{font-family:"Times New Roman","serif";
	color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p
	{margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Balloon Text Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Arial","sans-serif";
	font-weight:bold;}
span.Heading8Char
	{mso-style-name:"Heading 8 Char";
	mso-style-link:"Heading 8";
	font-weight:bold;}
span.BodyText2Char
	{mso-style-name:"Body Text 2 Char";
	mso-style-link:"Body Text 2";
	font-weight:bold;}
span.HeaderChar
	{mso-style-name:"Header Char";
	mso-style-link:Header;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-link:"Balloon Text";
	font-family:"Tahoma","sans-serif";}
span.FooterChar
	{mso-style-name:"Footer Char";
	mso-style-link:Footer;}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-link:Title;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
span.SubtitleChar
	{mso-style-name:"Subtitle Char";
	mso-style-link:Subtitle;
	font-family:"Arial","sans-serif";
	color:black;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Arial","sans-serif";
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Arial","sans-serif";}
span.Heading4Char
	{mso-style-name:"Heading 4 Char";
	mso-style-link:"Heading 4";
	font-family:"Arial","sans-serif";}
span.Heading5Char
	{mso-style-name:"Heading 5 Char";
	mso-style-link:"Heading 5";
	font-family:"Arial","sans-serif";
	font-weight:bold;}
span.Heading6Char
	{mso-style-name:"Heading 6 Char";
	mso-style-link:"Heading 6";
	font-family:"Arial","sans-serif";
	font-weight:bold;}
span.BodyTextChar
	{mso-style-name:"Body Text Char";
	mso-style-link:"Body Text";
	font-family:"Arial","sans-serif";}
 /* Page Definitions */
 @page WordSection1
	{size:612.0pt 792.0pt;
	margin:72.0pt 72.0pt 36.0pt 72.0pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>





<div class="WordSection1">

<div style="border:none;border-bottom:double windowtext 2.25pt;padding:0cm 0cm 1.0pt 0cm;
margin-left:0cm;margin-right:9.0pt">

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%;border:none;
padding:0cm"><span lang="FR-CA">&nbsp;</span></p>

</div>

<p class="MsoNormal" align="right" style="margin-top:10.0pt;text-align:right;
line-height:125%;punctuation-wrap:simple;text-autospace:none;vertical-align:
baseline"><span lang="EN-GB"><img width="165" height="82" src="filestream.ashx?documentid=8572" alt="Ottawa logo"></span></p>

<h1 style="margin-top:10.0pt;line-height:125%">OTTAWA CITY COUNCIL<br>
<br>
Wednesday, 23 October 2019</h1>

<h1 style="margin-top:10.0pt;line-height:125%">&nbsp;10:00 am<br>
<br>
Andrew S. Haydon Hall, 110 Laurier Avenue W.<br>
<br>
AGENDA 22</h1>

<div style="border:none;border-top:double windowtext 1.5pt;padding:1.0pt 0cm 0cm 0cm">

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%;border:none;
padding:0cm"><b>&nbsp;</b></p>

</div>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item379994"><span lang="EN-US" style="line-height:125%">MOMENT OF REFLECTION </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:473.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" colspan="2" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item379995"><span lang="EN-US" style="line-height:125%">NATIONAL ANTHEM </span></a></h2>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="17"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr style="height:15.1pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="576" colspan="2" valign="top" style="width:432.3pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item390790"></a><a href="#" target="pubright" class="SelectableItem" itemid="390790"><span lang="EN-US">Councillor T. Kavanagh</span></a></p>
  </td>
 </tr>
 <tr height="0">
  <td width="55" style="border:none"></td>
  <td width="559" style="border:none"></td>
  <td width="17" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item379996"><span lang="EN-US" style="line-height:125%">ANNOUNCEMENTS/CEREMONIAL ACTIVITIES </span></a></h2>
  </td>
 </tr>
 <tr style="height:9.75pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="38" valign="top" style="width:1.0cm;padding:0cm 5.4pt 0cm 5.4pt;
  height:9.75pt">
  <p class="MsoNormal" style="margin-top:10.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:22.95pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -18.0pt;line-height:125%"><span lang="EN-US" style="font-family:Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US">&nbsp;</span></p>
  </td>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:9.75pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item390781"></a><a href="#" target="pubright" class="SelectableItem" itemid="390781"><span lang="EN-US">Recognition - Mayor's City Builder Award</span></a></p>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="2"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr style="height:9.75pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="38" valign="top" style="width:1.0cm;padding:0cm 5.4pt 0cm 5.4pt;
  height:9.75pt">
  <p class="MsoNormal" style="margin-top:10.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:22.95pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -18.0pt;line-height:125%"><span lang="EN-US" style="font-family:Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US">&nbsp;</span></p>
  </td>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:9.75pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item390788"></a><a href="#" target="pubright" class="SelectableItem" itemid="390788"><span lang="EN-US">Proclamation - Ottawa TFC Academy U17 Team Day</span></a></p>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="2"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr height="0">
  <td width="55" style="border:none"></td>
  <td width="38" style="border:none"></td>
  <td width="520" style="border:none"></td>
  <td width="2" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item379997"><span lang="EN-US" style="line-height:125%">ROLL CALL </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" colspan="3" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item379998"><span lang="EN-US" style="line-height:125%">CONFIRMATION OF MINUTES </span></a></h2>
  </td>
 </tr>
 <tr style="height:4.35pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="558" valign="top" style="width: 418.15pt; padding: 0cm 5.4pt; height: 4.35pt; position: relative;">
  <p class="MsoNormal" style="margin-top: 10pt; line-height: 125%; margin-right: 25px;"><a name="Item390784"></a><a href="#" target="pubright" class="SelectableItem" itemid="390784"><span lang="EN-US">Confirmation of the Regular and <i>In Camera</i> Minutes of the
  Council meeting of 9 October 2019.</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="2"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr style="height:15.1pt">
  <td width="614" colspan="3" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item379999"><span lang="EN-US" style="line-height:125%">DECLARATIONS OF INTEREST INCLUDING THOSE ORIGINALLY
  ARISING FROM PRIOR MEETINGS </span></a></h2>
  </td>
 </tr>
 <tr height="0">
  <td width="55" style="border:none"></td>
  <td width="558" style="border:none"></td>
  <td width="2" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item380000"><span lang="EN-US" style="line-height:125%">COMMUNICATIONS </span></a></h2>
  </td>
 </tr>
 <tr style="height:4.35pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="558" colspan="2" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:4.35pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item380001"><span lang="EN-US">Association of Municipalities of Ontario
  (AMO): </span></a></p>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="2"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr style="height:4.35pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="38" valign="top" style="width:1.0cm;padding:0cm 5.4pt 0cm 5.4pt;
  height:4.35pt">
  <p class="MsoNormal" style="margin-top:10.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:22.95pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -18.0pt;line-height:125%"><span lang="EN-US" style="font-family:Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US">&nbsp;</span></p>
  </td>
  <td width="520" valign="top" style="width: 389.8pt; padding: 0cm 5.4pt; height: 4.35pt; position: relative;">
  <p class="MsoNormal" style="margin-top: 10pt; line-height: 125%; margin-right: 25px;"><a name="Item390803"></a><a href="#" target="pubright" class="SelectableItem" itemid="390803"><span lang="EN-US">Province Appoints Advisor for Public Health and Emergency Health
  Services Consultations</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="2"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr height="0">
  <td width="55" style="border:none"></td>
  <td width="38" style="border:none"></td>
  <td width="520" style="border:none"></td>
  <td width="2" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:4.35pt">
  <td width="558" colspan="2" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:4.35pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item380002"><span lang="EN-US">Response to Inquiries: </span></a></p>
  </td>
 </tr>
 <tr style="height:11.35pt">
  <td width="38" valign="top" style="width:1.0cm;padding:0cm 5.4pt 0cm 5.4pt;
  height:11.35pt">
  <p class="MsoNormal" style="margin-top:10.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:22.95pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -18.0pt;line-height:125%"><span lang="EN-US" style="font-family:Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US">&nbsp;</span></p>
  </td>
  <td width="520" valign="top" style="width: 389.8pt; padding: 0cm 5.4pt; height: 11.35pt; position: relative;">
  <p class="MsoNormal" style="margin-top: 10pt; line-height: 125%; margin-right: 25px;"><a name="Item390807"></a><a href="#" target="pubright" class="SelectableItem" itemid="390807"><span lang="EN-US">OCC 13-19 - Rat Complaints Inquiry</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.5pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:4.35pt">
  <td width="558" colspan="2" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:4.35pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item380003"><span lang="EN-US">Other Communications Received: </span></a></p>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="0"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr style="height:5.65pt">
  <td width="38" valign="top" style="width:1.0cm;padding:0cm 5.4pt 0cm 5.4pt;
  height:5.65pt">
  <p class="MsoNormal" style="margin-top:10.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:22.95pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -18.0pt;line-height:125%"><span lang="EN-US" style="font-family:Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US">&nbsp;</span></p>
  </td>
  <td width="520" colspan="2" valign="top" style="width:390.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:5.65pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item390809"></a><a href="#" target="pubright" class="SelectableItem" itemid="390809"><span lang="EN-US">Submission received containing the names of 577 individuals,
  requesting that City Council move swiftly and decisively without further
  delay on updating Ottawa’s Tree By-Laws, and ensure full and active enforcement
  in a timely matter supported with appropriate resources.</span></a></p>
  </td>
 </tr>
 <tr height="0">
  <td width="38" style="border:none"></td>
  <td width="520" style="border:none"></td>
  <td width="0" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" colspan="3" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item380005"><span lang="EN-US" style="line-height:125%">REGRETS </span></a></h2>
  </td>
 </tr>
 <tr style="height:5.3pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:5.3pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item390782"></a><a href="#" target="pubright" class="SelectableItem" itemid="390782"><span lang="EN-US">Councillors D. Deans (See Motion No. 20/1 of September 25, 2019), <br>
  R. Chiarelli, A. Hubley, and J. Sudds advised they would be absent from the
  City Council meeting of 23 October 2019</span></a></p>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="2"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr height="0">
  <td width="55" style="border:none"></td>
  <td width="558" style="border:none"></td>
  <td width="2" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" colspan="3" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item380006"><span lang="EN-US" style="line-height:125%">MOTION TO INTRODUCE REPORTS </span></a></h2>
  </td>
 </tr>
 <tr style="height:15.1pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item390793"></a><a href="#" target="pubright" class="SelectableItem" itemid="390793"><span lang="EN-US">Councillors G. Gower and M. Luloff </span></a><span lang="EN-US">&nbsp;</span></p>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="2"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr height="0">
  <td width="55" style="border:none"></td>
  <td width="558" style="border:none"></td>
  <td width="2" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" colspan="3" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item380025"><span lang="EN-US" style="line-height:125%">COMMITTEE REPORTS </span></a></h2>
  </td>
 </tr>
 <tr style="height:14.05pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="67"><p class="MsoNormal">&nbsp;</p></td>
  <td width="506" valign="top" style="width:379.55pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.05pt">
  <h3 style="margin-top:10.0pt;line-height:125%"><a name="Item380028"><span lang="EN-US" style="line-height:125%">COMMUNITY AND PROTECTIVE SERVICES
  COMMITTEE REPORT 7</span></a></h3>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="41"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr height="0">
  <td width="67" style="border:none"></td>
  <td width="506" style="border:none"></td>
  <td width="41" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">1.</span></h4>
  </td>
  <td width="506" valign="top" style="width:379.55pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:10.0pt;line-height:125%"><a name="Item390746"></a><a href="#" target="pubright" class="SelectableItem" itemid="390746"><span lang="EN-US" style="line-height:125%">SECURITY AND EMERGENCY MANAGEMENT SERVICE
  2018 ANNUAL REPORT</span></a></h4>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <h6 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">COMMITTEE RECOMMENDATION</span></h6>
  <h6 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">That Council receive this report for information. </span></h6>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">2.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:10.0pt;line-height:125%"><a name="Item390748"></a><a href="#" target="pubright" class="SelectableItem" itemid="390748"><span lang="EN-US" style="line-height:125%">FEASIBILITY OF REVIEW OF ON-DEMAND
  ACCESSIBLE TAXICAB SERVICE</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:389.8pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal" style="margin-top:10.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-indent:-35.25pt;
  line-height:125%"><b><u><span lang="EN-US">COMMITTEE RECOMMENDATIONS, AS
  AMENDED</span></u></b><b><span lang="EN-US"> </span></b></p>
  <p class="MsoNormal" style="margin-top:10.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-indent:-35.25pt;
  line-height:125%"><b><span lang="EN-US">That Council: </span></b></p>
  <p class="MsoNormal" style="margin-top:10.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-indent:-35.25pt;
  line-height:125%"><b><span lang="EN-US">1. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; receive this report for
  information; <u>and </u></span></b></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal" style="margin-top:10.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-indent:-35.25pt;
  line-height:125%"><b><span lang="EN-US">2. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u>direct staff to proceed
  to retain the said consultant to undertake the study of on-demand accessible
  taxicab service, as outlined in the staff report (ACS2019-EPS-GEN-0015), and
  that the $25,000 be provided through the 2020 EPS Operating Budget.</u> </span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt"><span lang="EN-US" style="font-size:12.0pt;line-height:125%;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"><br clear="all" style="page-break-before:always">
  </span>
  <h4 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">3.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:6.0pt;line-height:125%"><a name="Item390786"></a><a href="#" target="pubright" class="SelectableItem" itemid="390786"><span lang="EN-US" style="line-height:125%">MOTION - RAT COMPLAINTS INQUIRY</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:389.8pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:6.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">COMMITTEE RECOMMENDATIONS</span></p>
  <p class="MsoCaption" align="left" style="margin-top:6.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">That Council approve:</span></p>
  <p class="MsoCaption" align="left" style="margin-top:6.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">1. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; that staff
  be directed to implement cost neutral rat control methods, including specific
  rat prevention practices in regular parks maintenance; incorporating
  inspections for rats into the twice annual inspections of abandoned buildings
  and issue orders to the owners to remedy any infestations if evidence is
  found; and, </span></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:6.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; that staff
  in Planning, Infrastructure and Economic Development be directed to assess
  the options, including Legal Services, under their mandate to implement a
  program for proactive rat baiting prior to construction and issuing
  demolition permits and development applications and if such a program is
  possible, report back to the appropriate committee with recommendations
  including how such a program could be administered, detail any financial
  impacts and what monitoring could be put in place to assess its
  effectiveness.</span></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:379.55pt;margin-left:50.4pt;border-collapse:collapse">
 <tbody><tr style="height:14.05pt">
  <td width="506" valign="top" style="width:379.55pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.05pt">
  <h3 style="margin-top:6.0pt;line-height:125%"><a name="Item380029"><span lang="EN-US" style="line-height:125%">STANDING COMMITTEE ON ENVIRONMENTAL
  PROTECTION, WATER AND WASTE MANAGEMENT REPORT 6</span></a></h3>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">4.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:6.0pt;line-height:125%"><a name="Item390852"></a><a href="#" target="pubright" class="SelectableItem" itemid="390852"><span lang="EN-US" style="line-height:125%">ROBERT O. PICKARD ENVIRONMENTAL CENTRE
  (ROPEC) ELECTRICAL RELIABILITY AND EFFICIENT USE OF DIGESTER GAS PROJECT</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:389.8pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:6.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">COMMITTEE
  RECOMMENDATIONS</span></p>
  <p class="MsoCaption" align="left" style="margin-top:6.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">That Council:</span></p>
  <p class="MsoCaption" align="left" style="margin-top:6.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">1. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Approve
  upgrades to the Robert O. Pickard Environmental Centre (ROPEC), as described
  in this report;</span></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:6.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">2. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Approve an
  increase in capital expenditure authority for project 906648 Digester Gas
  Utilization of $41.8 million for a total of $57.2 million and that the
  increase be funded from the Wastewater Reserve; and,</span></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:6.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">3. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Delegate
  the authority to the General Manager, Public Works and Environmental Services,
  in consultation with the City Solicitor, to negotiate, finalize and execute a
  contract with Envari Energy Solutions Inc., in accordance with this report.</span></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:379.55pt;margin-left:50.4pt;border-collapse:collapse">
 <tbody><tr style="height:14.05pt">
  <td width="506" valign="top" style="width:379.55pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.05pt">
  <h3 style="margin-top:6.0pt;line-height:125%"><a name="Item380031"><span lang="EN-US" style="line-height:125%">PLANNING COMMITTEE REPORT 14</span></a></h3>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">5.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:6.0pt;line-height:125%"><a name="Item390750"></a><a href="#" target="pubright" class="SelectableItem" itemid="390750"><span lang="EN-US" style="line-height:125%">ZONING – FLOOD PLAIN MAPPING UPDATES PHASE
  3</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:389.8pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><b><u><span lang="EN-US">AGRICULTURE AND RURAL AFFAIRS COMMITTEE RECOMMENDATION</span></u></b><b><span lang="EN-US"> </span></b></p>
  <p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><b><span lang="EN-US">That Council approve amendments to the floodplain overlay in
  Zoning By-law 2008-250, as shown in Document 1 and detailed in Document 3. </span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:389.8pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><b><u><span lang="EN-US">PLANNING COMMITTEE RECOMMENDATIONS, AS AMENDED</span></u></b></p>
  <p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><b><span lang="EN-US">That Council approve:</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal" style="margin-top:6.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-indent:-35.25pt;
  line-height:125%"><b><span lang="EN-US">1. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; amendments to the floodplain
  overlay in Zoning By-law 2008-250, as shown in Document 2 and detailed in
  Document 4, <u>as amended by the following</u>: </span></b></p>
  <p class="MsoNormal" style="margin-top:6.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:53.25pt;margin-bottom:.0001pt;text-indent:-18.0pt;line-height:
  125%"><b><i><span lang="EN-US">• &nbsp;&nbsp;&nbsp; </span></i></b><b><u><span lang="EN-US">that
  Map 4 in Document 2 be replaced with a revised Map 4, which does not apply
  the flood plain overlay to the subject land, per Planning Committee Motion No
  PLC 2019 14/1</span></u></b><b><span lang="EN-US"> (set out in Document 2 of
  the report);</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal" style="margin-top:6.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-indent:-35.25pt;
  line-height:125%"><b><span lang="EN-US">2. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u>that no further notice be
  provided pursuant to Section 34 (17) of the <i>Planning Act.</i></u> </span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">6.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:10.0pt;line-height:125%"><a name="Item390751"></a><a href="#" target="pubright" class="SelectableItem" itemid="390751"><span lang="EN-US" style="line-height:125%">MEMORANDUM OF UNDERSTANDING BETWEEN THE
  CITY OF OTTAWA AND 801 ALBERT STREET INC.</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:389.8pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><b><u><span lang="EN-US">COMMITTEE RECOMMENDATIONS AS AMENDED</span></u></b><b><span lang="EN-US"> </span></b></p>
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><b><span lang="EN-US">That Council:</span></b></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; delegate
  the authority to the General Manager of Planning, Infrastructure and Economic
  Development to enter into a Memorandum of Understanding as described in this
  report and detailed in Document 2;</span></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal" style="margin-top:10.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-indent:-35.25pt;
  line-height:125%"><b><span lang="EN-US">2. &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; approve <u>that, to allocate
  the full $1.25M from the sale to affordable housing, requirement 1.4 of the
  City’s Disposal of Real Property Policy be waived and that monies received
  from the sale of the lands (as described in Motion No PLC 2019 14/3) to 801
  Albert Street Inc. be directed towards affordable housing</u>. </span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">7.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:10.0pt;line-height:125%"><a name="Item390752"></a><a href="#" target="pubright" class="SelectableItem" itemid="390752"><span lang="EN-US" style="line-height:125%">ZONING BY-LAW AMENDMENT – 2140 BASELINE
  ROAD</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:389.8pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">COMMITTEE
  RECOMMENDATIONS</span></p>
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">That Council:</span></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; approve an
  amendment to Zoning By-law 2008-250 for 2140 Baseline Road to permit a
  14-storey mixed-use building, as detailed in Document 2;</span></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; exempt the
  developer from Section 37 contribution obligations.</span></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" colspan="3" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item380034"><span lang="EN-US" style="line-height:125%">BULK CONSENT AGENDA </span></a></h2>
  </td>
 </tr>
 <tr style="height:14.05pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="67"><p class="MsoNormal">&nbsp;</p></td>
  <td width="506" valign="top" style="width:379.55pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.05pt">
  <h3 style="margin-top:10.0pt;line-height:125%"><a name="Item380037"><span lang="EN-US" style="line-height:125%">COMMUNITY AND PROTECTIVE SERVICES
  COMMITTEE REPORT 7</span></a></h3>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="41"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr height="0">
  <td width="67" style="border:none"></td>
  <td width="506" style="border:none"></td>
  <td width="41" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">A.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:10.0pt;line-height:125%"><a name="Item390743"></a><a href="#" target="pubright" class="SelectableItem" itemid="390743"><span lang="EN-US" style="line-height:125%">COMMEMORATIVE NAMING PROPOSAL – LOIS KEMP
  ARENA</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <h6 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">COMMITTEE RECOMMENDATION</span></h6>
  <h6 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">That Council approve the proposal to name the
  Blackburn Arena, located at 190 Glen Park Dr the “Lois Kemp Arena”.</span></h6>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">B.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:10.0pt;line-height:125%"><a name="Item390744"></a><a href="#" target="pubright" class="SelectableItem" itemid="390744"><span lang="EN-US" style="line-height:125%">COMMEMORATIVE NAMING PROPOSAL – ELDON
  KEMP RINK</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <h6 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">COMMITTEE RECOMMENDATION</span></h6>
  <h6 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">That Council approve the proposal to name the rink
  inside the Blackburn Arena, located at 190 Glen Park Dr the “Eldon Kemp
  Rink”.</span></h6>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">C.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:10.0pt;line-height:125%"><a name="Item390745"></a><a href="#" target="pubright" class="SelectableItem" itemid="390745"><span lang="EN-US" style="line-height:125%">COMMUNITY SAFETY AND WELL-BEING PLAN
  ROADMAP</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <h6 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">COMMITTEE RECOMMENDATION</span></h6>
  <h6 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">That Council approve the Community Safety and
  Well-Being Plan Roadmap as described in this report and as set out in Document
  3.</span></h6>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="FR-CA">&nbsp;</span></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">D.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:6.0pt;line-height:125%"><a name="Item390747"></a><a href="#" target="pubright" class="SelectableItem" itemid="390747"><span lang="EN-US" style="line-height:125%">9-1-1 ANNUAL REPORT 2018</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <h6 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">COMMITTEE RECOMMENDATION</span></h6>
  <h6 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">That Council receive this report for information. </span></h6>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">E.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:6.0pt;line-height:125%"><a name="Item390749"></a><a href="#" target="pubright" class="SelectableItem" itemid="390749"><span lang="EN-US" style="line-height:125%">CITY OF OTTAWA OLDER ADULT PLAN 2020-2022</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <h6 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">COMMITTEE RECOMMENDATION</span></h6>
  <h6 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">That Council approve the Older Adult Plan (OAP) 2020
  – 2022 as outlined in this report and in Document 1. </span></h6>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:379.55pt;margin-left:50.4pt;border-collapse:collapse">
 <tbody><tr style="height:14.05pt">
  <td width="506" valign="top" style="width:379.55pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.05pt">
  <h3 style="margin-top:6.0pt;line-height:125%"><a name="Item380040"><span lang="EN-US" style="line-height:125%">PLANNING COMMITTEE REPORT 14</span></a></h3>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">F.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:6.0pt;line-height:125%"><a name="Item390753"></a><a href="#" target="pubright" class="SelectableItem" itemid="390753"><span lang="EN-US" style="line-height:125%">ZONING BY-LAW AMENDMENT – PART OF 3718
  GREENBANK ROAD</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <h6 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">COMMITTEE RECOMMENDATION</span></h6>
  <h6 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">That Council approve an amendment to Zoning By-law
  2008-250 for part of 3718 Greenbank Road to permit land uses associated with
  a Draft Plan of Subdivision, as shown in Document 1 and as detailed in
  Document 2.</span></h6>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">G.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:6.0pt;line-height:125%"><a name="Item390754"></a><a href="#" target="pubright" class="SelectableItem" itemid="390754"><span lang="EN-US" style="line-height:125%">ZONING BY-LAW AMENDMENT – 350 TERRY FOX
  DRIVE</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <h6 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">COMMITTEE RECOMMENDATION</span></h6>
  <h6 style="margin-top:6.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">That Council approve an amendment to Zoning By-law
  2008-250 for 350 Terry Fox Drive to permit the additional uses of a catering
  establishment and take-out restaurant, as detailed in Document 2.</span></h6>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">H.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4 style="margin-top:10.0pt;line-height:125%"><a name="Item390755"></a><a href="#" target="pubright" class="SelectableItem" itemid="390755"><span lang="EN-US" style="line-height:125%">FEDERAL LAND INITIATIVE – 715 MIKINAK
  ROAD BEING BLOCK 21 OF WATERIDGE VILLAGE, OPPORTUNITY TO ACQUIRE LAND FOR
  DEVELOPMENT OF AFFORDABLE HOUSING</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:389.8pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">COMMITTEE
  RECOMMENDATIONS</span></p>
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">That Council:</span></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; approve
  the execution of the Agreement of Purchase and Sale, by the Acting Director
  of the Corporate Real Estate Office, to acquire the lands known municipally
  as 715 Mikinak Road, as shown on Document 1 (the “Property”), from Canada
  Lands Company CLC Limited, for $4,935,000.00 of which:</span></p>
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:71.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">a.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $301,035.00,
  plus HST as applicable, and closing costs, is payable by the City of Ottawa,
  as Purchaser, and as further described in this report; and</span></p>
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:71.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">b.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $4,633,965
  is payable by Canada Mortgage Housing Corporation under the National Housing
  Strategy Federal Lands Initiative (FLI) pursuant to affordable housing
  agreements;</span></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; delegate
  the authority to the Director, Housing Services to negotiate and execute the
  required affordable housing agreements with Canada Mortgage Housing
  Corporation under the National Housing Strategy Federal Lands Initiative
  (FLI) to secure the Canada Mortgage Housing Corporation forgivable contribution
  of $6,478,965.00 towards the purchase price of the lands as described in this
  report and approve the default provisions in the event the development of the
  lands does not comply with the FLI requirements; </span></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; following
  the property acquisition, delegate the authority to the Director, Housing
  Services and the Director of the Corporate Real Estate Office to negotiate
  and execute the required documents to convey the 715 Mikinak Road lands, upon
  the same terms and conditions of the Agreement of Purchase and Sale with
  Canada Lands Corporation, save and except for nominal value, to Ottawa
  Community Housing Corporation the successful respondent to Housing Services’
  Request for Expressions of Interest for the development of Phase 1 of the
  Property; </span></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; delegate
  authority to the Director, Housing Services to:</span></p>
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:71.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">a.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; allocate
  $10 million in Capital Funding from the available $15 million in the City’s
  capital funds approved by Council in the 2019 City Budget (Report
  ACS2019-CSS-GEN-0008) to Ottawa Community Housing Corporation to support the
  first phase of the three-phase development proposed for the site;</span></p>
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:71.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">b.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; include the
  City-payable portion of the purchase price, being $301,035.00, as part of the
  contribution being made to Ottawa Community Housing Corporation for the
  development of affordable housing on the proposed site; </span></p>
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:71.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">c.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; negotiate
  and execute the required affordable housing agreements with Ottawa Community
  Housing Corporation to develop the subject lands in accordance with the
  Federal Lands Initiative and the Request for Expressions of Interest
  including the requirement to include other not-for-profit and/or charitable
  housing providers in the development of phases 2 and/or 3 and secure the
  $10.3M contribution on title to the Property. </span></p>
  </td>
 </tr>
 <tr>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoCaption" align="left" style="margin-top:10.0pt;margin-right:0cm;
  margin-bottom:0cm;margin-left:35.25pt;margin-bottom:.0001pt;text-align:left;
  text-indent:-35.25pt;line-height:125%"><span lang="EN-US">5.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; waive the
  Real Property Acquisition Policy requirements for the acquisition of the 715
  Mikinak Road under the Federal Lands Initiative. </span></p>
  </td>
 </tr>
</tbody></table>

<span lang="EN-US" style="font-size:12.0pt;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"><br clear="all" style="page-break-before:always">
</span>

<p class="MsoNormal"><a name="Item390783"><span lang="EN-US">&nbsp;</span></a></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:379.55pt;margin-left:50.4pt;border-collapse:collapse">
 <tbody><tr style="height:14.05pt">
  <td width="506" valign="top" style="width:379.55pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.05pt">
  <h3 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">CITY CLERK</span></h3>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">I.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-top: 10pt; line-height: 125%; margin-right: 25px;"><a name="Item390810"></a><a href="#" target="pubright" class="SelectableItem" itemid="390810"><span lang="EN-US">SUMMARY OF ORAL AND WRITTEN PUBLIC SUBMISSIONS FOR ITEMS SUBJECT
  TO THE <i>PLANNING ACT</i> ‘EXPLANATION REQUIREMENTS’ AT THE CITY COUNCIL
  MEETING OF OCTOBER 9, 2019</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><b><span lang="EN-US">REPORT RECOMMENDATION </span></b></p>
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><b><span lang="EN-US">That Council approve the Summaries of Oral and Written Public
  Submissions for items considered at the City Council Meeting of October 9,
  2019 that are subject to the ‘Explanation Requirements’ being the <i>Planning
  Act</i>, subsections 17(23.1), 22(6.7), 34(10.10) and 34(18.1), as
  applicable, as described in this report and attached as Documents 1 and 2.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" colspan="3" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item380043"><span lang="EN-US" style="line-height:125%">DISPOSITION OF ITEMS APPROVED BY
  COMMITTEES UNDER DELEGATED AUTHORITY </span></a></h2>
  </td>
 </tr>
 <tr style="height:15.1pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="558" valign="top" style="width: 418.15pt; padding: 0cm 5.4pt; height: 15.1pt; position: relative;">
  <p class="MsoNormal" style="margin-top: 10pt; line-height: 125%; margin-right: 25px;"><a name="Item380044"></a><a href="#" target="pubright" class="SelectableItem" itemid="380044"><span lang="EN-US">That Council receive the list of items approved by its Committees
  under Delegated Authority, attached as Document 1.</span></a><span lang="EN-US"> </span></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="2"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr height="0">
  <td width="55" style="border:none"></td>
  <td width="558" style="border:none"></td>
  <td width="2" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" colspan="3" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item380045"><span lang="EN-US" style="line-height:125%">MOTION TO ADOPT REPORTS </span></a></h2>
  </td>
 </tr>
 <tr style="height:15.1pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item390795"></a><a href="#" target="pubright" class="SelectableItem" itemid="390795"><span lang="EN-US">Councillors G. Gower and M. Luloff</span></a></p>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="2"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr height="0">
  <td width="55" style="border:none"></td>
  <td width="558" style="border:none"></td>
  <td width="2" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<b><span lang="EN-US" style="font-size:12.0pt;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"><br clear="all" style="page-break-before:always">
</span></b>

<p class="MsoNormal"><a name="Item380046"><span lang="EN-US">&nbsp;</span></a></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">MOTIONS OF WHICH NOTICE HAS BEEN PREVIOUSLY GIVEN </span></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" align="center" style="margin-top:6.0pt;text-align:center;
line-height:125%"><b><span lang="EN-US">MOTION</span></b></p>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><span lang="EN-GB" style="color:black">Moved by Mayor J. Watson<br>
Seconded by Councillor J. Cloutier</span></p>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><b><span lang="EN-US" style="color:black">WHEREAS on September 24, 2019 Councillor Rick
Chiarelli provided notice to the Mayor and the City Clerk, including medical
documentation of his inability to attend at Committee and Council for an
indeterminate period of time, and at least until October 9, 2019 inclusive, due
to medical issues; and</span></b></p>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><b><span lang="EN-US" style="color:black">WHEREAS at its meeting of September 25, 2019,
City Council considered Motion 20/5 with respect to Councillor Chiarelli’s
request for an authorized leave of absence; </span></b><b><span lang="EN-US" style="color:black">tabled the resolution to authorize a leave of absence for
Councillor Rick Chiarelli and directed the City Clerk to liaise with Councillor
Rick Chiarelli and to provide an update to City Council; and; </span></b></p>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><b><span lang="EN-US" style="color:black">WHEREAS on October 8, 2019 Councillor Rick
Chiarelli provided updated written medical documentation to the Clerk’s Office including
his physician’s recommendation for continued leave on medical grounds until
November 11, 2019 inclusive; and&nbsp; </span></b></p>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><b><span lang="EN-US" style="color:black">WHEREAS in accordance with Subsection 66(5) of
the Procedure By-law, a motion that has been tabled at a previous meeting of
Council may not be lifted off the table unless notice is given under Section 59
of the <i>Procedure By-law</i>; </span></b></p>

<p class="MsoNormal" style="margin-top:6.0pt;line-height:125%"><b><span lang="EN-US" style="color:black">THEREFORE BE IT RESOLVED that Council, at its
meeting of October 23, 2019, lift from the table the following resolution, for
consideration: &nbsp;</span></b></p>

<p class="MsoNormal" style="margin-top:6.0pt;margin-right:0cm;margin-bottom:0cm;
margin-left:36.0pt;margin-bottom:.0001pt;line-height:125%"><b><span lang="EN-US" style="color:black">BE IT RESOLVED THAT City Council authorize a leave of
absence for Councillor Rick Chiarelli</span></b></p>

<b><span lang="EN-US" style="font-size:12.0pt;line-height:125%;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;
color:black"><br clear="all" style="page-break-before:always">
</span></b>

<p class="MsoNormal" align="center" style="margin-top:10.0pt;text-align:center;
line-height:125%"><b><span lang="EN-US" style="color:black">MOTION</span></b></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-GB" style="color:black">Moved by Councillor T. Kavanagh<br>
Seconded by Councillor R. King</span></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><b><span lang="EN-US" style="color:black">WHEREAS Sections 390 and 391 within Part XII of <i>Municipal
Act</i>, 2001 provides the statutory framework for Council to impose fees and
charges to recover the City's costs related to services or activities provided,
for use of its property, and property under its control; and </span></b></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><b><span lang="EN-US" style="color:black">WHEREAS there must be a reasonable connection
between the fees charged and the cost of the services provided</span></b></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><b><span lang="EN-US" style="color:black">WHEREAS parking fees are imposed to recover
costs related to the services and objectives identified within the Municipal Parking
Management Strategy; and </span></b></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><b><span lang="EN-US" style="color:black">WHEREAS the City of Ottawa does not currently
have the statutory authority under the <i>Municipal Act, </i>2001 to use parking
revenues for projects related to sustainable transportation including sidewalk
construction and cycling infrastructure.</span></b></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><b><span lang="EN-US" style="color:black">THEREFORE BE IT RESOLVED that the Mayor, on behalf
of the City of Ottawa, petition the Province of Ontario to make the necessary
changes to the <i>Municipal Act </i>to permit the<i> </i>City of Ottawa and
other Ontario municipalities the ability to use municipal parking revenues for
projects related to sustainable transportation including sidewalk construction
and cycling infrastructure.</span></b></p>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item380047"><span lang="EN-US" style="line-height:125%">MOTIONS REQUIRING SUSPENSION OF THE RULES
  OF PROCEDURE </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item380048"><span lang="EN-US" style="line-height:125%">NOTICES OF MOTION (FOR CONSIDERATION AT
  SUBSEQUENT MEETING) </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<b><span lang="EN-US" style="font-size:12.0pt;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"><br clear="all" style="page-break-before:always">
</span></b>

<p class="MsoNormal"><a name="Item380050"><span lang="EN-US">&nbsp;</span></a></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><span lang="EN-US" style="line-height:125%">MOTION TO INTRODUCE BY-LAWS </span></h2>
  </td>
 </tr>
 <tr style="height:15.1pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="558" colspan="2" valign="top" style="width:418.5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item390796"></a><a href="#" target="pubright" class="SelectableItem" itemid="390796"><span lang="EN-US">Councillors G. Gower and M. Luloff</span></a><span lang="EN-US"> </span></p>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="1"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr style="height:15.1pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="558" colspan="2" valign="top" style="width:418.5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal" align="right" style="margin-top:10.0pt;text-align:right;
  line-height:125%"><a name="Item380052"><b><span lang="EN-US">THREE READINGS </span></b></a></p>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="1"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr>
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoListParagraph" style="margin-top:10.0pt;margin-right:-3.75pt;
  margin-bottom:0cm;margin-left:36.0pt;margin-bottom:.0001pt;text-indent:-36.0pt;
  line-height:125%"><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">a)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to provide
  for amendments to the existing Van Gaal Municipal Drain in Lots 22 and 23,
  Concession IV, Rideau-Goulbourn Ward, former Township of Goulbourn in the
  City of Ottawa.</span></p>
  </td>
 </tr>
 <tr>
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoListParagraph" style="margin-top:10.0pt;margin-right:-3.75pt;
  margin-bottom:0cm;margin-left:36.0pt;margin-bottom:.0001pt;text-indent:-36.0pt;
  line-height:125%;text-autospace:ideograph-other"><span lang="EN-US" style="font-size:12.0pt;line-height:125%;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">b)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to impose
  special annual drainage rates upon lands in respect of which money is
  borrowed under the <i>Tile Drainage Act</i>. R.S.O 1990, c.T.8</span></p>
  </td>
 </tr>
 <tr>
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoListParagraph" style="margin-top:10.0pt;text-indent:-36.0pt;
  line-height:125%"><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">c)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to designate
  certain lands at croissant Rainrock Crescent and rue Compass Street on Plan
  4M-1545, as being exempt from Part Lot Control.</span></p>
  </td>
 </tr>
 <tr>
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoListParagraph" style="margin-top:10.0pt;text-indent:-36.0pt;
  line-height:125%"><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">d)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to designate
  certain lands at Somme Street on Plan 4M-1388, as being exempt from Part Lot
  Control.</span></p>
  </td>
 </tr>
 <tr>
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoListParagraph" style="margin-top:10.0pt;text-indent:-36.0pt;
  line-height:125%"><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">e)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to amend
  By-law No. 2008-250 to change the zoning of the lands known municipally as
  2140 Baseline Road.</span></p>
  </td>
 </tr>
 <tr>
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoListParagraph" style="margin-top:10.0pt;text-indent:-36.0pt;
  line-height:125%"><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">f)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to amend
  By-law No. 2008-250 to change the zoning of part of the lands known
  municipally as 3718 Greenbank Road. </span></p>
  </td>
 </tr>
 <tr>
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoListParagraph" style="margin-top:10.0pt;text-indent:-36.0pt;
  line-height:125%"><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">g)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to amend By-law
  No. 2008-250 to change the zoning of the lands known municipally as 350 Terry
  Fox Drive. </span></p>
  </td>
 </tr>
 <tr>
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoListParagraph" style="margin-top:10.0pt;text-indent:-36.0pt;
  line-height:125%"><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">h)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to amend
  By-law No. 2003-499 respecting fire routes.</span></p>
  </td>
 </tr>
 <tr>
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoListParagraph" style="margin-top:10.0pt;text-indent:-36.0pt;
  line-height:125%"><a name="_Hlk20902021"><span lang="EN-US" style="font-size:
  12.0pt;line-height:125%;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">i)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to establish
  certain lands as common and public highway and assume them for public use
  (Fernbank Road).</span></a></p>
  </td>
 </tr>
 <tr>
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoListParagraph" style="margin-top:8.0pt;text-indent:-34.5pt;
  line-height:125%"><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">j)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US" style="font-size:12.0pt;line-height:125%;
  font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to amend
  By-law No. 2018-275 respecting the designated municipal capital facilities at
  191 Laurier Avenue West.</span></p>
  </td>
 </tr>
 <tr>
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoBodyText" style="margin-top:8.0pt;margin-right:0cm;margin-bottom:
  0cm;margin-left:36.0pt;margin-bottom:.0001pt;text-indent:-36.0pt;line-height:
  125%;punctuation-wrap:simple;text-autospace:none"><span lang="EN-GB">k)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US">A by-law of the City of Ottawa to amend By-law
  No. 2017-180 respecting the appointment of Municipal Law Enforcement Officers
  in accordance with private property parking enforcement.</span></p>
  </td>
 </tr>
 <tr style="height:15.1pt">
  <td width="614" colspan="4" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item380053"><span lang="EN-US" style="line-height:125%">CONFIRMATION BY-LAW </span></a></h2>
  </td>
 </tr>
 <tr style="height:15.1pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item390800"></a><a href="#" target="pubright" class="SelectableItem" itemid="390800"><span lang="EN-US">Councillors G. Gower and M. Luloff </span></a><span lang="EN-US">&nbsp;</span></p>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="2" colspan="2"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr height="0">
  <td width="55" style="border:none"></td>
  <td width="558" style="border:none"></td>
  <td width="0" style="border:none"></td>
  <td width="1" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item380054"><span lang="EN-US" style="line-height:125%">INQUIRIES </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" colspan="3" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2 style="margin-top:10.0pt;line-height:125%"><a name="Item380055"><span lang="EN-US" style="line-height:125%">ADJOURNMENT </span></a></h2>
  </td>
 </tr>
 <tr style="height:15.1pt">
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="55"><p class="MsoNormal">&nbsp;</p></td>
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><a name="Item390798"></a><a href="#" target="pubright" class="SelectableItem" itemid="390798"><span lang="EN-US">Councillors G. Gower and M. Luloff </span></a><span lang="EN-US">&nbsp;</span></p>
  </td>
  <td style="border:none;padding:0cm 0cm 0cm 0cm" width="2"><p class="MsoNormal">&nbsp;</p></td>
 </tr>
 <tr height="0">
  <td width="55" style="border:none"></td>
  <td width="558" style="border:none"></td>
  <td width="2" style="border:none"></td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="margin-left:68.65pt;background:#F2F2F2;border-collapse:collapse;
 border:none">
 <tbody><tr style="height:59.8pt">
  <td width="442" valign="top" style="width:331.7pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:59.8pt">
  <p class="MsoNormal" style="margin-top:10.0pt;line-height:125%"><i>Simultaneous
  interpretation of these proceedings is available.&nbsp; Please speak to the
  attendant at reception.<br>
  <br>
  </i><i><span lang="FR-CA">Accessible formats and communication supports are
  available, upon request.</span></i></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%">&nbsp;</p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="margin-left:10.9pt;border-collapse:collapse;border:none">
 <tbody><tr>
  <td width="597" valign="top" style="width:447.95pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal" align="center" style="margin-top:10.0pt;margin-right:29.85pt;
  margin-bottom:0cm;margin-left:31.65pt;margin-bottom:.0001pt;text-align:center;
  line-height:125%"><b><i><span lang="EN-US">NOTICE</span></i></b></p>
  <p class="MsoNormal" style="margin-top:10.0pt;margin-right:29.85pt;margin-bottom:
  0cm;margin-left:31.65pt;margin-bottom:.0001pt;line-height:125%"><b><i><span lang="EN-GB">In Camera </span></i></b><b><i><span lang="EN-GB">Items are not
  subject to public discussion or audience.&nbsp; </span></i></b><b><i><span lang="EN-US">Any person has a right to request an independent investigation of
  the propriety of dealing with matters in a closed session.&nbsp;&nbsp; A form
  requesting such a review may be obtained, without charge, from the City’s website
  or in person from the Chair of this meeting.&nbsp; Requests are kept confidential
  pending any report by the Meetings Investigator and are conducted without
  charge to the Requestor.</span></i></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal" style="margin-top:10.0pt;line-height:125%">&nbsp;</p>

</div>




        </DIV>
    </SECTION>

    <SECTION class='Details col-xs-3 col-sm-3 col-md-4 col-lg-4 col-xs-offset-9 col-sm-offset-9'>
        <DIV class='affix affix-top' style='width:inherit; padding-right:5%;'>
            <DIV class='panel panel-default' style='width:auto;box-shadow:3px 3px 3px rgba(0,0,0,.33);'>
                <DIV class='VideoPlayerContainer panel panel-default'>
                    <DIV class='VideoPlayer'>
                    </DIV>
                </DIV>

                <DIV class='visible-md visible-lg AgendaItemSelectedDetailsContainer'>
                    <DIV class='panel-body AgendaItemAttachment AgendaItemAttachmentNotSelected'>
                        No Item Selected
                    </DIV>
                    <DIV class='panel panel-default AgendaItemSelectedDetails' style='display:none'>
                        <DIV class='panel-heading'>
                            <SPAN class='SelectedItemCounter'></SPAN> &nbsp; <SPAN class='SelectedItemTitle'></SPAN>
                        </DIV>
                        
                        <DIV class='panel-body'>                    
                            <DIV class='AgendaItemAttachmentsArea'>
                                <DIV class='AgendaItemAttachmentsList'>
                                    <DIV class='AgendaItemAttachment AgendaItemAttachmentNone'>
                                        This item has no attachments
                                    </DIV>
                                    
<DIV class='AgendaItemAttachment AgendaItemAttachment380044' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39465' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='OCC Document 1EN - Delegated Authority List - Agenda 22.docx.pdf' target='_blank'>
        <SPAN class='Link'>OCC Document 1EN - Delegated Authority List - Agenda 22.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment380044' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39466' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='OCC Document 1FR - Delegated Authority List - Agenda 22.docx.pdf' target='_blank'>
        <SPAN class='Link'>OCC Document 1FR - Delegated Authority List - Agenda 22.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment380044' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39465' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='OCC Document 1EN - Delegated Authority List - Agenda 22.docx.pdf' target='_blank'>
        <SPAN class='Link'>OCC Document 1EN - Delegated Authority List - Agenda 22.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment380044' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39466' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='OCC Document 1FR - Delegated Authority List - Agenda 22.docx.pdf' target='_blank'>
        <SPAN class='Link'>OCC Document 1FR - Delegated Authority List - Agenda 22.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment380044' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39465' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='OCC Document 1EN - Delegated Authority List - Agenda 22.docx.pdf' target='_blank'>
        <SPAN class='Link'>OCC Document 1EN - Delegated Authority List - Agenda 22.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment380044' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39466' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='OCC Document 1FR - Delegated Authority List - Agenda 22.docx.pdf' target='_blank'>
        <SPAN class='Link'>OCC Document 1FR - Delegated Authority List - Agenda 22.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390743' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39467' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - CN Lois Kemp.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - CN Lois Kemp.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390743' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39467' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - CN Lois Kemp.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - CN Lois Kemp.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390743' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39467' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - CN Lois Kemp.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - CN Lois Kemp.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390744' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39468' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - CN Eldon Kemp.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - CN Eldon Kemp.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390744' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39468' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - CN Eldon Kemp.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - CN Eldon Kemp.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390744' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39468' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - CN Eldon Kemp.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - CN Eldon Kemp.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39469' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - CSWBP Roadmap EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - CSWBP Roadmap EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39470' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - CSWBP Roadmap FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - CSWBP Roadmap FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39471' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 1 EN - Vision Mission Guiding Principles.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 1 EN - Vision Mission Guiding Principles.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39472' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 1 FR - Vision Mission Guiding Principles.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 1 FR - Vision Mission Guiding Principles.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39473' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 2 EN - Topics for Consideration.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 2 EN - Topics for Consideration.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39474' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 2 FR - Topics for Consideration.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 2 FR - Topics for Consideration.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39475' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 3 EN - Roadmap.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 3 EN - Roadmap.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39476' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 3 FR - Roadmap.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 3 FR - Roadmap.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39469' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - CSWBP Roadmap EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - CSWBP Roadmap EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>10</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39470' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - CSWBP Roadmap FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - CSWBP Roadmap FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>11</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39471' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 1 EN - Vision Mission Guiding Principles.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 1 EN - Vision Mission Guiding Principles.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>12</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39472' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 1 FR - Vision Mission Guiding Principles.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 1 FR - Vision Mission Guiding Principles.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>13</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39473' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 2 EN - Topics for Consideration.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 2 EN - Topics for Consideration.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>14</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39474' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 2 FR - Topics for Consideration.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 2 FR - Topics for Consideration.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>15</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39475' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 3 EN - Roadmap.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 3 EN - Roadmap.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>16</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39476' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 3 FR - Roadmap.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 3 FR - Roadmap.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>17</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39469' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - CSWBP Roadmap EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - CSWBP Roadmap EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>18</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39470' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - CSWBP Roadmap FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - CSWBP Roadmap FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>19</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39471' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 1 EN - Vision Mission Guiding Principles.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 1 EN - Vision Mission Guiding Principles.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>20</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39472' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 1 FR - Vision Mission Guiding Principles.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 1 FR - Vision Mission Guiding Principles.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>21</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39473' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 2 EN - Topics for Consideration.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 2 EN - Topics for Consideration.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>22</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39474' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 2 FR - Topics for Consideration.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 2 FR - Topics for Consideration.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>23</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39475' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 3 EN - Roadmap.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 3 EN - Roadmap.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390745' >
    <SPAN class='Sequence'>24</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39476' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Doc 3 FR - Roadmap.docx.pdf' target='_blank'>
        <SPAN class='Link'>Doc 3 FR - Roadmap.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390747' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39477' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - 911 Report EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - 911 Report EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390747' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39478' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - 911 Report FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - 911 Report FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390747' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39477' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - 911 Report EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - 911 Report EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390747' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39478' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - 911 Report FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - 911 Report FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390747' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39477' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - 911 Report EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - 911 Report EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390747' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39478' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - 911 Report FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - 911 Report FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390748' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39479' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Feasability of Review.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Feasability of Review.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390748' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39480' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='CPSC Draft Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>CPSC Draft Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390748' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39479' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Feasability of Review.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Feasability of Review.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390748' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39480' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='CPSC Draft Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>CPSC Draft Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390748' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39479' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Feasability of Review.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Feasability of Review.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390748' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39480' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='CPSC Draft Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>CPSC Draft Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39481' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Older Adult Plan EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Older Adult Plan EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39482' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Older Adult Plan FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Older Adult Plan FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39483' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 1 - OAP 2020-2022 Action Plan V4 002.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 1 - OAP 2020-2022 Action Plan V4 002.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39484' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 1 - OAP 2020-2022 Action Plan V4 002_FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 1 - OAP 2020-2022 Action Plan V4 002_FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39485' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 2 - Older Adult Plan 2015-2018 Final Update V3_EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 2 - Older Adult Plan 2015-2018 Final Update V3_EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39486' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 2 - Older Adult Plan 2015-2018 Final Update_FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 2 - Older Adult Plan 2015-2018 Final Update_FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39487' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 3 - Findings from Community Consultations OAP 2019-22 Report_EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 3 - Findings from Community Consultations OAP 2019-22 Report_EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39488' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 3 - Findings from Community Consultations OAP 2019-22 Report_FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 3 - Findings from Community Consultations OAP 2019-22 Report_FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39489' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='CPSC Draft Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>CPSC Draft Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>10</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39481' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Older Adult Plan EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Older Adult Plan EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>11</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39482' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Older Adult Plan FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Older Adult Plan FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>12</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39483' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 1 - OAP 2020-2022 Action Plan V4 002.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 1 - OAP 2020-2022 Action Plan V4 002.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>13</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39484' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 1 - OAP 2020-2022 Action Plan V4 002_FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 1 - OAP 2020-2022 Action Plan V4 002_FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>14</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39485' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 2 - Older Adult Plan 2015-2018 Final Update V3_EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 2 - Older Adult Plan 2015-2018 Final Update V3_EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>15</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39486' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 2 - Older Adult Plan 2015-2018 Final Update_FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 2 - Older Adult Plan 2015-2018 Final Update_FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>16</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39487' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 3 - Findings from Community Consultations OAP 2019-22 Report_EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 3 - Findings from Community Consultations OAP 2019-22 Report_EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>17</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39488' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 3 - Findings from Community Consultations OAP 2019-22 Report_FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 3 - Findings from Community Consultations OAP 2019-22 Report_FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>18</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39489' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='CPSC Draft Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>CPSC Draft Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>19</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39481' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Older Adult Plan EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Older Adult Plan EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>20</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39482' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Older Adult Plan FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Older Adult Plan FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>21</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39483' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 1 - OAP 2020-2022 Action Plan V4 002.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 1 - OAP 2020-2022 Action Plan V4 002.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>22</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39484' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 1 - OAP 2020-2022 Action Plan V4 002_FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 1 - OAP 2020-2022 Action Plan V4 002_FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>23</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39485' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 2 - Older Adult Plan 2015-2018 Final Update V3_EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 2 - Older Adult Plan 2015-2018 Final Update V3_EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>24</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39486' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 2 - Older Adult Plan 2015-2018 Final Update_FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 2 - Older Adult Plan 2015-2018 Final Update_FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>25</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39487' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 3 - Findings from Community Consultations OAP 2019-22 Report_EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 3 - Findings from Community Consultations OAP 2019-22 Report_EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>26</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39488' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='7 - Document 3 - Findings from Community Consultations OAP 2019-22 Report_FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>7 - Document 3 - Findings from Community Consultations OAP 2019-22 Report_FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390749' >
    <SPAN class='Sequence'>27</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39489' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='CPSC Draft Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>CPSC Draft Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39490' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Flood Plain Mapping EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Flood Plain Mapping EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39491' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Flood Plain Mapping FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Flood Plain Mapping FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39492' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ARAC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>ARAC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39493' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39494' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Summary of Submissions_ Zoning_Flood Plain Mapping.docx.pdf' target='_blank'>
        <SPAN class='Link'>Summary of Submissions_ Zoning_Flood Plain Mapping.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39490' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Flood Plain Mapping EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Flood Plain Mapping EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39491' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Flood Plain Mapping FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Flood Plain Mapping FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39492' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ARAC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>ARAC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39493' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>10</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39494' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Summary of Submissions_ Zoning_Flood Plain Mapping.docx.pdf' target='_blank'>
        <SPAN class='Link'>Summary of Submissions_ Zoning_Flood Plain Mapping.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>11</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39490' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Flood Plain Mapping EN.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Flood Plain Mapping EN.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>12</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39491' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Flood Plain Mapping FR.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Flood Plain Mapping FR.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>13</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39492' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ARAC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>ARAC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>14</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39493' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390750' >
    <SPAN class='Sequence'>15</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39494' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Summary of Submissions_ Zoning_Flood Plain Mapping.docx.pdf' target='_blank'>
        <SPAN class='Link'>Summary of Submissions_ Zoning_Flood Plain Mapping.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390751' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39495' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - City of Ottawa and 801 Albert Street Inc.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - City of Ottawa and 801 Albert Street Inc.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390751' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39496' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390751' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39495' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - City of Ottawa and 801 Albert Street Inc.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - City of Ottawa and 801 Albert Street Inc.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390751' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39496' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390751' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39495' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - City of Ottawa and 801 Albert Street Inc.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - City of Ottawa and 801 Albert Street Inc.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390751' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39496' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390752' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39497' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report_Zoning_2140 Baseline.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report_Zoning_2140 Baseline.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390752' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39498' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390752' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39497' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report_Zoning_2140 Baseline.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report_Zoning_2140 Baseline.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390752' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39498' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390752' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39497' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report_Zoning_2140 Baseline.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report_Zoning_2140 Baseline.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390752' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39498' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390753' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39499' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report_Zoning_part of 3718 Greenbank.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report_Zoning_part of 3718 Greenbank.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390753' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39500' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390753' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39499' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report_Zoning_part of 3718 Greenbank.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report_Zoning_part of 3718 Greenbank.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390753' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39500' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390753' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39499' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report_Zoning_part of 3718 Greenbank.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report_Zoning_part of 3718 Greenbank.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390753' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39500' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390754' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39501' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report_Zoning_350 Terry Fox.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report_Zoning_350 Terry Fox.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390754' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39502' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390754' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39501' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report_Zoning_350 Terry Fox.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report_Zoning_350 Terry Fox.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390754' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39502' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390754' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39501' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report_Zoning_350 Terry Fox.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report_Zoning_350 Terry Fox.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390754' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39502' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='PC EXTRACT OF DRAFT MINUTES.docx.pdf' target='_blank'>
        <SPAN class='Link'>PC EXTRACT OF DRAFT MINUTES.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390755' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39503' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report_Federal Land Initiative_715 Mikinak Road.pdf' target='_blank'>
        <SPAN class='Link'>Report_Federal Land Initiative_715 Mikinak Road.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390755' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39503' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report_Federal Land Initiative_715 Mikinak Road.pdf' target='_blank'>
        <SPAN class='Link'>Report_Federal Land Initiative_715 Mikinak Road.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390755' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39503' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report_Federal Land Initiative_715 Mikinak Road.pdf' target='_blank'>
        <SPAN class='Link'>Report_Federal Land Initiative_715 Mikinak Road.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390784' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39504' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='OCCdraftminutes21EN2019.doc.pdf' target='_blank'>
        <SPAN class='Link'>OCCdraftminutes21EN2019.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390784' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39505' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='OCCdraftminutes21FR2019.doc.pdf' target='_blank'>
        <SPAN class='Link'>OCCdraftminutes21FR2019.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390784' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39504' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='OCCdraftminutes21EN2019.doc.pdf' target='_blank'>
        <SPAN class='Link'>OCCdraftminutes21EN2019.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390784' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39505' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='OCCdraftminutes21FR2019.doc.pdf' target='_blank'>
        <SPAN class='Link'>OCCdraftminutes21FR2019.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390784' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39504' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='OCCdraftminutes21EN2019.doc.pdf' target='_blank'>
        <SPAN class='Link'>OCCdraftminutes21EN2019.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390784' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39505' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='OCCdraftminutes21FR2019.doc.pdf' target='_blank'>
        <SPAN class='Link'>OCCdraftminutes21FR2019.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390786' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39506' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Rats Complaints.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Rats Complaints.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390786' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39507' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Document 1 - OCC 13-19 Rats Complaint Inquiry.pdf' target='_blank'>
        <SPAN class='Link'>Document 1 - OCC 13-19 Rats Complaint Inquiry.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390786' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39508' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='CPSC Draft Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>CPSC Draft Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390786' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39506' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Rats Complaints.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Rats Complaints.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390786' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39507' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Document 1 - OCC 13-19 Rats Complaint Inquiry.pdf' target='_blank'>
        <SPAN class='Link'>Document 1 - OCC 13-19 Rats Complaint Inquiry.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390786' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39508' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='CPSC Draft Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>CPSC Draft Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390786' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39506' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - Rats Complaints.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - Rats Complaints.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390786' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39507' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Document 1 - OCC 13-19 Rats Complaint Inquiry.pdf' target='_blank'>
        <SPAN class='Link'>Document 1 - OCC 13-19 Rats Complaint Inquiry.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390786' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39508' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='CPSC Draft Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>CPSC Draft Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390803' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39509' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='AMO - Province Appoints Advisor for Public Health and Emergency Health Services Consultations.docx.pdf' target='_blank'>
        <SPAN class='Link'>AMO - Province Appoints Advisor for Public Health and Emergency Health Services Consultations.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390803' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39509' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='AMO - Province Appoints Advisor for Public Health and Emergency Health Services Consultations.docx.pdf' target='_blank'>
        <SPAN class='Link'>AMO - Province Appoints Advisor for Public Health and Emergency Health Services Consultations.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390803' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39509' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='AMO - Province Appoints Advisor for Public Health and Emergency Health Services Consultations.docx.pdf' target='_blank'>
        <SPAN class='Link'>AMO - Province Appoints Advisor for Public Health and Emergency Health Services Consultations.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390807' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39510' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Inquiry OCC 13-19 - Fleury - Rats.pdf' target='_blank'>
        <SPAN class='Link'>Inquiry OCC 13-19 - Fleury - Rats.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390807' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39510' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Inquiry OCC 13-19 - Fleury - Rats.pdf' target='_blank'>
        <SPAN class='Link'>Inquiry OCC 13-19 - Fleury - Rats.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390807' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39510' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Inquiry OCC 13-19 - Fleury - Rats.pdf' target='_blank'>
        <SPAN class='Link'>Inquiry OCC 13-19 - Fleury - Rats.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390810' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39511' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report -Summary of Submissions - Planning Matters approved October 9 2019.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report -Summary of Submissions - Planning Matters approved October 9 2019.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390810' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39512' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Document 1_Summary_ Zoning Provisions_High-rise buildings_ACS2019-PIE-EDP-0026.docx.pdf' target='_blank'>
        <SPAN class='Link'>Document 1_Summary_ Zoning Provisions_High-rise buildings_ACS2019-PIE-EDP-0026.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390810' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39513' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Document 2_Summary_ Zoning_1950 Scott_314 Clifton_ACS2019-PIE-PS-0069.docx.pdf' target='_blank'>
        <SPAN class='Link'>Document 2_Summary_ Zoning_1950 Scott_314 Clifton_ACS2019-PIE-PS-0069.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390810' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39511' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report -Summary of Submissions - Planning Matters approved October 9 2019.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report -Summary of Submissions - Planning Matters approved October 9 2019.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390810' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39512' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Document 1_Summary_ Zoning Provisions_High-rise buildings_ACS2019-PIE-EDP-0026.docx.pdf' target='_blank'>
        <SPAN class='Link'>Document 1_Summary_ Zoning Provisions_High-rise buildings_ACS2019-PIE-EDP-0026.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390810' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39513' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Document 2_Summary_ Zoning_1950 Scott_314 Clifton_ACS2019-PIE-PS-0069.docx.pdf' target='_blank'>
        <SPAN class='Link'>Document 2_Summary_ Zoning_1950 Scott_314 Clifton_ACS2019-PIE-PS-0069.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390810' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39511' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report -Summary of Submissions - Planning Matters approved October 9 2019.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report -Summary of Submissions - Planning Matters approved October 9 2019.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390810' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39512' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Document 1_Summary_ Zoning Provisions_High-rise buildings_ACS2019-PIE-EDP-0026.docx.pdf' target='_blank'>
        <SPAN class='Link'>Document 1_Summary_ Zoning Provisions_High-rise buildings_ACS2019-PIE-EDP-0026.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390810' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39513' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Document 2_Summary_ Zoning_1950 Scott_314 Clifton_ACS2019-PIE-PS-0069.docx.pdf' target='_blank'>
        <SPAN class='Link'>Document 2_Summary_ Zoning_1950 Scott_314 Clifton_ACS2019-PIE-PS-0069.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390852' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39514' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - ROPEC.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - ROPEC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390852' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39515' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Extract of Draft Minute.docx.pdf' target='_blank'>
        <SPAN class='Link'>Extract of Draft Minute.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390852' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39514' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - ROPEC.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - ROPEC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390852' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39515' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Extract of Draft Minute.docx.pdf' target='_blank'>
        <SPAN class='Link'>Extract of Draft Minute.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390852' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39514' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Report - ROPEC.docx.pdf' target='_blank'>
        <SPAN class='Link'>Report - ROPEC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment390852' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=39515' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Extract of Draft Minute.docx.pdf' target='_blank'>
        <SPAN class='Link'>Extract of Draft Minute.docx.pdf</SPAN>
    </a>
</DIV>
                                </DIV>
                            </DIV>
                        </DIV>
                    </DIV>
                </DIV>
            </DIV>
        </DIV>
    </SECTION>
</ARTICLE>
<script type='text/javascript'>function SelectItem(AgendaItemId) { document.location.hash = AgendaItemId; }</script>
<script type='text/javascript'></script>
<script type='text/javascript'>$(document).ready(function() {$("[data-toggle='tooltip']").tooltip({placement:'top'});});</script>
            </main>
        </div>
        <!-- Bootstrap Modal -->
        <div id='bootstrapModal' aria-live="polite" aria-hidden="true" class='modal fade in' style='display: none;'>
            <div class='modal-dialog modal-dialog-scrollable'>
                <div class='modal-content'>
                    <div class='modal-header'>
                        <h3 id='bootstrapModalTitle' class='modal-title' style='font-size: 17px'>Title</h3>
                        <button type='button' class='close' data-dismiss='modal'><span aria-hidden='true'>×</span> <span class='sr-only'>close</span></button>
                    </div>
                    <div id='bootstrapModalBody' class='modal-body' style="padding: 0px">
                        <div class='embed-responsive z-depth-1-half' id="modalIframeDiv">
                            <iframe id="modalIframe" title="Share Content Options" class='embed-responsive-item' src='' allowfullscreen></iframe>
                        </div>
                    </div>
                    <div class='modal-footer' id="bootstrapModalFooter" style='margin-top: 0; min-height: 55px;'>
                    </div>
                </div>
            </div>
        </div>

        <footer class="navbar navbar-default navbar-fixed-bottom navbarbg">
            <div class="container text-right">
                <div class="navbar-inner navbar-content-center footeralign">
                    <div class="float-right">
                        
                        <copyright class="poweredBy"><a href="https://escribemeetings.com" target="_blank" id="lnkPoweredBy">Powered by eSCRIBE Software Ltd.</a></copyright>
                        
                    </div>
                </div>
            </div>
        </footer>

        <script type="text/javascript">
            var AgendaSize = parseFloat($(".Agenda *").css('font-size'));
            var TitleSize = parseFloat($(".AgendaHeaderTitle").css('font-size'));
            var MeetingTitle = "City Council - October 23, 2019";
            var itemTitles = { };
            var Sharing = false;
            var AllowComment = "False";
			var PublicCommentSettings = [];
            var LeaveComment = "Leave comment";

            function PrintAgenda() {
                window.print();
            };

            $(".VideoLink").click(function (e) {
                try {
                    $f().pause();
                }
                catch (e) {
                }
            });

            function detailsheight() {
                return $(".Details > div").height();
            };

            function SetDetailsHeight(AgendaItemId) {
                try {
                    if (Window_OnResize) {
                        Window_OnResize();
                    }
                        
                    //For public comment narrow and wide view when resize window
                    $(window).trigger('resize');

                }
                catch (e) {
                }
            }

            function CreateSocialLink(AgendaItemId) {
                var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                var language = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("lang").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                var publicCommentUrl = "PublicComment.aspx?agendaId=" + AgendaItemId + "&meetingId=" + meetingId + "&lang=" + language;
                var allowComment = AllowComment == "True" ? true : false;           
                    
                if(allowComment) {
                    for(i = 0; i < PublicCommentSettings.length; i++) {
                        var setting = PublicCommentSettings[i];
                        if(setting.Id == AgendaItemId) {
                            allowComment = setting.AllowPublicComment;
                            break;
                        }
                    }
                }

                var SocialItems = setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, false);

                $('.SocialIcons').remove();
                $(".hilighted .AgendaItemNavigate").append($("<div class='SocialIcons visible-xs visible-sm'>").append(SocialItems));
                $('.SelectedItemTitle').parent().append(SocialItems);
                $('.SelectedItemTitle').parent().addClass("clearfix");

                //visible-xs visible-sm
                //add the icons under narrow view if not exist
                var iconDiv = $('.AgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemIcons');

                if(iconDiv.length == 0) {
                    iconDiv = $('.AgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemTitle');
                }

                $(setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, true)).insertAfter(iconDiv);
                
                var closedIconDiv = $('.LateClosedAgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemIcons');
                
                if(closedIconDiv.length == 0) {
                    closedIconDiv = $('.LateClosedAgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemTitle');
                }
                $(setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, true)).insertAfter(closedIconDiv);
                SetDetailsHeight(AgendaItemId);
            }

            function setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, isNarrow) {
                var cssClass = isNarrow ? " class='visible-xs visible-sm' " : "";
                var padding = isNarrow ? "style='padding-top: 5px;'" : "";
                var btnId = isNarrow ? "id='narrow-leave-comment-button'" : "";
                    
                if(allowComment && !Sharing) {
                    var SocialItems = $("<div" + cssClass + ">")
                           .addClass("sharing SocialIcons")
                           .css("float", "right")
                           .append(
                               $("<a class='CommentIcon' aria-label='submit public comment'>")
                                   .attr("href", publicCommentUrl)
                                   .append("<span class='btn btn-primary btn-sm' style='vertical-align:middle;' " + btnId + ">" + LeaveComment + "<span>")
                           );

                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                }
                else if (Sharing && !allowComment) {
                    var SocialItems =
                        $("<div" + cssClass + padding + ">")
                            .addClass("sharing SocialIcons")
                            .css("float", "right")
                            .append(
                                $("<a style='padding-right: 13px;'>")
                                    .attr("href", 'Sharing.aspx?u=' + encodeURIComponent(window.location.href))
                                    .append('<img src="Images/share.PNG" style="height:1em;" alt="This can be shared, click to open the sharing popup." title="Share">')
                            );
                }
                else if (Sharing && allowComment) {
                    var SocialItems = $("<div" + cssClass + ">")
                                .addClass("sharing SocialIcons")
                                .css("float", "right")
                                .append(
                                   $("<a class='CommentIcon' aria-label='submit public comment'>")
                                       .attr("href", publicCommentUrl)
                                       .append("<span class='btn btn-primary btn-sm' style='vertical-align:middle;' " + btnId + ">" + LeaveComment + "<span>"))
                                
                                .append(
                                    $("<a style='padding-right: 19px;width: 6%;padding-top: 5px;padding-left: 5px;'>")
                                        .attr("href", 'Sharing.aspx?u=' + encodeURIComponent(window.location.href))
                                        .append('<img src="Images/share.PNG" style="height:1em;" alt="This can be shared, click to open the sharing popup." title="Share">')
                                );

                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                    $('.LateClosedAgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.LateClosedAgendaItemTitleRow hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                }

                return SocialItems;
            }

            function getParameterByName(name) {
                name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
                var regex = new RegExp('[\\?&]' + name + '=([^&#]*)'),
                results = regex.exec(location.search);
                return results == null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
            }

            function UpdateTitle(AgendaItemId) {
                if (itemTitles[AgendaItemId] != null) {
                    document.title = itemTitles[AgendaItemId] + ' - ' + MeetingTitle;
                }
                else {
                    document.title = MeetingTitle;
                }
            }

            // when selected item has changed update page //
            $(document).on("item:selected", function (e, id, scroll) {
                var selectedTab = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Tab").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                  
                hilightItem(id);
                CreateSocialLink(id);
                UpdateTitle(id);

                //Replace the Leave Comment button to icon
                var windowWidth = $(window).width();
                $('#narrow-leave-comment-button').html("<span class='las la-comment-alt' style='vertical-align: middle' title='Leave Comment'></span>");
                $('#narrow-leave-comment-button').attr("aria-label", "submit a public comment on this agenda item");
                    
                if (scroll == true) {
                    // scroll item into view //
                    var current = $(".AgendaItemTitleRow.hilighted");

                    if (current.length > 0) {
                        current[0].scrollIntoView();
                    }
                }

                if(selectedTab) {
                    toggleSelectedDetails(id, selectedTab);
                }
                else {
                    toggleSelectedDetails(id, 'attachments');
                }

                var attachmentCounts = $('.AgendaItemPublicCommentList >.OrderedAttachments > .OrderedAttachment > .AgendaItemAttachment' + id).length;											
                $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
            });

            function toggleSelectedDetails(ItemId, tab) {
                window.history.pushState('', '', UpdateQuery('Tab', tab));

                if (tab == 'comments') {
                    $('#selectedTabAgendaComments').css({'font-weight':'bold', 'color':'black'});
                    $('#selectedTabAgendaComments').attr({'aria-selected':'true'});
                    $('#selectedTabAgendaAttachment').css({'font-weight':'normal', 'color': '#595959'});
                    $('#selectedTabAgendaAttachment').attr({'aria-selected':'false'});
                    $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
                    $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'true'});
                    $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'normal','color': '#595959' });
                    $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'false'});

                    if ($('.OrderedAttachments').length && $('.OrderedAttachments').is(":visible")) {
                        if ($('.OrderedAttachments >.OrderedAttachment >.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').hide();
                        }
                        else {
                            $('.OrderedAttachments >.OrderedAttachment >.AgendaItemAttachment' + ItemId).hide();
                        }
                    }
                    else {
                        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').hide();
                        }
                        else {
                            $('.AgendaItemAttachment' + ItemId).hide();
                        }
                    }

                    if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
                        $('.AgendaItemPublicCommentNone').show();
                    }
                    else {
                        $('.AgendaItemPublicComment' + ItemId).show();
                    }
                    window.dispatchEvent(new Event('resize'));
                }
                else {
                    $('#selectedTabAgendaAttachment').css({'font-weight':'bold', 'color':'black'});
                    $('#selectedTabAgendaAttachment').attr({'aria-selected':'true'});
                    $('#selectedTabAgendaComments').css({'font-weight':'normal', 'color': '#595959'});
                    $('#selectedTabAgendaComments').attr({'aria-selected':'false'});
                    $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
                    $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'true'});
                    $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'normal','color': '#595959' });
                    $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'false'});

                    if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
                        $('.AgendaItemPublicCommentNone').hide();
                    }
                    else {
                        $('.AgendaItemPublicComment' + ItemId).hide();
                    }

                    if ($('.OrderedAttachments').length && $('.OrderedAttachments').is(":visible")) {
                        if ($('.OrderedAttachments>.OrderedAttachment>.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').show();
                        }
                        else {
                            $('.OrderedAttachments >.OrderedAttachment>.AgendaItemAttachment' + ItemId).show();
                        }
                    }
                    else {
                        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').show();
                        }
                        else {
                            $('.AgendaItemAttachment' + ItemId).show();
                        }
                    }
                }

                var attachmentCounts = $('.AgendaItemPublicCommentList >.OrderedAttachments > .OrderedAttachment > .AgendaItemAttachment' + ItemId).length;
                var commentCounts = $('.AgendaItemPublicCommentList > .AgendaItemPublicComment' + ItemId).length;
											
                $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
                $('#selectedTabAgendaCommentsCount').first().text(' (' + commentCounts + ')');
				
                $('#selectedTabAgendaAttachmentCount' + ItemId).first().text(' (' + attachmentCounts + ') ');
                $('#selectedTabAgendaCommentsCount' + ItemId).first().text(' (' + commentCounts + ')');
				
                var modalClass = '.Details';
                var modalContainer = document.querySelector(modalClass);
                var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [contenteditable]';
                var focusableElements = modalContainer.querySelectorAll(focusableElementsString);

                focusableElements = Array.prototype.slice.call(focusableElements);
                if (focusableElements.length > 0){
                    focusableElements[0].focus();
                }
            }

            function UpdateQuery(parameter, value) {
                var loc = window.location.search;

                if (loc.length == 0) {
                    // no query string //
                    if (value.length > 0) {
                        // add parameter directly to url //
                        return window.location.href + "?" + parameter + "=" + encodeURIComponent(value);
                    }
                }
                else {
                    var found = false;
                    if (loc[0] == '?') {
                        loc = loc.substring(1);
                    }

                    // split up existing query string //
                    var params = loc.split('&');

                    for (var i = 0; i < params.length; i++) {
                        if (params[i].toLowerCase().startsWith(parameter.toLowerCase() + '=')) {
                            found = true;

                            if (value.length > 0) {
                                // set new value //
                                params[i] = parameter + '=' + encodeURIComponent(value);
                            }
                            else {
                                // remove existing value //
                                params[i] = '';
                            }
                        }
                    }

                    if (found == false && value.length > 0) {
                        params.push(parameter + '=' + value);
                    }

                    var qs = '';
                    for (var i = 0; i < params.length; i++) {
                        if (params[i].length > 0) {
                            if (qs.length == 0) {
                                qs = "?" + params[i];
                            }
                            else {
                                qs += "&" + params[i];
                            }
                        }
                    }

                    return window.location.href.replace("?" + loc, qs);
                }

                return window.location.href;
            }

            //$(document).ready(function () {
            //    SelectItem(getParameterByName("Item"), true);
            //});
        </script>

        <style type="text/css">
            /*
                @media Screen {
                    .AgendaItemAttachmentsList {
                        // this max height is causing attachments overlap, if exist the height
                             //max-height:200px;
                    }

                    .AgendaItemAttachmentsArea {
                        overflow:hidden;
                        overflow-y:auto;
                    }
                }
                */
        </style>
    </form>

    


<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" />  

<div id="AgendaItemDetailsModal" class="modal fade">
    <div class="modal-dialog AgendaItemDetailsModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Details</h3>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
            </div>
            <div class="modal-body">
                <div>
                    <div class="inputform">
                        <label>
                            Title
                        </label>
                        <div class="ItemTitle"></div>

                        <label>
                            Description
                        </label>
                        <div class="description"></div>

                        <label>
                            Category
                        </label>
                        <div class="Category"></div>

                        <label>
                            Number
                        </label>
                        <div class="LegislationNumberLabel"></div>

                        <label>Stage</label>
                        <div class="LegislationStageLabel"></div>

                        <label>
                            Department
                        </label>
                        <div id="LegislationDepartmentLabel"></div>

                        <label style="vertical-align: top">
                            Attachments
                        </label>
                        <div style="overflow:hidden">
                            <div>
                                <span id="LegislationDocumentIcon"></span>
                                <a id="LegislationDocumentLink"></a>
                            </div>
                            <div id="LegislationSupportingDocumentsList">
                            </div>
                        </div>
                    </div>
                </div>

                <h4 style="margin-top:0.5em">History</h4>
                <div>
                    <table id="LegislationHistoryTable" class="list dataTable">
                        <thead>
                            <tr>
                                <th id="legislationhistory-index-th" class="leg-no-break tablepadding"></th>
                                <th id="legislationhistory-meetingtype-th" class="leg-no-break tablepadding">Meeting Type</th>
                                <th id="legislationhistory-meetingdate-th" class="leg-no-break tablepadding">Meeting Date</th>
                                <th id="legislationhistory-stage-th" class="leg-no-break tablepadding">Stage</th>
                                <th id="legislationhistory-status-th" class="leg-no-break tablepadding">Status</th>
                                <th id="legislationhistory-number-th" class="leg-no-break tablepadding">Number</th>
                                <th id="legislationhistory-vote-th" class="leg-no-break tablepadding">Vote</th>
                            </tr>
                        </thead>
                        <tbody class="history"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="VoteResultsModal" class="modal fade">
    <div class="modal-dialog VoteResultsModal" style="width: 60%">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Vote Result</h3>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
            </div>
            <div class="modal-body">
                <div class="Text"></div>
                <div class="Banner"></div>
                <div class="Votes"></div>
            </div>
            <div class="modal-footer">
                <div class="dataTables_wrapper" style="margin:auto">
                    <div class="dataTables_paginate paging_simple_numbers">
                        <span>
                            <a class="paginate_button current" aria-controls="table-conflicts-details-list" data-dt-idx="1" tabindex="0">1</a>
                        </span>
                    </div>
                </div> 
            </div>
        </div>
    </div>
</div>
 
<script type="text/javascript">
    function FillVoteResultsDialog(motions, index) {
        var dialog = $("#VoteResultsModal");
        var motion = motions[index];

        // paging //
        {
            var paging = dialog.find(".dataTables_paginate").empty();

            // back links //
            {
                // first link
                var firstlink = $('<a class="paginate_button first">&lt;&lt;</a>')
                    .attr("id", "VoteResultsModal-First")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to First Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", 0);

                // previous link //
                var previouslink = $('<a class="paginate_button previous" "">&lt;</a>')
                    .attr("id", "VoteResultsModal-Previous")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Previous Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", 1);


                if (index == 0) {
                    firstlink.addClass('disabled');
                    firstlink.attr("aria-disabled", "true");

                    previouslink.addClass('disabled');
                    previouslink.attr("aria-disabled", "true");
                }
                else {
                    firstlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, 0);
                        });
                    
                    previouslink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, index-1);
                        });
                }

                paging.append(firstlink);
                paging.append(previouslink);                
            }

            // pages //
            {
                var pages = $("<span>");
                for (var i=0; i<motions.length; i++) {
                    let buttonindex = i;

                    var link = $('<a class="paginate_button">')
                        .attr("aria-controls", "VoteResultsModal")
                        .attr("data-dt-idx", i+2)
                        .attr("tabindex", 0)
                        .text(i+1)
                        .click(function(e) {
                            FillVoteResultsDialog(motions, buttonindex);
                        })

                    if (i == index) {
                        link.addClass("current")
                    }

                    pages.append(link);
                }

                paging.append(pages);
            }

            // forward links //
            {
                // next link 
                var nextlink = $('<a class="paginate_button next">&gt;</a>')
                    .attr("id", "VoteResultsModal-Next")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Next Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", motions.length + 2);

                // last link
                var lastlink = $('<a class="paginate_button last">&gt;&gt;</a>')
                    .attr("id", "VoteResultsModal-Last")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Last Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", motions.length + 3);


                if (index == motions.length - 1) {
                    nextlink.addClass('disabled');
                    nextlink.attr("aria-disabled", "true");

                    lastlink.addClass('disabled');
                    lastlink.attr("aria-disabled", "true");
                }
                else {
                    nextlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, index+1);
                        });
                    
                    lastlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, motions.length-1);
                        });
                }

                paging.append(nextlink);
                paging.append(lastlink);
            }
        }


        


        // render motion //

        dialog.find(".Text").text(motion.Text);
                                        
        var banner = dialog.find(".Banner");
        banner.text(motion.BannerText);

        switch (motion.BannerColor) {
            case 'green':
                banner.css("background-color", '#21AE52');
                banner.css("color", 'white');
                break;

            case 'red':
                banner.css("background-color", 'red');
                banner.css("color", 'black');
                break;

            default:
                banner.css("background-color", '');
                banner.css("color", '');
                break;
        }


        dialog.find(".Votes").empty()

        // add votes to dialog //
        var votes = {};
        var voteorder = ["Yes", "No", "Abstain", "Absent"];

        $.each(motion.Votes, function(imv, motionvote) {
            if (!votes.hasOwnProperty(motionvote.Vote)) {
                votes[motionvote.Vote] = [];
            }

            if (voteorder.indexOf(motionvote.Vote) == -1) {
                voteorder.push(motionvote.Vote);
            }

            votes[motionvote.Vote].push(
                $("<span>").text(motionvote.UserName)
            );
        });

        $.each(voteorder, function(iv, vote) {
            var container = $("#VoteContainerTemplate").clone();

            if (votes.hasOwnProperty(vote)) {
                container.find(".VoteHeader .count").text(votes[vote].length);
                container.find(".Voters").append(...(votes[vote]));
            }

            container.find(".VoteHeader .Vote").text(vote);
            dialog.find(".Votes").append(container.children());
        });
    }

    // fix for nested motals //
    $(document).ready(function () {
        $(document).on({
            'show.bs.modal': function () {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () { $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack'); }, 0);
            },
            'hidden.bs.modal': function () {
                if ($('.modal:visible').length > 0) {
                    // restore the modal-open class to the body element, so that scrolling works
                    // properly after de-stacking a modal.
                    setTimeout(function () { $(document.body).addClass('modal-open'); }, 0);
                }
            }
        }, '.modal');
    });
</script>

<style type="text/css">
    /* flex-grid classes */
    .inputform {
	    font-size:1em;
	    display:grid;
	    grid-template-columns:0fr 1fr;
	    grid-gap:10px 10px;
	    align-items:baseline;
    }
			
    @media (max-width: 575px) {
        .inputform {
            grid-template-columns: 1fr;
            grid-gap:0px;
        }

        .inputform > label,
        .inputform > .row > label {
            margin-top:20px;
        }
    }

    .inputform > label,
    .inputform > .row > label {
	    white-space:nowrap;
	    font-size:1em;
	    font-weight:bold;
    }

    .inputform > .row {
	    display:contents;
    }
			
    .inputform > .row > div {
	    grid-column : 1 / 3;
    }
			
    .inputform > .row > label+div {
	    grid-column: 2 / 3;
    }

    .inputform label+div > div+div {
	    margin-top:4px;
    }

    /* modal styles */
    .modal-dialog.AgendaItemDetailsModal {
        max-width: 1000px;
    }

    .AgendaItemDetailsModal .modal-content {
        max-height:90vh;
        overflow:hidden;
    }

    .AgendaItemDetailsModal .modal-content .modal-body {
        overflow-y:auto;
    }

    .AgendaItemDetailsModal .description {
        max-height:10em;
        overflow-y:auto;
    }

    .VoteResultsModal .Text {
        padding: 2px 0 18px;
    }

    .VoteResultsModal .Banner {
        font-weight:bold;
        padding:5px;
        text-align: center;
    }

    .Votes .VoteHeader {
        font-weight: bold;
        text-align: center;
        padding: 10px;
    }

    .Votes .Voters {
        display: grid;
        grid-template-columns: 33% minmax(0, 34%) 33%;
        grid-gap: 10px;
        align-items: baseline;
        text-align: center;
        border: 1px solid #f7f7f7;
    }

    h3.modal-title {
        font-size:17px;
    }

    #LegislationSupportingDocumentsList > div {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    #LegislationHistoryTable td {
        cursor:pointer;
    }

    #LegislationHistoryTable tr.selected td {
        border-top: 1px solid black;
        border-bottom: 1px solid black;
    }

    #LegislationHistoryTable tr.selected > :first-child {
        border-left:1px solid black;
    }

    #LegislationHistoryTable tr.selected > :last-child {
        border-right:1px solid black;
    }
</style>

<div id="VoteContainerTemplate" style="display:none">
    <div>
        <div class="VoteHeader"><span class="Vote"></span> ( <span class="count">0</span> )</div>
        <div class="Voters"></div>
    </div>
</div>

<script type="text/javascript">
    var AgendaItemswithHistory = [];

    $("document").ready(function() {
        // add agenda item history links dynamically to the agenda //
        $.each(AgendaItemswithHistory, function(i, v) {
            // remove old icon //
            $(".AgendaItem" + v + " .AgendaItemIcons").find(".AgendaItemHistoryLink").remove();

            // add icon //
            $(".AgendaItem" + v + " .AgendaItemIcons").append(
                $('<a href="">')
                    .addClass("AgendaItemHistoryLink")
                    .attr("itemid", v)
                    .append('<i class="las la-history"></i>')
            );
        });

        $(".AgendaItemHistoryLink").click(function(e){
            e.preventDefault();

            AgendaItemHistory.Dialog.Open('8bb58320-84bf-63d9-a43e-c955acdd42a9', $(this).attr("itemid"));
        });
    });
</script>


</body>

</html>

  recorded_at: Fri, 31 Jan 2025 02:28:12 GMT
recorded_with: VCR 6.3.1
