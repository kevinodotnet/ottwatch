---
http_interactions:
- request:
    method: get
    uri: https://ottawa.ca/en/city-hall/open-transparent-and-accountable-government/public-disclosure/memoranda-issued-members-council
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
      User-Agent:
      - Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML,
        like Gecko) Chrome/139.0.0.0 Safari/537.36
      Host:
      - ottawa.ca
      Accept-Language:
      - en-US,en;q=0.9
      Cache-Control:
      - no-cache
      Sec-Fetch-Dest:
      - document
      Sec-Fetch-Mode:
      - navigate
      Sec-Fetch-Site:
      - none
      Sec-Fetch-User:
      - "?1"
      Upgrade-Insecure-Requests:
      - '1'
      Sec-Ch-Ua:
      - '"Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"'
      Sec-Ch-Ua-Mobile:
      - "?0"
      Sec-Ch-Ua-Platform:
      - '"macOS"'
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 29 Aug 2025 02:53:04 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Connection:
      - keep-alive
      Cache-Control:
      - max-age=2764800, public
      X-Drupal-Dynamic-Cache:
      - MISS
      Content-Language:
      - en
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - ALLOW-FROM https://myservice.ottawa.ca
      Expires:
      - Sun, 19 Nov 1978 05:00:00 GMT
      Vary:
      - Cookie,Accept-Encoding
      X-Generator:
      - Drupal 10 (https://www.drupal.org)
      X-Drupal-Cache:
      - MISS
      Access-Control-Allow-Origin:
      - "*"
      Last-Modified:
      - Fri, 29 Aug 2025 02:51:31 GMT
      Etag:
      - '"1756435891-gzip"'
      X-Varnish:
      - 28198357 28579112
      Age:
      - '88'
      Via:
      - 1.1 coo-prod-ottca-httpcache-kube-httpcache-5649cb78b8-gm87m (Varnish/7.6)
      Accept-Ranges:
      - bytes
      Cache-Tags:
      - HIT
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Set-Cookie:
      - incap_ses_642_243507=E71rAtc6IHnxxpMN+9foCBAWsWgAAAAAOD9sAFjknuR+2uoAraEihQ==;
        path=/; Domain=.ottawa.ca
      - nlbi_243507=N9rOYDBVJG+EuEh0aXmSIAAAAACfwxVyl4fm8Y6Xgyrj2b0U; HttpOnly; path=/;
        Domain=.ottawa.ca
      - visid_incap_243507=ch7sFnA3SeSMSRFTA3oTxhAWsWgAAAAAQUIPAAAAAAAz4HcGIrCNUvWNoEJI0/9c;
        expires=Fri, 28 Aug 2026 06:24:44 GMT; HttpOnly; path=/; Domain=.ottawa.ca
      X-Cdn:
      - Imperva
      Transfer-Encoding:
      - chunked
      X-Iinfo:
      - 12-82674852-82674854 NNNN CT(14 21 0) RT(1756435984159 27) q(0 0 0 -1) r(0
        0) U24
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 29 Aug 2025 02:53:04 GMT
recorded_with: VCR 6.3.1
