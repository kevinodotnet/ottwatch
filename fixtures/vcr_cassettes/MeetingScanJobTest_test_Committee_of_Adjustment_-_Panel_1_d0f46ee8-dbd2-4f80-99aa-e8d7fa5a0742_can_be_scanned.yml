---
http_interactions:
- request:
    method: get
    uri: https://pub-ottawa.escribemeetings.com/Meeting.aspx?Agenda=Agenda&Id=d0f46ee8-dbd2-4f80-99aa-e8d7fa5a0742&lang=English
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - pub-ottawa.escribemeetings.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Server:
      - Microsoft-IIS/10.0
      Set-Cookie:
      - ASP.NET_SessionId=l2newi1yu1z30xtk4s24nunx; path=/; HttpOnly; SameSite=Lax
      Strict-Transport-Security:
      - max-age=31536000
      Date:
      - Fri, 31 Jan 2025 02:28:17 GMT
      Content-Length:
      - '171334'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>




<html lang="en">
<head><meta charset="utf-8" /><meta http-equiv="X-UA-Compatible" content="IE=edge;chrome=1" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><title>
	Committee of Adjustment - Panel 1 - September 07, 2022
</title><script src="/bundles/modernizr?v=inCVuEFe6J4Q07A0AcRsbJic_UE5MwpRMNGcOtk94TE1"></script>
<script src="/bundles/jquery?v=8Oos0avDZyPg-cbyVzvkIfERIE1DGSe3sRQdCSYrgEQ1"></script>
<script src="/bundles/Meeting?v=vzF-9MbkbXiinMWgrvzK7C29wf8pirXICHRNY8VkMX01"></script>

        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <link href="/Content/css?v=qzDQfe_MaYWq9JDfD-bbLqBUQ47pEKk1u5XXgwMwxg01" rel="stylesheet"/>
<link rel='stylesheet' type='text/css' href='./FileStream.ashx?DocumentId=99732'><link rel="stylesheet" href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css" /><link rel="stylesheet" href="Content/Customizations.css" /><link rel="stylesheet" href="Content/Meeting.css" /><link href="Content/CalenderViewStyle-updated.css" rel="stylesheet" /><link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" type="text/css" /><link href="favicon.ico" rel="shortcut icon" type="image/x-icon" />

    <!-- This file must exist, otherwise we'll get server side error -->
    <!-- Ottawa Siteimprove Analytics --> 


<script async src="https://siteimproveanalytics.com/js/siteanalyze_876116.js"></script>

<!-- eSCRIBE Global site tag (gtag.js) - Google Analytics --> 

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-178411397-49"></script> 

<script> 

  window.dataLayer = window.dataLayer || []; 

  function gtag(){dataLayer.push(arguments);} 

  gtag('js', new Date()); 

  

  gtag('config', 'UA-178411397-49'); 

</script> 

    <style type="text/css">

        body {
            color: #000000;
        }

        a, A:link, A:visited {
            color: #0059B8;
        }

        .comment-link {
            display: inline-block;
            vertical-align: top;
        }

        .comment-link:hover {
            text-decoration: underline;
        }

        .embed-responsive {
            position: relative;
            display: block;
            width: 100%;
            padding: 0;
            overflow: hidden;
        }

            .embed-responsive::before {
                display: block;
                content: "";
            }

            .embed-responsive .embed-responsive-item, .embed-responsive iframe, .embed-responsive embed, .embed-responsive object, .embed-responsive video {
                /*position: absolute;*/
                top: 0;
                bottom: 0;
                left: 0;
                width: 100%;
                height: 100%;
                border: 0;
            }

        .embed-responsive-21by9::before {
            padding-top: 42.857143%;
        }

        .embed-responsive-16by9::before {
            padding-top: 56.25%;
        }

        .embed-responsive-4by3::before {
            padding-top: 75%;
        }

        .embed-responsive-1by1::before {
            padding-top: 100%;
        }


        html, body, form {
            height: 100%;
            overflow: hidden;
        }

        #Agendadropdownmenu.dropdown-menu {
            right: 0px;
            left: 0px;
        }

        .FontIncrease * {
            font-size: 1em;
            font-weight: bold;
            cursor: pointer;
        }

        .FontDecrease * {
            font-size: 0.85em;
            font-weight: bold;
            cursor: pointer;
        }

        .panel {
            margin-bottom: 22px;
            background-color: #fff;
            border: 1px solid transparent;
            border-radius: 4px;
            -webkit-box-shadow: 0 1px 1px rgba(0,0,0,.05);
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .panel-default {
            border-color: #ddd;
        }

        .panel-heading {
            padding: 10px 15px;
            border-bottom: 1px solid transparent;
            border-top-right-radius: 3px;
            border-top-left-radius: 3px;
        }

        .panel-default > .panel-heading {
            color: #000;
            background-color: #f5f5f5;
            border-color: #ddd;
        }

        .panel-body {
            padding: 15px;
        }

        /*ul.navbar-nav > li {
                display:inline-block;
            }

            .navbar-nav > li > a {
                padding-top:5px !important; padding-bottom:5px !important;
            }
            .navbar {
                min-height:32px !important
            }
            .navbar-toggle {
                margin-top:4px;
                margin-bottom:4px;
                padding-top:4px;
                padding-bottom:4px;
            }

            .affix { 
                right:0px;
                top:32px;
            }

            .affix-top {
                right:0px;
                position:fixed;
                top:32px;
            }*/

        .Details > div {
            padding-right: 0px !important;
            margin-right: 2%;
        }

        a.dropdown-toggle:focus {
            outline: solid 1px #FFFFFF;
        }

        #lnkPoweredBy:focus {
            outline: solid 1px #FFFFFF;
            padding: 4px;
        }

        /*@media (max-height: 760px) {
                .navbar-fixed-bottom {
                    display:none;
                }
            }
            @media (min-height: 760px) {
                body {
                    padding-bottom: 32px;
                }
            }
            
            @media (max-width: 600px) {
                 .AgendaItemContainer > .AgendaItemContainer {
                    margin-left:4em !important;
                }
            }*/

        @media (max-width: 500px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 2em !important;
            }
        }

        @media (max-width: 400px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 1em !important;
            }
        }

        @media (max-width: 300px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 0em !important;
            }
        }

        @media (min-width:768px) and (max-width:991px) {
            .AgendaItemSelectedDetails {display: none !important; }

            .visible-sm.sharing.SocialIcons {
                display: inline-block !important;
                float: none !important;
            }

            .AgendaItemTitleRow.hilighted {
                display: block !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemIcons,
            .AgendaItemTitleRow.hilighted > .AgendaItemIcons{
                display: none !important;
            }


            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle.hasPublicCommentButton {
                margin-right: 135px;
                width: auto !important;
            }
        }

        /*.AgendaItemIcons {
            width: 22% !important;
        }*/

        .visible-xs visible-sm sharing SocialIcons {
            width: 10%;
            padding-top: 5px;
            float: right;
        }

        @media (max-width: 767px) {
            .visible-xs.sharing.SocialIcons {
                display: inline-block !important;
                float: none !important;
            }

            .AgendaItemTitleRow.hilighted {
                display: block !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemIcons,
            .AgendaItemTitleRow.hilighted > .AgendaItemIcons {
                display: none !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle.hasPublicCommentButton {
                margin-right: 65px;
                width: auto !important;
            }
        }

        @media only screen and (device-width: 768px) {

            .navbar-nav .dropdown-menu {
                margin-top: -5px !important;
            }

            .dropdown, .dropleft, .dropright, .dropup {
                width: fit-content !important;
            }

            .collapse:not(.show) {
                display: block !important;
            }

            .navbar-light .navbar-toggler {
                float: right;
                border-color: #ddd !important;
                display: none !important;
            }

            .navbar-nav .dropdown-menu {
                position: absolute !important;
            }
        }

        .visible-xs.visible-sm.sharing.SocialIcons {
            /*width: 10%;
            padding-top: 5px;
            float: right;
            position: absolute;
            right: -8px;
            margin-top: -22px;*/
            position: absolute;
            right: 10px;
            margin: 0;
            position: absolute;
            top: 50%;
            -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        }

            .visible-xs.visible-sm.sharing.SocialIcons > * > span.btn.btn-primary.btn-sm {
                padding: 0px 5px 0px 5px;
            }

            .visible-xs.visible-sm.sharing.SocialIcons,
            .visible-xs.visible-sm.sharing.SocialIcons > *,
            .visible-xs.visible-sm.sharing.SocialIcons > * > span {
                font-size: 12px !important;
                font-weight: normal !important;
            }

        .SocialIcons {
            float: right;
        }


        .poweredBy, .poweredBy a {
            color: white !important;
        }

        @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation : portrait) {
            .visible-xs.visible-sm.sharing.SocialIcons
            {
                right: -8px !important;
                padding-top: 4px !important;
            }
        }

        @media screen and (device-width: 280px) and (device-height: 653px) {
            .visible-xs.visible-sm.sharing.SocialIcons
            {
                position: unset;
                right: unset;
                margin: unset;
                top: unset;
                -ms-transform: unset;
                transform: unset;
            }
            }

        .packageNav {
            position: absolute !important;
        }

    </style>
</head>
<body style="background-color: #e5e5e5">
    <form name="form1" method="post" action="./Meeting.aspx?Id=d0f46ee8-dbd2-4f80-99aa-e8d7fa5a0742&amp;Agenda=Agenda&amp;lang=English" id="form1">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="6bPsV2mN/i+usz0Ds3o/aAOTL2fJh4fmt2oVdrLg4cStGm7j2mar7KvLIPWnV8ayyXdLUZR9wHdNiFF1MEIpLROlAMWDuBJeCT8Z6tAlLqgJDjAwqdrPIWfRwkV8JKZvOGERWVlm2fKwckNfrB22MIGgi7VZhRdiXS4LuykrVqS9wPG1QbYyCH1OI1vommZ62KJsfbXzVaVAdP/lEMO2KCxMWghXnyNy4x/GYxvHzYpuOVC7NUhFxmps8zyzVcc8oUAv8fov6krw9aI/JzntReqi8cnh38FLOypEZ1SsDAVbWrecfXh0eSNHCGnNxvUnAjnkRDMOLXT/edfN7PWIB0vgOumGB3hvv62kHkZ2jUEbZNLqjmejgSirrBTzxKjJX2LB9C5USTZGrooIRATtyoe09grxXhPchL4rYR4Pnp/jp8IKu7YEH7EagF16WA7P2Pvq+VcJM3mZtQO22iePkTR0NmaTfAbqG/WDcs/F0/Y8tCjBpLW2id5AVCB80ytTF7v5nXkQH0DycFhcclueOCUVjC/5DPwHHQDeoYiCkjFD3CvvwO+JAHzyEZBLmMiESSp/mVSjT6gKsR7oL0oycNCkQlA9VBZnrDO0v3oDHLhgLkRPLjnMEnoOzfuNQoukLXdlN8KQPYes0p7ygLBb6qVQ2/HB+3o7eVxxY20nqZSmkYsVeNW1KdHpPAEs2MZJWVb1hm5VUeZNgdxNgOE4XXXPo3pTAhPoKIcFodhyGc8=" />


<script src="/bundles/MsAjaxJs?v=D6VN0fHlwFSIWjbVzi6mZyE9Ls-4LNrSSYVGRU46XF81" type="text/javascript"></script>
<script src="Scripts/bootstrap.min.js" type="text/javascript"></script>
<script src="Scripts/respond.min.js" type="text/javascript"></script>
<script src="/bundles/WebFormsJs?v=N8tymL9KraMLGAMFuPycfH3pXe6uUlRXdhtYv8A_jUU1" type="text/javascript"></script>
<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="4936DBB7" />
<input type="hidden" name="__VIEWSTATEENCRYPTED" id="__VIEWSTATEENCRYPTED" value="" />
        

        <script type="text/javascript">
            function iframeLoaded(iframeHeight) {
                var windowHeight = $(window).height();

                if (iframeHeight > windowHeight) {
                    var newHeight = (windowHeight - 185) + "px";
                    $('#bootstrapModalBody').height(newHeight);
                    $('#modalIframeDiv').height(newHeight);

                    return $('#modalIframeDiv').height() - 85;
                }
                else {
                    var newHeight = iframeHeight + "px";
                    $('#bootstrapModalBody').height(newHeight);
                    $('#modalIframeDiv').height(newHeight);
                    return "0";
                }
            }

            $(document).keydown(function(event) { 
                if (event.keyCode == 27) { 
                    closeBootstrapModal();
                    $(".CommentIcon").focus();
                }
            });

            function closeBootstrapModal() {
                $('#bootstrapModal').modal('hide').attr('aria-hidden', 'true'); 
            }

            $(window).resize(function(){
                var windowWidth = $(window).width();
                var standardHeight = $('.SelectedItemCounter').height();
                var titleHeight = $('.SelectedItemTitle').height();

                //if (Window_OnResize) {
                //    Window_OnResize();
                //}

                if(titleHeight > standardHeight) {
                    $('.panel-heading.clearfix >.sharing.SocialIcons > a.CommentIcon > span').css("margin-top", "4px");
                }

                //Replace the Leave Comment button to icon
                $('#narrow-leave-comment-button').html("<span class='las la-comment-alt' style='vertical-align: middle' title='Leave Comment'></span>");

                if(windowWidth <= 539){
                    $(".Agenda").css("padding-top", $(".affix-top").height()+5);
                } else {
                    $(".Agenda").css("padding-top", "18px");
                }
            });

            function CheckiOSDevice() {
                var userAgent = window.navigator.userAgent;
                if (userAgent.match(/iPad/i) || userAgent.match(/iPhone/i)) {
                    // iPad or iPhone
                    document.body.style.removeProperty("overflow");  
                    // console.log("checkIOSDevice called");
                }                                 
            }

            $(document).ready(
                function () {
                    var url = window.location.href;
                    if(url.indexOf("pub-ottawa") != -1 || url.indexOf("pub-support") != -1) {
                        $('.AgendaHeaderDetailsTable').find('.Label:contains("Période:")').text('Date :');
                        $('.AgendaHeaderDetailsTable').find('.Label:contains("Lieu:")').text('Endroit :');
                    }

                    $(".Details").addClass("d-sm-block");
                    $(".Details").attr("aria-live", "polite");
                    $(".panel-heading").prepend("<span class='visuallyhidden'>Agenda item details popup</span>");
                    $(".affix-top").append("<div class='collapse-stream'><i class='las la-video open-player'></i></div>");

                    $(".collapse-stream").on("click", function(i,v){
                        if($(".VideoPlayerContainer").css("display") == "none"){
                            $(".VideoPlayerContainer").show();
                            $(".la-video").addClass("open-player");
                            $(".Agenda").css("padding-top", $(".affix-top").height()+5);
                        } else {
                            $f().pause();
                            $(".la-video").removeClass("open-player");
                            $(".VideoPlayerContainer").hide();
                            $(".Agenda").css("padding-top", "18px");
                        } 
                    });
                    $('.VideoPlayer').append($('#VideoPlayerControl').detach());

                    if($(window).width() <= 539){
                        $(".Agenda").css("padding-top", $(".affix-top").height()*1.05);
                    }
                    
                    // ensure minutes show if the meeting starts or ends partially through an hour //
                    $(".Time > .Minutes").each(
                        function (index, element) {
                            if ($(element).text() != ":00") {
                                $(element).show();
                            }
                        }
                    );

                    $("[data-toggle='tooltip']").tooltip({placement:'top', boundary: 'window', trigger : 'hover'});

                    //Add/Remove public comment icons for each agenda item (real time)
                    var agendaItem = $('.AgendaItem');

                    for(var i = 0; i < agendaItem.length; i++) {
                        var className =agendaItem[i].className.match(/AgendaItem\d+/);
                        if(className) {
                            var id = className[0].replace("AgendaItem", "");
                            if(id){
                                LoadPublicCommentIcons(id);
                            }
                        }
                            
                    }                                                        
                    CheckiOSDevice();
                    var selectedTab = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Tab").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    SelectItem(getParameterByName("Item") || ((window.location.hash || "").replace(/#/g, '')), true, selectedTab);
                
                    
                    $("#package-container").on("scroll", function(){
                        if ($("#package-container").scrollTop() >= 48){
                            $(".affix-top").css("top", "5px");
                        } else {
                            $(".affix-top").css("top", "48px");
                        }
                    });

                    $("[tabindex]").filter(function() {
                        if ($(this).attr("tabindex") > 0){ $(this).attr("tabindex", "0")}
                    });
                    
                    $(".AgendaItemTitle").on("click", function() {
                        tabIndexLoop(document.querySelector(".AgendaItemSelectedDetailsContainer"));
                        var modalContainer = document.querySelector(".Details");
                        var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                        var focusableElements = modalContainer.querySelectorAll(focusableElementsString);

                        focusableElements = Array.prototype.slice.call(focusableElements);
                        if (focusableElements.length > 0){
                            focusableElements[0].focus();
                        }
                    });

                    $(".AgendaItemContainer").each(function(i,v){
                        var commentIcon = $(v).find(".AgendaItemIcons").find(".la-comment-alt");
                        if(commentIcon.length > 0){
                            commentIcon.append("<span class='sr-only'>Public Comments:</span>");
                        }
                    });


                }
                
                
            );

            
            function setVideoPlayerFocus(container) {
                return new Promise((resolve, reject) => {
                    if(container) {
                        resolve("Video Container found");
                    }
                    else{
                        reject("Video Container not found.");
                    }
                })
				.then(data => {
				    tabIndexLoopVideo(container);
				})
				.catch(error => {
				    console.log("An error occurred when setting focus on video container:", error);
				});
            }
			
            function tabIndexLoopVideo(container) {
                container.addEventListener("keydown", trapTabKey);
                function trapTabKey(e) {
                    if (e.keyCode === 9) {
                        if (e.shiftKey) {
                            $('.hilighted .AgendaItemTitle a').focus();
                            $('.hilighted a.SelectableItem').focus();
                        }
                        else {
                            tabIndexLoop(document.querySelector(".AgendaItemSelectedDetailsContainer"));
                        }						
                    }
                }
                var player = $('.fp-play');
                if(player) {
                    player.attr('tabindex', 0);
                    player.focus();
                }
            }
                                                
            function SelectItem(id, scroll, tab) {
                if(tab === undefined) {
                    tab = 'attachments'
                }

                //The function under eScribe.Agenda only take two parameter. In order to make the icon link works, I have to do a work around for this (reuse the scroll parameter).
                //This should not affect the original functionality of the scroll.
                if(scroll == 'attachments' || scroll == 'comments') {
                    tab = scroll;
                    scroll = false;
                }

                // update url //
                window.history.pushState('', '', UpdateQuery("Item", id.toString()));                    
                window.history.pushState('', '', UpdateQuery("Tab", tab));

                var videoContainer = document.querySelector(".VideoPlayerContainer");
                setVideoPlayerFocus(videoContainer);

                //Update the Citizen Comment using ajax.
                LoadPublicComment(id, scroll);

                if(document.readyState === 'complete' ) {
                    LoadPublicCommentIcons(id);
                }

                //// trigger event //
                //$(document).trigger("item:selected", [id, scroll]);
            }

            function LoadPublicComment(id, scroll) {
                if(id) {
                    var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var language = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("lang").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var tabindex = $('#AgendaItemAgendaItem' + id + 'TitleHeader > .AgendaItemNavigate > .AgendaItemTitle > A').attr("tabindex");

                    $.ajax({
                        type: "POST",
                        url: "Meeting.aspx/GeneratePublicComment",
                        data: "{id: '" + id + "', meetingId: '" + meetingId + "', lang: '" + language + "', tabindex: '" + tabindex + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {

                            var items = document.getElementsByClassName('AgendaItemPublicComment' + id);
                            for(var i = items.length - 1; i >= 0 ; i--){
                                var child = items[i];
                                child.parentNode.removeChild(child);
                            }
                            $(msg.d).appendTo(".AgendaItemPublicCommentList");

                            if($('.AgendaItemPublicCommentListIndent' + id).children('.AgendaItemPublicCommentHeader').length == 0) {
                                $('<div class="AgendaItemAttachment AgendaItemPublicCommentHeader" style="display: block;"></div>').appendTo(".AgendaItemPublicCommentListIndent" + id);
                            }
                            $(msg.d).appendTo(".AgendaItemPublicCommentListIndent" + id);

                            // trigger event //
                            $(document).trigger("item:selected", [id, scroll]);
                                
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }
            }

            function LoadPublicCommentIcons(id) {
                if(id) {
                    var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var agendaItem = $('#AgendaItemAgendaItem' + id +'TitleHeader ' + '> .AgendaItemNavigate > ' + '.AgendaItemIcons');
                    if(agendaItem.length == 0) {
                        agendaItem = $('#AgendaItemAgendaItem' + id +'TitleHeader ').parent().find(".AgendaItemIcons");
                    }

                    var isExist = agendaItem.children('.las.la-comment-alt').length;
                    
                    $.ajax({
                        type: "POST",
                        url: "Meeting.aspx/GeneratePublicCommentIcon",
                        data: "{id: '" + id + "', meetingId: '" + meetingId + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {

                            if(msg.d) {
                                if(isExist == 0) {
                                    $(msg.d).appendTo(agendaItem);
                                }
                            }
                            else {
                                if(isExist > 0){
                                    agendaItem.children('.las.la-comment-alt').remove();
                                }
                            }

                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }
            }
                                                
            function UpdateQuery(parameter, value) {
                var loc = window.location.search;

                if (loc.length == 0) {
                    // no query string //
                    if (value.length > 0) {
                        // add parameter directly to url //
                        return window.location.href + "?" + parameter + "=" + encodeURIComponent(value);
                    }
                }
                else {
                    var found = false;
                    if (loc[0] == '?') {
                        loc = loc.substring(1);
                    }
                    var params = loc.split('&');

                    for (var i = 0; i < params.length; i++) {
                        if (params[i].toLowerCase().startsWith(parameter.toLowerCase() + '=')) {
                            found = true;

                            if (value.length > 0) {
                                // set new value //
                                params[i] = parameter + '=' + encodeURIComponent(value);
                            }
                            else {
                                // remove existing value //
                                params[i] = '';
                            }
                        }
                    }
                    if (found == false && value.length > 0) {
                        params.push(parameter + '=' + value);
                    }

                    var qs = '';
                    for (var i = 0; i < params.length; i++) {
                        if (params[i].length > 0) {
                            if (qs.length == 0) {
                                qs = "?" + params[i];
                            }
                            else {
                                qs += "&" + params[i];
                            }
                        }
                    }

                    return window.location.href.replace("?" + loc, qs);
                }
                return window.location.href;
            }

            function tabIndexLoop(modalContainer) {
                modalContainer.addEventListener("keydown", trapTabKey);

                var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                var focusableElements = modalContainer.querySelectorAll(focusableElementsString);
                focusableElements = Array.prototype.slice.call(focusableElements);
                focusableElements = focusableElements.filter(element => $(element).is(':visible'));
				
                var videoContainer = document.querySelector(".VideoPlayerContainer");
				
                var firstTabStop = focusableElements[0];
                var lastTabStop = focusableElements[focusableElements.length - 1];
                if(firstTabStop){
                    if (videoContainer) {
                        var player = $('.fp-play');
                        if(player) {
                            player.focus();
                        }
                    }
                    else {
                        firstTabStop.focus();
                    }
                }
                else {
                    $('.hilighted .AgendaItemTitle a').focus();
                    $('.hilighted a.SelectableItem').focus();
                }

                function trapTabKey(e) {
                    var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                    var focusableElements = modalContainer.querySelectorAll(focusableElementsString);
                    focusableElements = Array.prototype.slice.call(focusableElements);
                    focusableElements = focusableElements.filter(element => $(element).is(':visible'));
					
                    var firstTabStop = focusableElements[0];
                    var lastTabStop = focusableElements[focusableElements.length - 1];
                    if (e.keyCode === 9) {
                        if (e.shiftKey) {
                            if (document.activeElement === firstTabStop) {
                                e.preventDefault();
                                var videoContainer = document.querySelector(".VideoPlayerContainer");
                                if (videoContainer) {
                                    videoContainer.addEventListener("keydown", trapTabKey);
                                    var player = $('.fp-play');
                                    if(player) {
                                        player.focus();
                                    }
                                }
                                else {
                                    $('.hilighted .AgendaItemTitle a').focus();
                                    $('.hilighted a.SelectableItem').focus();
                                }
                            }
                        } 
                        else {
                            if (document.activeElement === lastTabStop) {
                                e.preventDefault();
                                $('.hilighted .AgendaItemTitle a').focus();
                                $('.hilighted a.SelectableItem').focus();
                            }
                        }
                    }
                }
            }
        </script>

        

<script type='text/javascript'>
    $(document).ready(
        function () {
            $('.Details').addClass('hidden-xs').addClass('hidden-sm');
            $('.VideoPlayerContainer').detach();

            $(window).on('resize', Window_OnResize);
        }
    );

    function Video_LoadBookmark() { }

    function Window_OnResize() {
        setTimeout(
            function () {
                try {
                    var maxheight = 0;
                    if ($(".navbar-fixed-bottom").is(":visible")) {
                        maxheight = $(window).height() - $(".navbar-nav").height() - $(".navbar-fixed-bottom").height();
                    }
                    else {
                        maxheight = $(window).height() - $(".navbar-nav").height();
                    }

                    $(".AgendaItemAttachmentsArea").css("max-height", "");

                    if (detailsheight() > maxheight) {
                        //need to substract the panel heading height (dynamic depending on user input) and also need to substract 55 for other static components (space between panel elements)
                        var contentMaxHeight = maxheight - $('.AgendaItemSelectedDetails > div.panel-heading').height() - 55;
                        $(".AgendaItemAttachmentsArea").css("max-height", contentMaxHeight + "px");

                        //This will never run ... not sure why it is here
                        if (detailsheight() <= maxheight) {
                            $(".AgendaItemAttachmentsArea").css("max-height", ($(".AgendaItemAttachmentsArea").height() - (detailsheight() - maxheight)) + "px");
                        }
                    }
                }
                catch (e) {
                }
            },
            1
        );
    }
</script>

        <div id="package-container" style="overflow: auto; height: 100%">
            <nav class="navbar navbar-expand-lg navbar-light navbar-fixed-top navbarbg" role="navigation">
                <div class="container">
                        <ul class="nav navbar-nav narbar-left">
                            <li class="nav-item dropdown">
                                <a href="#" id="navbarDropdown" class="nav-link dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color: white" tabindex="1">
                                    Agenda
                                </a>
                                <span class="caret"></span>
                                <ul class="dropdown-menu packageNav" role="menu" id="Agendadropdownmenu" aria-labelledby="navbarDropdown">
                                    
                                            
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=d0f46ee8-dbd2-4f80-99aa-e8d7fa5a0742&Agenda=Agenda&lang=English' tabindex='1' lang='en'>
                                                    Agenda
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=d0f46ee8-dbd2-4f80-99aa-e8d7fa5a0742&Agenda=Agenda&lang=French' tabindex='1' lang='fr'>
                                                    Ordre du jour
                                                </a>
                                            </li>
                                        
                                        
                                    <li class='d-none'>
                                        <a class="VideoLink dropdown-item" href='' title='Open Video in new Window' target="_blank" tabindex="6">
                                            <span class="HiddenAnchorDescription">
                                                Open Video in new Window</span>
                                            Video
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                </div>
            </nav>

            <main class="container body-content" style="background-color: #ffffff">
                <ARTICLE class='Meeting row' ><SECTION class='Agenda col-xs-12 col-sm-12 col-md-8 col-lg-8' ><DIV style="padding:1em; width:auto;" ><HEADER class='AgendaHeader' style="padding:0px 4px" ><DIV class='AgendaHeaderLogo' ><img  src='filestream.ashx?DocumentId=99730' alt='Ottawa Logo'  /></DIV><H1 Id='AgendaHeaderTitle' class='AgendaHeaderTitle' >Committee of Adjustment<br/><br/>Panel 1<br/></H1><DIV class='AgendaHeaderDetails' ><DIV class='AgendaHeaderDetailsTable' ><DIV class='AgendaMeetingNumber' ><DIV class='Value AgendaMeetingNumberText' ></DIV></DIV><DIV class='AgendaTimeContainer' ><TR ><DIV class='Label' ></DIV><TD class='Value' colspan='0' headers='' ><DIV class='AgendaMeetingTime Value' ><TIME datetime='2022-09-07' ><SPAN class='Date' ><SPAN class='DayOfWeek' >Wednesday, </SPAN>September 07, 2022<SPAN class='DayOfWeek' ></SPAN></SPAN></TIME></DIV></TD></TR></DIV><DIV class='AgendaTimeContainer' ><DIV ><DIV class='AgendaMeetingTime Value' ><SPAN class='AgendaMeetingTimeStart' ><TIME datetime='13:00' ><SPAN class='Time' > 1<SPAN class='Minutes' >:00</SPAN><SPAN class='Meridian' > P</SPAN><SPAN class='Meridian Period' >.</SPAN><SPAN class='Meridian' >m</SPAN><SPAN class='Meridian Period' >.</SPAN></SPAN></TIME></SPAN><SPAN class='AgendaMeetingTimeEnd' > - <TIME datetime='14:00' ><SPAN class='Time' > 2<SPAN class='Minutes' >:00</SPAN><SPAN class='Meridian' > P</SPAN><SPAN class='Meridian Period' >.</SPAN><SPAN class='Meridian' >m</SPAN><SPAN class='Meridian Period' >.</SPAN></SPAN></TIME></SPAN></DIV></DIV></DIV><DIV class='AgendaMeetingLocation' ><DIV class='Value LocationValue' ><DIV class='Location' >Electronic Participation</DIV><DIV class='Address1' ></DIV><DIV class='Address2' ></DIV><DIV class='Address3' ></DIV></DIV></DIV><DIV ><DIV ><DIV style="height:5px" ></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaHeaderSpecialComments' ><p style="text-align&#58;center;"><strong><span>This hearing will be held through electronic participation in accordance with the&#160;<em>Statutory Powers Procedure Act</em>.&#160;To help stop the spread of COVID-19, the Committee of Adjustment will continue to hold online hearings until further notice.</span></strong></p>
<p style="text-align&#58;center;"><strong>The hearing can be viewed on the Committee of Adjustment </strong><span><a href="https&#58;//www.youtube.com/channel/UCZ9Z3-VJcSMSqrWRORMlRjQ"><strong>YouTube</strong></a></span><strong> page. For more information, visit </strong><span><a href="https&#58;//ottawa.ca/en/planning-development-and-construction/committee-adjustment"><strong>Ottawa.ca/CommitteeofAdjustment</strong></a><strong><em> </em></strong></span></p>
<p style="text-align&#58;center;"><em>Simultaneous interpretation in both official languages, accessible formats and communication supports are available for any specific agenda item by calling the Committee information number at least 72 hours in advance of the hearing.</em></p>
<p style="text-align&#58;left;"><span style="text-decoration&#58;underline;"><strong>Panel Members&#58;</strong></span></p>
<p style="text-align&#58;left;"><strong><span>Chair&#58;&#160; John Blatherwick</span></strong></p>
<p style="text-align&#58;left;"><strong><span>Members&#58;&#160; Bonnie Oakes Charron, Heather MacLean, Stan Wilder, Michael Wildman</span></strong></p></DIV><DIV style="float:none;clear:both" ></DIV><HR class='AgendaHeaderSeparator' /></HEADER><DIV class='AgendaItems' ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem1' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem1TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(1);" >CALL TO ORDER</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem2' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem2TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(2);" >OPENING REMARKS</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem3' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem3TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(3);" >DECLARATIONS OF INTEREST</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem4' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem4TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(4);" >CONFIRMATION OF MINUTES</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p><span class="NormalTextRun SCXW96173948 BCX0">The minutes of August 3 and August 17, 202</span><span class="NormalTextRun SCXW96173948 BCX0">2</span><span class="NormalTextRun SCXW96173948 BCX0"> were adopted.</span></p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem5' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem5TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(5);" >ADJOURNMENTS</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem37' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem37TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >1.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(37);" >D08-01-22/B-00222 &amp; B-00251, 19A &amp; 19B Garland (Ward 15- Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned&#160;Sine Die.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem38' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem38TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >2.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(38);" >D08-02-22/A-00207, 19A &amp; 19B Garland (Ward 15- Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned Sine Die.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem39' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem39TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >3.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(39);" >D08-01-22/B-00205 &amp; B-00206, 674 de l'Eglise (Ward 13 - Rideau-Rockcliffe)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned to September 21, 2022.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem40' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem40TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >4.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(40);" >D08-02-22/A-00187 & A-00188, 674 de L'Eglise (Ward 13 - Rideau-Rockcliffe)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned to September 21, 2022.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem41' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem41TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(41);" >D08-01-22/B-00247, 424 Avondale (Ward 15 - Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned to September 21, 2022.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem42' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem42TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >6.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(42);" >D08-02-22/A-00237 - A-00238, 424 Avondale (Ward 15 - Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned to September 21, 2022.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem43' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem43TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >7.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(43);" >D08-02-22/A-00231, 480 MacLaren (Ward 14 - Somerset)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned to September 21, 2022.</p></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem22' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem22TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(22);" >HEARING OF APPLICATIONS</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>T<span class="TextRun SCXW9169389 BCX0" data-contrast="auto"><span class="NormalTextRun SCXW9169389 BCX0">he following applications were heard.</span></span></p></DIV></DIV></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem28' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem28TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >1.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(28);" >D08-01-22/B-00222 & B-00251, 19A & 19B Garland (Ward 15- Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(28, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99726" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Notice B(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Notice B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99727" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Avis B(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Avis B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99728" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19A  19B Garland Circulation(1).pdf' target='_blank' ><SPAN class='Link' >19A  19B Garland Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99729" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a  19b Garland- draft plan(1).pdf' target='_blank' ><SPAN class='Link' >19a  19b Garland- draft plan(1).pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Sandra Didiomete)</p><br><p>To subdivide the property into two parcels for the existing long semi-detached dwelling, with a reduced parking space length for both units.</p><br><p>(Agent&#58; A. Paquette)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem27' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem27TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >2.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(27);" >D08-02-22/A-00207, 19A & 19B Garland (Ward 15- Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(27, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99679" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Notice A(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99680" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Avis A(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99681" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19A  19B Garland Circulation A.pdf' target='_blank' ><SPAN class='Link' >19A  19B Garland Circulation A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99682" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Site Plan A.pdf' target='_blank' ><SPAN class='Link' >19a 19b Site Plan A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99683" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a  19b Garland- elevations(1).pdf' target='_blank' ><SPAN class='Link' >19a  19b Garland- elevations(1).pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Sandra Didiomete)</p><br><p>To subdivide the property into two parcels for the existing long semi-detached dwelling, with a reduced parking space length for both units.</p><br><p>(Agent&#58; A. Paquette)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem29' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem29TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >3.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(29);" >D08-02-22/A-00224 & A-00225, 574 Edison (Ward 15- Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(29, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99684" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Notice A(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99685" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Avis A(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99686" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Circulation(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99687" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Site Plan(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Site Plan(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99688" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison - Elevations(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison - Elevations(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99689" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00224, A-00225 574 Edison Avenue (Ward 15) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00224, A-00225 574 Edison Avenue (Ward 15) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99690" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00224, A-00225 574 Edison Avenue (Ward 15) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00224, A-00225 574 Edison Avenue (Ward 15) Decision_fr.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(11625195 Canada Inc.)</p><br><p>To permit a reduced interior side yard setback for the construction of semi-detached dwelling with secondary dwelling units.</p><br><p>(Agent&#58; R. Hill)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem30' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem30TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >4.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(30);" >D08-02-22/A-00230, 12 West Presland (Ward 13 - Rideau-Rockcliffe)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(30, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99691" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland Notice A(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99692" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland Avis A(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99693" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland Circulation(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99694" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland - Drawings(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland - Drawings(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99695" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00230 12 West Presland Road (Ward 13) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00230 12 West Presland Road (Ward 13) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99696" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00230 12 West Presland Road (Ward 13) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00230 12 West Presland Road (Ward 13) Decision_fr.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Tammy Paul)</p><br><p>To permit an increased footprint for a new coach house.</p><br><p>(Agent&#58; A. Bisson)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem35' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem35TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(35);" >D08-01-22/B-00205 & B-00206, 674 de l'Eglise (Ward 13 - Rideau-Rockcliffe)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(35, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99716" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674, 676 de L'eglise Notice B(1).pdf' target='_blank' ><SPAN class='Link' >674, 676 de L'eglise Notice B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99717" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674, 676 de L'eglise Avis B(1).pdf' target='_blank' ><SPAN class='Link' >674, 676 de L'eglise Avis B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99718" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 rue d'eglise Circulation(2).pdf' target='_blank' ><SPAN class='Link' >674 rue d'eglise Circulation(2).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99719" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise RPLAN(1).pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise RPLAN(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99720" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise Site Plan.pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise Site Plan.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Mehrzad Ziai, Mehran Frohar, Ninava Ltd. &amp; Henga Ottawa Realty Inc.)</p><br><p>To subdivide the property into two separate parcels for two new three-unit dwellings with reduced lot areas and lot widths.</p><br><p>(Agent&#58;&#160; P. Robinson)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem36' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem36TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >6.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(36);" >D08-02-22/A-00187 & A-00188, 674 de L'Eglise (Ward 13 - Rideau-Rockcliffe)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(36, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99721" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 676 de L'eglise Notice A(1).pdf' target='_blank' ><SPAN class='Link' >674 676 de L'eglise Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99722" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 676 de L'eglise Avis A(1).pdf' target='_blank' ><SPAN class='Link' >674 676 de L'eglise Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99723" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 rue d'eglise Circulation(3).pdf' target='_blank' ><SPAN class='Link' >674 rue d'eglise Circulation(3).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99724" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise Site Plan(1).pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise Site Plan(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99725" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise Elevations(1).pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise Elevations(1).pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Mehrzad Ziai, Mehran Frohar, Ninava Ltd. &amp; Henga Ottawa Realty Inc.)</p><br><p>To subdivide the property into two separate parcels for two new three-unit dwellings with reduced lot areas and lot widths.</p><br><p>(Agent&#58;&#160; P. Robinson)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem25' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem25TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >7.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(25);" >D08-01-22/B-00247, 424 Avondale (Ward 15 - Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(25, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99701" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Notice B.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Notice B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99702" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Avis B.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Avis B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99703" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Circulation.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99704" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale - Plans.pdf' target='_blank' ><SPAN class='Link' >424 Avondale - Plans.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Sherbrooke Urban Developments Ltd.)</p><br><p>To subdivide the property in two for two new dwellings with front-facing garages, reduced lot widths and interior side yards and increased building height.</p><br><p>(Agent&#58; J. D'Aoust)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem26' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem26TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >8.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(26);" >D08-02-22/A-00237 - B-00238, 424 Avondale (Ward 15 - Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(26, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99705" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Notice A.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Notice A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99706" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Avis A.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Avis A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99707" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Circulation(1).pdf' target='_blank' ><SPAN class='Link' >424 Avondale Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99708" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale - Plans(1).pdf' target='_blank' ><SPAN class='Link' >424 Avondale - Plans(1).pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Sherbrooke Urban Developments Ltd.)</p><br><p>To subdivide the property in two for two new dwellings with front-facing garages, reduced lot widths and interior side yards and increased building height.</p><br><p>(Agent&#58; J. D'Aoust)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem23' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem23TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >9.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(23);" >D08-01-22/B-00231 & B-00232, 208-210 Cowley (Ward 15 - Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(23, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99666" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='208-210  Cowley Notice B.pdf' target='_blank' ><SPAN class='Link' >208-210  Cowley Notice B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99667" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='208-210  Cowley Avis B.pdf' target='_blank' ><SPAN class='Link' >208-210  Cowley Avis B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99668" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='208-210 Cowley Circulation.pdf' target='_blank' ><SPAN class='Link' >208-210 Cowley Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99669" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='210 Cowley Avenue_Pt Lt 17 RP 219 (West Cowley Avenue)_Rplan_D1_to planner July 12-22.pdf' target='_blank' ><SPAN class='Link' >210 Cowley Avenue_Pt Lt 17 RP 219 (West Cowley Avenue)_Rplan_D1_to planner July 12-22.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99670" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='210 Cowley Background (2020 Documents)info.pdf' target='_blank' ><SPAN class='Link' >210 Cowley Background (2020 Documents)info.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99671" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision.pdf' target='_blank' ><SPAN class='Link' >B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99672" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision_fr.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p style="text-align&#58;left;">(Ever Home Construction Inc)</p>
<p style="text-align&#58;left;">To subdivide the property into two separate parcels with one half of the semi-detached dwelling on each parcel.</p>
<p style="text-align&#58;left;">(Agent&#58; P. Robinson)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem31' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem31TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >10.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(31);" >D08-02-22/A-00231, 480 MacLaren (Ward 14 - Somerset)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(31, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99697" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren Notice A(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99698" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren Avis A(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99699" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren Circulation(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99700" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren - Site Plan(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren - Site Plan(1).pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(1576237 Ontario Inc.)</p><br><p>To permit two additional rooms in a 16-room rooming unit.</p><br><p>(Agent&#58; M. Imeson)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem32' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem32TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >11.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(32);" >D08-02-22/A-00243, 38 Adelaide (Ward 17 - Capital)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(32, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99709" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide Notice A.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide Notice A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99710" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide Avis A.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide Avis A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99711" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide Circulation.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99712" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide - Plans.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide - Plans.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99713" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide - Survey.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide - Survey.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99714" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00243 38 Adelaide Street (Ward 17) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00243 38 Adelaide Street (Ward 17) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99715" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00243 38 Adelaide Street (Ward 17) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00243 38 Adelaide Street (Ward 17) Decision_fr.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(C&amp;E Renos Inc.)</p><br><p>To permit a reduced lot width for a new detached dwelling with a secondary dwelling unit.</p><br><p>(Agent&#58; B. Li)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem24' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem24TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >12.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(24);" >D08-02-22/A-00029, 121 Evelyn (Ward 17 - Capital)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(24, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99673" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn Notice A(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99674" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn Avis A(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99675" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn Circulation(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99676" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn - Plans - June 8, 2022(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn - Plans - June 8, 2022(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99677" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00029 121 Evelyn Avenue (Ward 17) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00029 121 Evelyn Avenue (Ward 17) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99678" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00029 121 Evelyn Avenue (Ward 17) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00029 121 Evelyn Avenue (Ward 17) Decision_fr.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p><em>Adjourned from April 6, 2022</em></p><br><p>(Jeffrey Gordon &amp; Anne-Raphaelle Audoin)</p><br><p>To permit reduced corner and interior side yard setbacks, an increase in garage projection and increase in driveway width for the renovations of the existing single-family dwelling.</p><br><p>(Agent&#58; J. Hamel)</p></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem7' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem7TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(7);" >OTHER BUSINESS</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>None.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem8' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem8TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(8);" >ADJOURNMENT</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>3&#58;23 p.m.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem9' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem9TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(9);" >Annex A - Public Participation Details</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p style="font-weight&#58;400;"><strong>Remote Participation – Committee Members, Staff and General Public</strong></p>
<p style="font-weight&#58;400;">City facilities are temporarily closed to help stop the spread of COVID-19. Although in-person Committee of Adjustment hearings have been postponed until further notice, there are several ways in which the general public can participate in this electronic hearing.</p>
<p style="font-weight&#58;400;">The chosen technology for this hearing is Zoom (https&#58;//zoom.us/) which allows for participation by computers and mobile devices. To reduce the number of participants in the electronic hearing and to allow for a more efficient process, the general public will be asked to participate by viewing the webcast via the Committee of Adjustment YouTube channel at<span>&#160;</span><a href="https&#58;//www.youtube.com/channel/UCZ9Z3-VJcSMSqrWRORMlRjQ">https&#58;//www.youtube.com/channel/UCZ9Z3-VJcSMSqrWRORMlRjQ</a>. You can also contact<span>&#160;</span><a href="http&#58;//cmap185/SIRE/cache/cofa%40ottawa.ca"><strong>cofa@ottawa.ca</strong></a><span>&#160;</span>to obtain the link.</p>
<p style="font-weight&#58;400;"><strong>Submit comments in writing</strong>&#58; submit comments in writing, by email, to&#160;<a href="http&#58;//cmap185/SIRE/cache/cofa%40ottawa.ca"><strong>cofa@ottawa.ca</strong></a>. Comments received&#160;<strong>by noon (12 p.m.) the Monday before the hearing</strong>&#160;will be provided to Committee Members prior to the hearing. Comments received after this time will be forwarded to Committee Members as soon as possible but may not be received by Committee Members prior to the hearing.</p>
<p style="font-weight&#58;400;"><strong>Submit verbal comments in advance of the hearing (Prior to noon (12 p.m.) the Monday before the hearing)</strong>&#160;you may call the Coordinator to have comments transcribed (contact details below).</p>
<p style="font-weight&#58;400;"><strong>Register to Speak at the Committee Hearing prior to 4 p.m. the Monday before the hearing</strong>, by phone or e-mail by contacting the Coordinator (contact details below). Details for those wishing to make visual presentations to the Committee can be provided to you upon request, by email.</p>
<p style="font-weight&#58;400;">Upon receipt of your registration to speak at the hearing, delegates will be provided the Zoom hearing details and password prior to the hearing.</p>
<p style="font-weight&#58;400;">For more information, please contact the Coordinator by e-mail at&#160;<a href="http&#58;//cmap185/SIRE/cache/cofa%40ottawa.ca%C2%A0"><strong>cofa@ottawa.ca</strong>&#160;</a>or (613) 580-2436.</p></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION><SECTION class='Details col-xs-3 col-sm-3 col-md-4 col-lg-4 col-xs-offset-9 col-sm-offset-9' ><DIV class='affix affix-top col-xs-3 col-sm-3 col-md-4 col-lg-4 col-xs-offset-9 col-sm-offset-9 d-sm-block' style="width:inherit; padding-right:5%;" ><DIV class='panel panel-default' style="width:auto;box-shadow:3px 3px 3px rgba(0,0,0,.33);" ><DIV class='VideoPlayerContainer panel panel-default' ><DIV class='VideoPlayer' ></DIV></DIV><DIV class='visible-md visible-lg AgendaItemSelectedDetailsContainer' ><DIV class='panel-body AgendaItemAttachment AgendaItemAttachmentNotSelected' >No Item Selected</DIV><DIV class='panel panel-default AgendaItemSelectedDetails' style="display:none" ><DIV class='panel-heading' ><SPAN class='SelectedItemCounter' ></SPAN> &nbsp; <SPAN class='SelectedItemTitle' ></SPAN></DIV><DIV class='panel-body' ><DIV class='AgendaItemAttachmentsArea' ><DIV class='AgendaItemAttachmentsList' ><DIV class='AgendaItemAttachment AgendaItemAttachmentNone' >This item has no attachments</DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99666" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='208-210  Cowley Notice B.pdf' target='_blank' ><SPAN class='Link' >208-210  Cowley Notice B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99667" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='208-210  Cowley Avis B.pdf' target='_blank' ><SPAN class='Link' >208-210  Cowley Avis B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99668" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='208-210 Cowley Circulation.pdf' target='_blank' ><SPAN class='Link' >208-210 Cowley Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99669" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='210 Cowley Avenue_Pt Lt 17 RP 219 (West Cowley Avenue)_Rplan_D1_to planner July 12-22.pdf' target='_blank' ><SPAN class='Link' >210 Cowley Avenue_Pt Lt 17 RP 219 (West Cowley Avenue)_Rplan_D1_to planner July 12-22.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99670" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='210 Cowley Background (2020 Documents)info.pdf' target='_blank' ><SPAN class='Link' >210 Cowley Background (2020 Documents)info.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99671" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision.pdf' target='_blank' ><SPAN class='Link' >B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99672" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision_fr.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99673" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn Notice A(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99674" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn Avis A(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99675" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn Circulation(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99676" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn - Plans - June 8, 2022(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn - Plans - June 8, 2022(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99677" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00029 121 Evelyn Avenue (Ward 17) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00029 121 Evelyn Avenue (Ward 17) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99678" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00029 121 Evelyn Avenue (Ward 17) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00029 121 Evelyn Avenue (Ward 17) Decision_fr.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99679" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Notice A(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99680" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Avis A(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99681" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19A  19B Garland Circulation A.pdf' target='_blank' ><SPAN class='Link' >19A  19B Garland Circulation A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99682" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Site Plan A.pdf' target='_blank' ><SPAN class='Link' >19a 19b Site Plan A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99683" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a  19b Garland- elevations(1).pdf' target='_blank' ><SPAN class='Link' >19a  19b Garland- elevations(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99684" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Notice A(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99685" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Avis A(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99686" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Circulation(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99687" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Site Plan(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Site Plan(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99688" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison - Elevations(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison - Elevations(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99689" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00224, A-00225 574 Edison Avenue (Ward 15) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00224, A-00225 574 Edison Avenue (Ward 15) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99690" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00224, A-00225 574 Edison Avenue (Ward 15) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00224, A-00225 574 Edison Avenue (Ward 15) Decision_fr.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99691" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland Notice A(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99692" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland Avis A(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99693" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland Circulation(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99694" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland - Drawings(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland - Drawings(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99695" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00230 12 West Presland Road (Ward 13) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00230 12 West Presland Road (Ward 13) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99696" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00230 12 West Presland Road (Ward 13) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00230 12 West Presland Road (Ward 13) Decision_fr.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99697" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren Notice A(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99698" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren Avis A(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99699" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren Circulation(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99700" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren - Site Plan(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren - Site Plan(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99701" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Notice B.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Notice B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99702" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Avis B.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Avis B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99703" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Circulation.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99704" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale - Plans.pdf' target='_blank' ><SPAN class='Link' >424 Avondale - Plans.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99705" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Notice A.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Notice A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99706" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Avis A.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Avis A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99707" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Circulation(1).pdf' target='_blank' ><SPAN class='Link' >424 Avondale Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99708" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale - Plans(1).pdf' target='_blank' ><SPAN class='Link' >424 Avondale - Plans(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99709" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide Notice A.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide Notice A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99710" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide Avis A.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide Avis A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99711" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide Circulation.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99712" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide - Plans.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide - Plans.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99713" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide - Survey.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide - Survey.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99714" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00243 38 Adelaide Street (Ward 17) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00243 38 Adelaide Street (Ward 17) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99715" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00243 38 Adelaide Street (Ward 17) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00243 38 Adelaide Street (Ward 17) Decision_fr.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99716" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674, 676 de L'eglise Notice B(1).pdf' target='_blank' ><SPAN class='Link' >674, 676 de L'eglise Notice B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99717" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674, 676 de L'eglise Avis B(1).pdf' target='_blank' ><SPAN class='Link' >674, 676 de L'eglise Avis B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99718" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 rue d'eglise Circulation(2).pdf' target='_blank' ><SPAN class='Link' >674 rue d'eglise Circulation(2).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99719" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise RPLAN(1).pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise RPLAN(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99720" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise Site Plan.pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise Site Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99721" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 676 de L'eglise Notice A(1).pdf' target='_blank' ><SPAN class='Link' >674 676 de L'eglise Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99722" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 676 de L'eglise Avis A(1).pdf' target='_blank' ><SPAN class='Link' >674 676 de L'eglise Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99723" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 rue d'eglise Circulation(3).pdf' target='_blank' ><SPAN class='Link' >674 rue d'eglise Circulation(3).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99724" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise Site Plan(1).pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise Site Plan(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99725" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise Elevations(1).pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise Elevations(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99726" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Notice B(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Notice B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99727" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Avis B(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Avis B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99728" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19A  19B Garland Circulation(1).pdf' target='_blank' ><SPAN class='Link' >19A  19B Garland Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99729" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a  19b Garland- draft plan(1).pdf' target='_blank' ><SPAN class='Link' >19a  19b Garland- draft plan(1).pdf</SPAN></a></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION></ARTICLE><script type='text/javascript'>
function toggleSelectedDetails(ItemId, tab) {
    window.history.pushState('', '', UpdateQuery('Tab', tab));

    if (tab == 'comments') {
        $('#selectedTabAgendaComments').css({'font-weight':'bold', 'color':'black'});
        $('#selectedTabAgendaComments').attr({'aria-selected':'true'});
        $('#selectedTabAgendaAttachment').css({'font-weight':'normal', 'color': '#595959'});
        $('#selectedTabAgendaAttachment').attr({'aria-selected':'false'});
        $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
        $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'true'});
        $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'normal','color': '#595959' });
        $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'false'});

        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
            $('.AgendaItemAttachmentNone').hide();
        }
        else {
            $('.AgendaItemAttachment' + ItemId).hide();
        }

        if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
            $('.AgendaItemPublicCommentNone').show();
        }
        else {
            $('.AgendaItemPublicComment' + ItemId).show();
        }
        window.dispatchEvent(new Event('resize'));
    }
    else {
        $('#selectedTabAgendaAttachment').css({'font-weight':'bold', 'color':'black'});
        $('#selectedTabAgendaAttachment').attr({'aria-selected':'true'});
        $('#selectedTabAgendaComments').css({'font-weight':'normal', 'color': '#595959'});
        $('#selectedTabAgendaComments').attr({'aria-selected':'false'});
        $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
        $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'true'});
        $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'normal','color': '#595959' });
        $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'false'});

        if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
            $('.AgendaItemPublicCommentNone').hide();
        }
        else {
            $('.AgendaItemPublicComment' + ItemId).hide();
        }

        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
            $('.AgendaItemAttachmentNone').show();
        }
        else {
            $('.AgendaItemAttachment' + ItemId).show();
        }
    }

    var attachmentCounts = $('.AgendaItemPublicCommentList > .AgendaItemAttachment' + ItemId).length;
    var commentCounts = $('.AgendaItemPublicCommentList > .AgendaItemPublicComment' + ItemId).length;
                                
    $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
    $('#selectedTabAgendaCommentsCount').first().text(' (' + commentCounts + ')');
    
    $('#selectedTabAgendaAttachmentCount' + ItemId).first().text(' (' + attachmentCounts + ') ');
    $('#selectedTabAgendaCommentsCount' + ItemId).first().text(' (' + commentCounts + ')');
}

function hilightItem(ItemId) {
    var tabindex = $('#AgendaItemAgendaItem' + ItemId + 'TitleHeader > .AgendaItemNavigate > .AgendaItemTitle > A').attr('tabindex');
    $('#selectedTabAgendaAttachment').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaAttachmentCount').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaComments').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });
    $('#selectedTabAgendaCommentsCount').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });
    $('#selectedTabAgendaAttachment' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaAttachmentCount' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaComments' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });
    $('#selectedTabAgendaCommentsCount' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });

    $('.hilighted').removeClass('hilighted');
    $('.AgendaItemAttachment').hide();
    $('.AgendaItemAttachment').parent().hide();
    $('.AgendaItemPublicComment').hide();

    if (ItemId != '') {
        var item = '.AgendaItem' + ItemId;

        $(item + ' .AgendaItemTitleRow').addClass('hilighted');
        $(item + ' .LateClosedAgendaItemTitleRow').addClass('hilighted');
        $('.AgendaItemAttachementsHeader').show();
        $('.AgendaItemPublicCommentHeader').show();

        $('.AgendaItemSelectedDetails').show();
        $('.SelectedItemCounter').text($(item + ' .AgendaItemCounter').text());
        $('.SelectedItemTitle').text($(item + ' .AgendaItemTitle').text());

        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
            $('.AgendaItemAttachmentNone').show();
            $('.AgendaItemAttachmentNone').parent().show();
        }
        else {
            $('.AgendaItemAttachment' + ItemId).show();
            $('.AgendaItemAttachment' + ItemId).parent().show();
        }
        
        if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
            $('.AgendaItemPublicCommentNone').show();
            $('.AgendaItemPublicCommentNone').parent().show();
        }
        else {
            $('.AgendaItemPublicComment' + ItemId).show();
            $('.AgendaItemPublicComment' + ItemId).parent().show();
        }
    }
    else {  
        $('.AgendaItemSelectedDetails').hide();
        $('.AgendaItemAttachmentNotSelected').show();
    }
}</script><script type='text/javascript'></script>
            </main>
        </div>
        <!-- Bootstrap Modal -->
        <div id='bootstrapModal' aria-live="polite" aria-hidden="true" class='modal fade in' style='display: none;'>
            <div class='modal-dialog modal-dialog-scrollable'>
                <div class='modal-content'>
                    <div class='modal-header'>
                        <h3 id='bootstrapModalTitle' class='modal-title' style='font-size: 17px'>Title</h3>
                        <button type='button' class='close' data-dismiss='modal'><span aria-hidden='true'>×</span> <span class='sr-only'>close</span></button>
                    </div>
                    <div id='bootstrapModalBody' class='modal-body' style="padding: 0px">
                        <div class='embed-responsive z-depth-1-half' id="modalIframeDiv">
                            <iframe id="modalIframe" title="Share Content Options" class='embed-responsive-item' src='' allowfullscreen></iframe>
                        </div>
                    </div>
                    <div class='modal-footer' id="bootstrapModalFooter" style='margin-top: 0; min-height: 55px;'>
                    </div>
                </div>
            </div>
        </div>

        <footer class="navbar navbar-default navbar-fixed-bottom navbarbg">
            <div class="container text-right">
                <div class="navbar-inner navbar-content-center footeralign">
                    <div class="float-right">
                        
                        <copyright class="poweredBy"><a href="https://escribemeetings.com" target="_blank" id="lnkPoweredBy">Powered by eSCRIBE Software Ltd.</a></copyright>
                        
                    </div>
                </div>
            </div>
        </footer>

        <script type="text/javascript">
            var AgendaSize = parseFloat($(".Agenda *").css('font-size'));
            var TitleSize = parseFloat($(".AgendaHeaderTitle").css('font-size'));
            var MeetingTitle = "Committee of Adjustment - Panel 1 - September 07, 2022";
            var itemTitles = { };
            var Sharing = false;
            var AllowComment = "False";
			var PublicCommentSettings = [{"Id":1,"AllowPublicComment":false},{"Id":2,"AllowPublicComment":false},{"Id":3,"AllowPublicComment":false},{"Id":4,"AllowPublicComment":false},{"Id":5,"AllowPublicComment":false},{"Id":7,"AllowPublicComment":false},{"Id":8,"AllowPublicComment":false},{"Id":9,"AllowPublicComment":false},{"Id":10,"AllowPublicComment":false},{"Id":11,"AllowPublicComment":false},{"Id":13,"AllowPublicComment":false},{"Id":14,"AllowPublicComment":false},{"Id":15,"AllowPublicComment":false},{"Id":16,"AllowPublicComment":false},{"Id":17,"AllowPublicComment":false},{"Id":18,"AllowPublicComment":false},{"Id":19,"AllowPublicComment":false},{"Id":20,"AllowPublicComment":false},{"Id":22,"AllowPublicComment":false},{"Id":23,"AllowPublicComment":false},{"Id":24,"AllowPublicComment":false},{"Id":25,"AllowPublicComment":false},{"Id":26,"AllowPublicComment":false},{"Id":27,"AllowPublicComment":false},{"Id":28,"AllowPublicComment":false},{"Id":29,"AllowPublicComment":false},{"Id":30,"AllowPublicComment":false},{"Id":31,"AllowPublicComment":false},{"Id":32,"AllowPublicComment":false},{"Id":35,"AllowPublicComment":false},{"Id":36,"AllowPublicComment":false},{"Id":37,"AllowPublicComment":false},{"Id":38,"AllowPublicComment":false},{"Id":39,"AllowPublicComment":false},{"Id":40,"AllowPublicComment":false},{"Id":41,"AllowPublicComment":false},{"Id":42,"AllowPublicComment":false},{"Id":43,"AllowPublicComment":false}];
            var LeaveComment = "Leave comment";

            function PrintAgenda() {
                window.print();
            };

            $(".VideoLink").click(function (e) {
                try {
                    $f().pause();
                }
                catch (e) {
                }
            });

            function detailsheight() {
                return $(".Details > div").height();
            };

            function SetDetailsHeight(AgendaItemId) {
                try {
                    if (Window_OnResize) {
                        Window_OnResize();
                    }
                        
                    //For public comment narrow and wide view when resize window
                    $(window).trigger('resize');

                }
                catch (e) {
                }
            }

            function CreateSocialLink(AgendaItemId) {
                var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                var language = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("lang").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                var publicCommentUrl = "PublicComment.aspx?agendaId=" + AgendaItemId + "&meetingId=" + meetingId + "&lang=" + language;
                var allowComment = AllowComment == "True" ? true : false;           
                    
                if(allowComment) {
                    for(i = 0; i < PublicCommentSettings.length; i++) {
                        var setting = PublicCommentSettings[i];
                        if(setting.Id == AgendaItemId) {
                            allowComment = setting.AllowPublicComment;
                            break;
                        }
                    }
                }

                var SocialItems = setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, false);

                $('.SocialIcons').remove();
                $(".hilighted .AgendaItemNavigate").append($("<div class='SocialIcons visible-xs visible-sm'>").append(SocialItems));
                $('.SelectedItemTitle').parent().append(SocialItems);
                $('.SelectedItemTitle').parent().addClass("clearfix");

                //visible-xs visible-sm
                //add the icons under narrow view if not exist
                var iconDiv = $('.AgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemIcons');

                if(iconDiv.length == 0) {
                    iconDiv = $('.AgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemTitle');
                }

                $(setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, true)).insertAfter(iconDiv);
                
                var closedIconDiv = $('.LateClosedAgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemIcons');
                
                if(closedIconDiv.length == 0) {
                    closedIconDiv = $('.LateClosedAgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemTitle');
                }
                $(setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, true)).insertAfter(closedIconDiv);
                SetDetailsHeight(AgendaItemId);
            }

            function setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, isNarrow) {
                var cssClass = isNarrow ? " class='visible-xs visible-sm' " : "";
                var padding = isNarrow ? "style='padding-top: 5px;'" : "";
                var btnId = isNarrow ? "id='narrow-leave-comment-button'" : "";
                    
                if(allowComment && !Sharing) {
                    var SocialItems = $("<div" + cssClass + ">")
                           .addClass("sharing SocialIcons")
                           .css("float", "right")
                           .append(
                               $("<a class='CommentIcon' aria-label='submit public comment'>")
                                   .attr("href", publicCommentUrl)
                                   .append("<span class='btn btn-primary btn-sm' style='vertical-align:middle;' " + btnId + ">" + LeaveComment + "<span>")
                           );

                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                }
                else if (Sharing && !allowComment) {
                    var SocialItems =
                        $("<div" + cssClass + padding + ">")
                            .addClass("sharing SocialIcons")
                            .css("float", "right")
                            .append(
                                $("<a style='padding-right: 13px;'>")
                                    .attr("href", 'Sharing.aspx?u=' + encodeURIComponent(window.location.href))
                                    .append('<img src="Images/share.PNG" style="height:1em;" alt="This can be shared, click to open the sharing popup." title="Share">')
                            );
                }
                else if (Sharing && allowComment) {
                    var SocialItems = $("<div" + cssClass + ">")
                                .addClass("sharing SocialIcons")
                                .css("float", "right")
                                .append(
                                   $("<a class='CommentIcon' aria-label='submit public comment'>")
                                       .attr("href", publicCommentUrl)
                                       .append("<span class='btn btn-primary btn-sm' style='vertical-align:middle;' " + btnId + ">" + LeaveComment + "<span>"))
                                
                                .append(
                                    $("<a style='padding-right: 19px;width: 6%;padding-top: 5px;padding-left: 5px;'>")
                                        .attr("href", 'Sharing.aspx?u=' + encodeURIComponent(window.location.href))
                                        .append('<img src="Images/share.PNG" style="height:1em;" alt="This can be shared, click to open the sharing popup." title="Share">')
                                );

                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                    $('.LateClosedAgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.LateClosedAgendaItemTitleRow hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                }

                return SocialItems;
            }

            function getParameterByName(name) {
                name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
                var regex = new RegExp('[\\?&]' + name + '=([^&#]*)'),
                results = regex.exec(location.search);
                return results == null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
            }

            function UpdateTitle(AgendaItemId) {
                if (itemTitles[AgendaItemId] != null) {
                    document.title = itemTitles[AgendaItemId] + ' - ' + MeetingTitle;
                }
                else {
                    document.title = MeetingTitle;
                }
            }

            // when selected item has changed update page //
            $(document).on("item:selected", function (e, id, scroll) {
                var selectedTab = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Tab").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                  
                hilightItem(id);
                CreateSocialLink(id);
                UpdateTitle(id);

                //Replace the Leave Comment button to icon
                var windowWidth = $(window).width();
                $('#narrow-leave-comment-button').html("<span class='las la-comment-alt' style='vertical-align: middle' title='Leave Comment'></span>");
                $('#narrow-leave-comment-button').attr("aria-label", "submit a public comment on this agenda item");
                    
                if (scroll == true) {
                    // scroll item into view //
                    var current = $(".AgendaItemTitleRow.hilighted");

                    if (current.length > 0) {
                        current[0].scrollIntoView();
                    }
                }

                if(selectedTab) {
                    toggleSelectedDetails(id, selectedTab);
                }
                else {
                    toggleSelectedDetails(id, 'attachments');
                }

                var attachmentCounts = $('.AgendaItemPublicCommentList >.OrderedAttachments > .OrderedAttachment > .AgendaItemAttachment' + id).length;											
                $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
            });

            function toggleSelectedDetails(ItemId, tab) {
                window.history.pushState('', '', UpdateQuery('Tab', tab));

                if (tab == 'comments') {
                    $('#selectedTabAgendaComments').css({'font-weight':'bold', 'color':'black'});
                    $('#selectedTabAgendaComments').attr({'aria-selected':'true'});
                    $('#selectedTabAgendaAttachment').css({'font-weight':'normal', 'color': '#595959'});
                    $('#selectedTabAgendaAttachment').attr({'aria-selected':'false'});
                    $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
                    $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'true'});
                    $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'normal','color': '#595959' });
                    $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'false'});

                    if ($('.OrderedAttachments').length && $('.OrderedAttachments').is(":visible")) {
                        if ($('.OrderedAttachments >.OrderedAttachment >.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').hide();
                        }
                        else {
                            $('.OrderedAttachments >.OrderedAttachment >.AgendaItemAttachment' + ItemId).hide();
                        }
                    }
                    else {
                        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').hide();
                        }
                        else {
                            $('.AgendaItemAttachment' + ItemId).hide();
                        }
                    }

                    if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
                        $('.AgendaItemPublicCommentNone').show();
                    }
                    else {
                        $('.AgendaItemPublicComment' + ItemId).show();
                    }
                    window.dispatchEvent(new Event('resize'));
                }
                else {
                    $('#selectedTabAgendaAttachment').css({'font-weight':'bold', 'color':'black'});
                    $('#selectedTabAgendaAttachment').attr({'aria-selected':'true'});
                    $('#selectedTabAgendaComments').css({'font-weight':'normal', 'color': '#595959'});
                    $('#selectedTabAgendaComments').attr({'aria-selected':'false'});
                    $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
                    $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'true'});
                    $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'normal','color': '#595959' });
                    $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'false'});

                    if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
                        $('.AgendaItemPublicCommentNone').hide();
                    }
                    else {
                        $('.AgendaItemPublicComment' + ItemId).hide();
                    }

                    if ($('.OrderedAttachments').length && $('.OrderedAttachments').is(":visible")) {
                        if ($('.OrderedAttachments>.OrderedAttachment>.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').show();
                        }
                        else {
                            $('.OrderedAttachments >.OrderedAttachment>.AgendaItemAttachment' + ItemId).show();
                        }
                    }
                    else {
                        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').show();
                        }
                        else {
                            $('.AgendaItemAttachment' + ItemId).show();
                        }
                    }
                }

                var attachmentCounts = $('.AgendaItemPublicCommentList >.OrderedAttachments > .OrderedAttachment > .AgendaItemAttachment' + ItemId).length;
                var commentCounts = $('.AgendaItemPublicCommentList > .AgendaItemPublicComment' + ItemId).length;
											
                $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
                $('#selectedTabAgendaCommentsCount').first().text(' (' + commentCounts + ')');
				
                $('#selectedTabAgendaAttachmentCount' + ItemId).first().text(' (' + attachmentCounts + ') ');
                $('#selectedTabAgendaCommentsCount' + ItemId).first().text(' (' + commentCounts + ')');
				
                var modalClass = '.Details';
                var modalContainer = document.querySelector(modalClass);
                var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [contenteditable]';
                var focusableElements = modalContainer.querySelectorAll(focusableElementsString);

                focusableElements = Array.prototype.slice.call(focusableElements);
                if (focusableElements.length > 0){
                    focusableElements[0].focus();
                }
            }

            function UpdateQuery(parameter, value) {
                var loc = window.location.search;

                if (loc.length == 0) {
                    // no query string //
                    if (value.length > 0) {
                        // add parameter directly to url //
                        return window.location.href + "?" + parameter + "=" + encodeURIComponent(value);
                    }
                }
                else {
                    var found = false;
                    if (loc[0] == '?') {
                        loc = loc.substring(1);
                    }

                    // split up existing query string //
                    var params = loc.split('&');

                    for (var i = 0; i < params.length; i++) {
                        if (params[i].toLowerCase().startsWith(parameter.toLowerCase() + '=')) {
                            found = true;

                            if (value.length > 0) {
                                // set new value //
                                params[i] = parameter + '=' + encodeURIComponent(value);
                            }
                            else {
                                // remove existing value //
                                params[i] = '';
                            }
                        }
                    }

                    if (found == false && value.length > 0) {
                        params.push(parameter + '=' + value);
                    }

                    var qs = '';
                    for (var i = 0; i < params.length; i++) {
                        if (params[i].length > 0) {
                            if (qs.length == 0) {
                                qs = "?" + params[i];
                            }
                            else {
                                qs += "&" + params[i];
                            }
                        }
                    }

                    return window.location.href.replace("?" + loc, qs);
                }

                return window.location.href;
            }

            //$(document).ready(function () {
            //    SelectItem(getParameterByName("Item"), true);
            //});
        </script>

        <style type="text/css">
            /*
                @media Screen {
                    .AgendaItemAttachmentsList {
                        // this max height is causing attachments overlap, if exist the height
                             //max-height:200px;
                    }

                    .AgendaItemAttachmentsArea {
                        overflow:hidden;
                        overflow-y:auto;
                    }
                }
                */
        </style>
    </form>

    


<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" />  

<div id="AgendaItemDetailsModal" class="modal fade">
    <div class="modal-dialog AgendaItemDetailsModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Details</h3>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
            </div>
            <div class="modal-body">
                <div>
                    <div class="inputform">
                        <label>
                            Title
                        </label>
                        <div class="ItemTitle"></div>

                        <label>
                            Description
                        </label>
                        <div class="description"></div>

                        <label>
                            Category
                        </label>
                        <div class="Category"></div>

                        <label>
                            Number
                        </label>
                        <div class="LegislationNumberLabel"></div>

                        <label>Stage</label>
                        <div class="LegislationStageLabel"></div>

                        <label>
                            Department
                        </label>
                        <div id="LegislationDepartmentLabel"></div>

                        <label style="vertical-align: top">
                            Attachments
                        </label>
                        <div style="overflow:hidden">
                            <div>
                                <span id="LegislationDocumentIcon"></span>
                                <a id="LegislationDocumentLink"></a>
                            </div>
                            <div id="LegislationSupportingDocumentsList">
                            </div>
                        </div>
                    </div>
                </div>

                <h4 style="margin-top:0.5em">History</h4>
                <div>
                    <table id="LegislationHistoryTable" class="list dataTable">
                        <thead>
                            <tr>
                                <th id="legislationhistory-index-th" class="leg-no-break tablepadding"></th>
                                <th id="legislationhistory-meetingtype-th" class="leg-no-break tablepadding">Meeting Type</th>
                                <th id="legislationhistory-meetingdate-th" class="leg-no-break tablepadding">Meeting Date</th>
                                <th id="legislationhistory-stage-th" class="leg-no-break tablepadding">Stage</th>
                                <th id="legislationhistory-status-th" class="leg-no-break tablepadding">Status</th>
                                <th id="legislationhistory-number-th" class="leg-no-break tablepadding">Number</th>
                                <th id="legislationhistory-vote-th" class="leg-no-break tablepadding">Vote</th>
                            </tr>
                        </thead>
                        <tbody class="history"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="VoteResultsModal" class="modal fade">
    <div class="modal-dialog VoteResultsModal" style="width: 60%">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Vote Result</h3>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
            </div>
            <div class="modal-body">
                <div class="Text"></div>
                <div class="Banner"></div>
                <div class="Votes"></div>
            </div>
            <div class="modal-footer">
                <div class="dataTables_wrapper" style="margin:auto">
                    <div class="dataTables_paginate paging_simple_numbers">
                        <span>
                            <a class="paginate_button current" aria-controls="table-conflicts-details-list" data-dt-idx="1" tabindex="0">1</a>
                        </span>
                    </div>
                </div> 
            </div>
        </div>
    </div>
</div>
 
<script type="text/javascript">
    function FillVoteResultsDialog(motions, index) {
        var dialog = $("#VoteResultsModal");
        var motion = motions[index];

        // paging //
        {
            var paging = dialog.find(".dataTables_paginate").empty();

            // back links //
            {
                // first link
                var firstlink = $('<a class="paginate_button first">&lt;&lt;</a>')
                    .attr("id", "VoteResultsModal-First")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to First Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", 0);

                // previous link //
                var previouslink = $('<a class="paginate_button previous" "">&lt;</a>')
                    .attr("id", "VoteResultsModal-Previous")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Previous Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", 1);


                if (index == 0) {
                    firstlink.addClass('disabled');
                    firstlink.attr("aria-disabled", "true");

                    previouslink.addClass('disabled');
                    previouslink.attr("aria-disabled", "true");
                }
                else {
                    firstlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, 0);
                        });
                    
                    previouslink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, index-1);
                        });
                }

                paging.append(firstlink);
                paging.append(previouslink);                
            }

            // pages //
            {
                var pages = $("<span>");
                for (var i=0; i<motions.length; i++) {
                    let buttonindex = i;

                    var link = $('<a class="paginate_button">')
                        .attr("aria-controls", "VoteResultsModal")
                        .attr("data-dt-idx", i+2)
                        .attr("tabindex", 0)
                        .text(i+1)
                        .click(function(e) {
                            FillVoteResultsDialog(motions, buttonindex);
                        })

                    if (i == index) {
                        link.addClass("current")
                    }

                    pages.append(link);
                }

                paging.append(pages);
            }

            // forward links //
            {
                // next link 
                var nextlink = $('<a class="paginate_button next">&gt;</a>')
                    .attr("id", "VoteResultsModal-Next")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Next Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", motions.length + 2);

                // last link
                var lastlink = $('<a class="paginate_button last">&gt;&gt;</a>')
                    .attr("id", "VoteResultsModal-Last")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Last Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", motions.length + 3);


                if (index == motions.length - 1) {
                    nextlink.addClass('disabled');
                    nextlink.attr("aria-disabled", "true");

                    lastlink.addClass('disabled');
                    lastlink.attr("aria-disabled", "true");
                }
                else {
                    nextlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, index+1);
                        });
                    
                    lastlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, motions.length-1);
                        });
                }

                paging.append(nextlink);
                paging.append(lastlink);
            }
        }


        


        // render motion //

        dialog.find(".Text").text(motion.Text);
                                        
        var banner = dialog.find(".Banner");
        banner.text(motion.BannerText);

        switch (motion.BannerColor) {
            case 'green':
                banner.css("background-color", '#21AE52');
                banner.css("color", 'white');
                break;

            case 'red':
                banner.css("background-color", 'red');
                banner.css("color", 'black');
                break;

            default:
                banner.css("background-color", '');
                banner.css("color", '');
                break;
        }


        dialog.find(".Votes").empty()

        // add votes to dialog //
        var votes = {};
        var voteorder = ["Yes", "No", "Abstain", "Absent"];

        $.each(motion.Votes, function(imv, motionvote) {
            if (!votes.hasOwnProperty(motionvote.Vote)) {
                votes[motionvote.Vote] = [];
            }

            if (voteorder.indexOf(motionvote.Vote) == -1) {
                voteorder.push(motionvote.Vote);
            }

            votes[motionvote.Vote].push(
                $("<span>").text(motionvote.UserName)
            );
        });

        $.each(voteorder, function(iv, vote) {
            var container = $("#VoteContainerTemplate").clone();

            if (votes.hasOwnProperty(vote)) {
                container.find(".VoteHeader .count").text(votes[vote].length);
                container.find(".Voters").append(...(votes[vote]));
            }

            container.find(".VoteHeader .Vote").text(vote);
            dialog.find(".Votes").append(container.children());
        });
    }

    // fix for nested motals //
    $(document).ready(function () {
        $(document).on({
            'show.bs.modal': function () {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () { $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack'); }, 0);
            },
            'hidden.bs.modal': function () {
                if ($('.modal:visible').length > 0) {
                    // restore the modal-open class to the body element, so that scrolling works
                    // properly after de-stacking a modal.
                    setTimeout(function () { $(document.body).addClass('modal-open'); }, 0);
                }
            }
        }, '.modal');
    });
</script>

<style type="text/css">
    /* flex-grid classes */
    .inputform {
	    font-size:1em;
	    display:grid;
	    grid-template-columns:0fr 1fr;
	    grid-gap:10px 10px;
	    align-items:baseline;
    }
			
    @media (max-width: 575px) {
        .inputform {
            grid-template-columns: 1fr;
            grid-gap:0px;
        }

        .inputform > label,
        .inputform > .row > label {
            margin-top:20px;
        }
    }

    .inputform > label,
    .inputform > .row > label {
	    white-space:nowrap;
	    font-size:1em;
	    font-weight:bold;
    }

    .inputform > .row {
	    display:contents;
    }
			
    .inputform > .row > div {
	    grid-column : 1 / 3;
    }
			
    .inputform > .row > label+div {
	    grid-column: 2 / 3;
    }

    .inputform label+div > div+div {
	    margin-top:4px;
    }

    /* modal styles */
    .modal-dialog.AgendaItemDetailsModal {
        max-width: 1000px;
    }

    .AgendaItemDetailsModal .modal-content {
        max-height:90vh;
        overflow:hidden;
    }

    .AgendaItemDetailsModal .modal-content .modal-body {
        overflow-y:auto;
    }

    .AgendaItemDetailsModal .description {
        max-height:10em;
        overflow-y:auto;
    }

    .VoteResultsModal .Text {
        padding: 2px 0 18px;
    }

    .VoteResultsModal .Banner {
        font-weight:bold;
        padding:5px;
        text-align: center;
    }

    .Votes .VoteHeader {
        font-weight: bold;
        text-align: center;
        padding: 10px;
    }

    .Votes .Voters {
        display: grid;
        grid-template-columns: 33% minmax(0, 34%) 33%;
        grid-gap: 10px;
        align-items: baseline;
        text-align: center;
        border: 1px solid #f7f7f7;
    }

    h3.modal-title {
        font-size:17px;
    }

    #LegislationSupportingDocumentsList > div {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    #LegislationHistoryTable td {
        cursor:pointer;
    }

    #LegislationHistoryTable tr.selected td {
        border-top: 1px solid black;
        border-bottom: 1px solid black;
    }

    #LegislationHistoryTable tr.selected > :first-child {
        border-left:1px solid black;
    }

    #LegislationHistoryTable tr.selected > :last-child {
        border-right:1px solid black;
    }
</style>

<div id="VoteContainerTemplate" style="display:none">
    <div>
        <div class="VoteHeader"><span class="Vote"></span> ( <span class="count">0</span> )</div>
        <div class="Voters"></div>
    </div>
</div>

<script type="text/javascript">
    var AgendaItemswithHistory = [];

    $("document").ready(function() {
        // add agenda item history links dynamically to the agenda //
        $.each(AgendaItemswithHistory, function(i, v) {
            // remove old icon //
            $(".AgendaItem" + v + " .AgendaItemIcons").find(".AgendaItemHistoryLink").remove();

            // add icon //
            $(".AgendaItem" + v + " .AgendaItemIcons").append(
                $('<a href="">')
                    .addClass("AgendaItemHistoryLink")
                    .attr("itemid", v)
                    .append('<i class="las la-history"></i>')
            );
        });

        $(".AgendaItemHistoryLink").click(function(e){
            e.preventDefault();

            AgendaItemHistory.Dialog.Open('d0f46ee8-dbd2-4f80-99aa-e8d7fa5a0742', $(this).attr("itemid"));
        });
    });
</script>


</body>

</html>

  recorded_at: Fri, 31 Jan 2025 02:28:18 GMT
- request:
    method: get
    uri: https://pub-ottawa.escribemeetings.com/Meeting.aspx?Agenda=Agenda&Id=d0f46ee8-dbd2-4f80-99aa-e8d7fa5a0742&lang=English
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - pub-ottawa.escribemeetings.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - private
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Server:
      - Microsoft-IIS/10.0
      Set-Cookie:
      - ASP.NET_SessionId=xo441d0jq15ireu10wodi4fl; path=/; HttpOnly; SameSite=Lax
      Strict-Transport-Security:
      - max-age=31536000
      Date:
      - Fri, 31 Jan 2025 02:28:19 GMT
      Content-Length:
      - '171334'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>




<html lang="en">
<head><meta charset="utf-8" /><meta http-equiv="X-UA-Compatible" content="IE=edge;chrome=1" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><title>
	Committee of Adjustment - Panel 1 - September 07, 2022
</title><script src="/bundles/modernizr?v=inCVuEFe6J4Q07A0AcRsbJic_UE5MwpRMNGcOtk94TE1"></script>
<script src="/bundles/jquery?v=8Oos0avDZyPg-cbyVzvkIfERIE1DGSe3sRQdCSYrgEQ1"></script>
<script src="/bundles/Meeting?v=vzF-9MbkbXiinMWgrvzK7C29wf8pirXICHRNY8VkMX01"></script>

        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <link href="/Content/css?v=qzDQfe_MaYWq9JDfD-bbLqBUQ47pEKk1u5XXgwMwxg01" rel="stylesheet"/>
<link rel='stylesheet' type='text/css' href='./FileStream.ashx?DocumentId=99732'><link rel="stylesheet" href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css" /><link rel="stylesheet" href="Content/Customizations.css" /><link rel="stylesheet" href="Content/Meeting.css" /><link href="Content/CalenderViewStyle-updated.css" rel="stylesheet" /><link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" type="text/css" /><link href="favicon.ico" rel="shortcut icon" type="image/x-icon" />

    <!-- This file must exist, otherwise we'll get server side error -->
    <!-- Ottawa Siteimprove Analytics --> 


<script async src="https://siteimproveanalytics.com/js/siteanalyze_876116.js"></script>

<!-- eSCRIBE Global site tag (gtag.js) - Google Analytics --> 

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-178411397-49"></script> 

<script> 

  window.dataLayer = window.dataLayer || []; 

  function gtag(){dataLayer.push(arguments);} 

  gtag('js', new Date()); 

  

  gtag('config', 'UA-178411397-49'); 

</script> 

    <style type="text/css">

        body {
            color: #000000;
        }

        a, A:link, A:visited {
            color: #0059B8;
        }

        .comment-link {
            display: inline-block;
            vertical-align: top;
        }

        .comment-link:hover {
            text-decoration: underline;
        }

        .embed-responsive {
            position: relative;
            display: block;
            width: 100%;
            padding: 0;
            overflow: hidden;
        }

            .embed-responsive::before {
                display: block;
                content: "";
            }

            .embed-responsive .embed-responsive-item, .embed-responsive iframe, .embed-responsive embed, .embed-responsive object, .embed-responsive video {
                /*position: absolute;*/
                top: 0;
                bottom: 0;
                left: 0;
                width: 100%;
                height: 100%;
                border: 0;
            }

        .embed-responsive-21by9::before {
            padding-top: 42.857143%;
        }

        .embed-responsive-16by9::before {
            padding-top: 56.25%;
        }

        .embed-responsive-4by3::before {
            padding-top: 75%;
        }

        .embed-responsive-1by1::before {
            padding-top: 100%;
        }


        html, body, form {
            height: 100%;
            overflow: hidden;
        }

        #Agendadropdownmenu.dropdown-menu {
            right: 0px;
            left: 0px;
        }

        .FontIncrease * {
            font-size: 1em;
            font-weight: bold;
            cursor: pointer;
        }

        .FontDecrease * {
            font-size: 0.85em;
            font-weight: bold;
            cursor: pointer;
        }

        .panel {
            margin-bottom: 22px;
            background-color: #fff;
            border: 1px solid transparent;
            border-radius: 4px;
            -webkit-box-shadow: 0 1px 1px rgba(0,0,0,.05);
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .panel-default {
            border-color: #ddd;
        }

        .panel-heading {
            padding: 10px 15px;
            border-bottom: 1px solid transparent;
            border-top-right-radius: 3px;
            border-top-left-radius: 3px;
        }

        .panel-default > .panel-heading {
            color: #000;
            background-color: #f5f5f5;
            border-color: #ddd;
        }

        .panel-body {
            padding: 15px;
        }

        /*ul.navbar-nav > li {
                display:inline-block;
            }

            .navbar-nav > li > a {
                padding-top:5px !important; padding-bottom:5px !important;
            }
            .navbar {
                min-height:32px !important
            }
            .navbar-toggle {
                margin-top:4px;
                margin-bottom:4px;
                padding-top:4px;
                padding-bottom:4px;
            }

            .affix { 
                right:0px;
                top:32px;
            }

            .affix-top {
                right:0px;
                position:fixed;
                top:32px;
            }*/

        .Details > div {
            padding-right: 0px !important;
            margin-right: 2%;
        }

        a.dropdown-toggle:focus {
            outline: solid 1px #FFFFFF;
        }

        #lnkPoweredBy:focus {
            outline: solid 1px #FFFFFF;
            padding: 4px;
        }

        /*@media (max-height: 760px) {
                .navbar-fixed-bottom {
                    display:none;
                }
            }
            @media (min-height: 760px) {
                body {
                    padding-bottom: 32px;
                }
            }
            
            @media (max-width: 600px) {
                 .AgendaItemContainer > .AgendaItemContainer {
                    margin-left:4em !important;
                }
            }*/

        @media (max-width: 500px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 2em !important;
            }
        }

        @media (max-width: 400px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 1em !important;
            }
        }

        @media (max-width: 300px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 0em !important;
            }
        }

        @media (min-width:768px) and (max-width:991px) {
            .AgendaItemSelectedDetails {display: none !important; }

            .visible-sm.sharing.SocialIcons {
                display: inline-block !important;
                float: none !important;
            }

            .AgendaItemTitleRow.hilighted {
                display: block !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemIcons,
            .AgendaItemTitleRow.hilighted > .AgendaItemIcons{
                display: none !important;
            }


            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle.hasPublicCommentButton {
                margin-right: 135px;
                width: auto !important;
            }
        }

        /*.AgendaItemIcons {
            width: 22% !important;
        }*/

        .visible-xs visible-sm sharing SocialIcons {
            width: 10%;
            padding-top: 5px;
            float: right;
        }

        @media (max-width: 767px) {
            .visible-xs.sharing.SocialIcons {
                display: inline-block !important;
                float: none !important;
            }

            .AgendaItemTitleRow.hilighted {
                display: block !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemIcons,
            .AgendaItemTitleRow.hilighted > .AgendaItemIcons {
                display: none !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle.hasPublicCommentButton {
                margin-right: 65px;
                width: auto !important;
            }
        }

        @media only screen and (device-width: 768px) {

            .navbar-nav .dropdown-menu {
                margin-top: -5px !important;
            }

            .dropdown, .dropleft, .dropright, .dropup {
                width: fit-content !important;
            }

            .collapse:not(.show) {
                display: block !important;
            }

            .navbar-light .navbar-toggler {
                float: right;
                border-color: #ddd !important;
                display: none !important;
            }

            .navbar-nav .dropdown-menu {
                position: absolute !important;
            }
        }

        .visible-xs.visible-sm.sharing.SocialIcons {
            /*width: 10%;
            padding-top: 5px;
            float: right;
            position: absolute;
            right: -8px;
            margin-top: -22px;*/
            position: absolute;
            right: 10px;
            margin: 0;
            position: absolute;
            top: 50%;
            -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        }

            .visible-xs.visible-sm.sharing.SocialIcons > * > span.btn.btn-primary.btn-sm {
                padding: 0px 5px 0px 5px;
            }

            .visible-xs.visible-sm.sharing.SocialIcons,
            .visible-xs.visible-sm.sharing.SocialIcons > *,
            .visible-xs.visible-sm.sharing.SocialIcons > * > span {
                font-size: 12px !important;
                font-weight: normal !important;
            }

        .SocialIcons {
            float: right;
        }


        .poweredBy, .poweredBy a {
            color: white !important;
        }

        @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation : portrait) {
            .visible-xs.visible-sm.sharing.SocialIcons
            {
                right: -8px !important;
                padding-top: 4px !important;
            }
        }

        @media screen and (device-width: 280px) and (device-height: 653px) {
            .visible-xs.visible-sm.sharing.SocialIcons
            {
                position: unset;
                right: unset;
                margin: unset;
                top: unset;
                -ms-transform: unset;
                transform: unset;
            }
            }

        .packageNav {
            position: absolute !important;
        }

    </style>
</head>
<body style="background-color: #e5e5e5">
    <form name="form1" method="post" action="./Meeting.aspx?Id=d0f46ee8-dbd2-4f80-99aa-e8d7fa5a0742&amp;Agenda=Agenda&amp;lang=English" id="form1">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="O9IUEEvs/52WbTGxJLG8+sxv3m4rThjUukywEw8UKR+B5wS7IIqV9XvS9qOXbyOo3DQSlTyTyepoFDJsy7EhzMbjyeyYBs0OXfDXPkJT0GIMSgdiwh8b876YsNxiIit3jHGlhA52AUT2loSn38f728RjO5vKckWOzXtx0DblBC5sTJXF1sr0rP9bhlvn0eGEOe3wHb/WfipQbtdmoEtTEF+lDJLVjv0w4CeeogqoQHBfKpHdSnXi8OvcIsVG8VVjBPVv0f/MHhfVgMDgl/tjaUcxuz+N6QMjgudXuNXDPQedJv8/W+9aw3mzGhHd7mFwgZq51fCCh5rUN+gRhv3AWKl0BgQKW3fmiqRbo/hVnSsG08E9T0eb/fwAXYxZihPP+v/wEOpCb6Z/sXPydIqujeQP34Eo9bQ09KpKOEQ96DmyrdoF3nqodnGvZPNI+9m2a6jh+32sGR2pNuOmhxS7XKhv22WuzRFwUi/rx2+yx57SYDnAxYKFcOZmaB69bpBMOSqBpLzq1n05iUpM2gtBMB1OpHaWF3e1o/VuDCICS33oOsxD9JevR+4arkshBCPAMSk+v+SsChZ8EFHCWfm9wRQ7pTEj0HUMJRXww/5PDXAfdhfzdoIdNLA0Fyh33Tg3Y0gESfmmq2yjBOogBOVud67h3zqlL4YJOMCNUpB1d9eKlqQCfg5ZR8aAqQX433WRO+x6zO1MocnAKhUZU7gA7PS4ZAkyVC9Zh/BQJx7jbhI=" />


<script src="/bundles/MsAjaxJs?v=D6VN0fHlwFSIWjbVzi6mZyE9Ls-4LNrSSYVGRU46XF81" type="text/javascript"></script>
<script src="Scripts/bootstrap.min.js" type="text/javascript"></script>
<script src="Scripts/respond.min.js" type="text/javascript"></script>
<script src="/bundles/WebFormsJs?v=N8tymL9KraMLGAMFuPycfH3pXe6uUlRXdhtYv8A_jUU1" type="text/javascript"></script>
<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="4936DBB7" />
<input type="hidden" name="__VIEWSTATEENCRYPTED" id="__VIEWSTATEENCRYPTED" value="" />
        

        <script type="text/javascript">
            function iframeLoaded(iframeHeight) {
                var windowHeight = $(window).height();

                if (iframeHeight > windowHeight) {
                    var newHeight = (windowHeight - 185) + "px";
                    $('#bootstrapModalBody').height(newHeight);
                    $('#modalIframeDiv').height(newHeight);

                    return $('#modalIframeDiv').height() - 85;
                }
                else {
                    var newHeight = iframeHeight + "px";
                    $('#bootstrapModalBody').height(newHeight);
                    $('#modalIframeDiv').height(newHeight);
                    return "0";
                }
            }

            $(document).keydown(function(event) { 
                if (event.keyCode == 27) { 
                    closeBootstrapModal();
                    $(".CommentIcon").focus();
                }
            });

            function closeBootstrapModal() {
                $('#bootstrapModal').modal('hide').attr('aria-hidden', 'true'); 
            }

            $(window).resize(function(){
                var windowWidth = $(window).width();
                var standardHeight = $('.SelectedItemCounter').height();
                var titleHeight = $('.SelectedItemTitle').height();

                //if (Window_OnResize) {
                //    Window_OnResize();
                //}

                if(titleHeight > standardHeight) {
                    $('.panel-heading.clearfix >.sharing.SocialIcons > a.CommentIcon > span').css("margin-top", "4px");
                }

                //Replace the Leave Comment button to icon
                $('#narrow-leave-comment-button').html("<span class='las la-comment-alt' style='vertical-align: middle' title='Leave Comment'></span>");

                if(windowWidth <= 539){
                    $(".Agenda").css("padding-top", $(".affix-top").height()+5);
                } else {
                    $(".Agenda").css("padding-top", "18px");
                }
            });

            function CheckiOSDevice() {
                var userAgent = window.navigator.userAgent;
                if (userAgent.match(/iPad/i) || userAgent.match(/iPhone/i)) {
                    // iPad or iPhone
                    document.body.style.removeProperty("overflow");  
                    // console.log("checkIOSDevice called");
                }                                 
            }

            $(document).ready(
                function () {
                    var url = window.location.href;
                    if(url.indexOf("pub-ottawa") != -1 || url.indexOf("pub-support") != -1) {
                        $('.AgendaHeaderDetailsTable').find('.Label:contains("Période:")').text('Date :');
                        $('.AgendaHeaderDetailsTable').find('.Label:contains("Lieu:")').text('Endroit :');
                    }

                    $(".Details").addClass("d-sm-block");
                    $(".Details").attr("aria-live", "polite");
                    $(".panel-heading").prepend("<span class='visuallyhidden'>Agenda item details popup</span>");
                    $(".affix-top").append("<div class='collapse-stream'><i class='las la-video open-player'></i></div>");

                    $(".collapse-stream").on("click", function(i,v){
                        if($(".VideoPlayerContainer").css("display") == "none"){
                            $(".VideoPlayerContainer").show();
                            $(".la-video").addClass("open-player");
                            $(".Agenda").css("padding-top", $(".affix-top").height()+5);
                        } else {
                            $f().pause();
                            $(".la-video").removeClass("open-player");
                            $(".VideoPlayerContainer").hide();
                            $(".Agenda").css("padding-top", "18px");
                        } 
                    });
                    $('.VideoPlayer').append($('#VideoPlayerControl').detach());

                    if($(window).width() <= 539){
                        $(".Agenda").css("padding-top", $(".affix-top").height()*1.05);
                    }
                    
                    // ensure minutes show if the meeting starts or ends partially through an hour //
                    $(".Time > .Minutes").each(
                        function (index, element) {
                            if ($(element).text() != ":00") {
                                $(element).show();
                            }
                        }
                    );

                    $("[data-toggle='tooltip']").tooltip({placement:'top', boundary: 'window', trigger : 'hover'});

                    //Add/Remove public comment icons for each agenda item (real time)
                    var agendaItem = $('.AgendaItem');

                    for(var i = 0; i < agendaItem.length; i++) {
                        var className =agendaItem[i].className.match(/AgendaItem\d+/);
                        if(className) {
                            var id = className[0].replace("AgendaItem", "");
                            if(id){
                                LoadPublicCommentIcons(id);
                            }
                        }
                            
                    }                                                        
                    CheckiOSDevice();
                    var selectedTab = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Tab").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    SelectItem(getParameterByName("Item") || ((window.location.hash || "").replace(/#/g, '')), true, selectedTab);
                
                    
                    $("#package-container").on("scroll", function(){
                        if ($("#package-container").scrollTop() >= 48){
                            $(".affix-top").css("top", "5px");
                        } else {
                            $(".affix-top").css("top", "48px");
                        }
                    });

                    $("[tabindex]").filter(function() {
                        if ($(this).attr("tabindex") > 0){ $(this).attr("tabindex", "0")}
                    });
                    
                    $(".AgendaItemTitle").on("click", function() {
                        tabIndexLoop(document.querySelector(".AgendaItemSelectedDetailsContainer"));
                        var modalContainer = document.querySelector(".Details");
                        var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                        var focusableElements = modalContainer.querySelectorAll(focusableElementsString);

                        focusableElements = Array.prototype.slice.call(focusableElements);
                        if (focusableElements.length > 0){
                            focusableElements[0].focus();
                        }
                    });

                    $(".AgendaItemContainer").each(function(i,v){
                        var commentIcon = $(v).find(".AgendaItemIcons").find(".la-comment-alt");
                        if(commentIcon.length > 0){
                            commentIcon.append("<span class='sr-only'>Public Comments:</span>");
                        }
                    });


                }
                
                
            );

            
            function setVideoPlayerFocus(container) {
                return new Promise((resolve, reject) => {
                    if(container) {
                        resolve("Video Container found");
                    }
                    else{
                        reject("Video Container not found.");
                    }
                })
				.then(data => {
				    tabIndexLoopVideo(container);
				})
				.catch(error => {
				    console.log("An error occurred when setting focus on video container:", error);
				});
            }
			
            function tabIndexLoopVideo(container) {
                container.addEventListener("keydown", trapTabKey);
                function trapTabKey(e) {
                    if (e.keyCode === 9) {
                        if (e.shiftKey) {
                            $('.hilighted .AgendaItemTitle a').focus();
                            $('.hilighted a.SelectableItem').focus();
                        }
                        else {
                            tabIndexLoop(document.querySelector(".AgendaItemSelectedDetailsContainer"));
                        }						
                    }
                }
                var player = $('.fp-play');
                if(player) {
                    player.attr('tabindex', 0);
                    player.focus();
                }
            }
                                                
            function SelectItem(id, scroll, tab) {
                if(tab === undefined) {
                    tab = 'attachments'
                }

                //The function under eScribe.Agenda only take two parameter. In order to make the icon link works, I have to do a work around for this (reuse the scroll parameter).
                //This should not affect the original functionality of the scroll.
                if(scroll == 'attachments' || scroll == 'comments') {
                    tab = scroll;
                    scroll = false;
                }

                // update url //
                window.history.pushState('', '', UpdateQuery("Item", id.toString()));                    
                window.history.pushState('', '', UpdateQuery("Tab", tab));

                var videoContainer = document.querySelector(".VideoPlayerContainer");
                setVideoPlayerFocus(videoContainer);

                //Update the Citizen Comment using ajax.
                LoadPublicComment(id, scroll);

                if(document.readyState === 'complete' ) {
                    LoadPublicCommentIcons(id);
                }

                //// trigger event //
                //$(document).trigger("item:selected", [id, scroll]);
            }

            function LoadPublicComment(id, scroll) {
                if(id) {
                    var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var language = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("lang").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var tabindex = $('#AgendaItemAgendaItem' + id + 'TitleHeader > .AgendaItemNavigate > .AgendaItemTitle > A').attr("tabindex");

                    $.ajax({
                        type: "POST",
                        url: "Meeting.aspx/GeneratePublicComment",
                        data: "{id: '" + id + "', meetingId: '" + meetingId + "', lang: '" + language + "', tabindex: '" + tabindex + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {

                            var items = document.getElementsByClassName('AgendaItemPublicComment' + id);
                            for(var i = items.length - 1; i >= 0 ; i--){
                                var child = items[i];
                                child.parentNode.removeChild(child);
                            }
                            $(msg.d).appendTo(".AgendaItemPublicCommentList");

                            if($('.AgendaItemPublicCommentListIndent' + id).children('.AgendaItemPublicCommentHeader').length == 0) {
                                $('<div class="AgendaItemAttachment AgendaItemPublicCommentHeader" style="display: block;"></div>').appendTo(".AgendaItemPublicCommentListIndent" + id);
                            }
                            $(msg.d).appendTo(".AgendaItemPublicCommentListIndent" + id);

                            // trigger event //
                            $(document).trigger("item:selected", [id, scroll]);
                                
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }
            }

            function LoadPublicCommentIcons(id) {
                if(id) {
                    var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var agendaItem = $('#AgendaItemAgendaItem' + id +'TitleHeader ' + '> .AgendaItemNavigate > ' + '.AgendaItemIcons');
                    if(agendaItem.length == 0) {
                        agendaItem = $('#AgendaItemAgendaItem' + id +'TitleHeader ').parent().find(".AgendaItemIcons");
                    }

                    var isExist = agendaItem.children('.las.la-comment-alt').length;
                    
                    $.ajax({
                        type: "POST",
                        url: "Meeting.aspx/GeneratePublicCommentIcon",
                        data: "{id: '" + id + "', meetingId: '" + meetingId + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {

                            if(msg.d) {
                                if(isExist == 0) {
                                    $(msg.d).appendTo(agendaItem);
                                }
                            }
                            else {
                                if(isExist > 0){
                                    agendaItem.children('.las.la-comment-alt').remove();
                                }
                            }

                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }
            }
                                                
            function UpdateQuery(parameter, value) {
                var loc = window.location.search;

                if (loc.length == 0) {
                    // no query string //
                    if (value.length > 0) {
                        // add parameter directly to url //
                        return window.location.href + "?" + parameter + "=" + encodeURIComponent(value);
                    }
                }
                else {
                    var found = false;
                    if (loc[0] == '?') {
                        loc = loc.substring(1);
                    }
                    var params = loc.split('&');

                    for (var i = 0; i < params.length; i++) {
                        if (params[i].toLowerCase().startsWith(parameter.toLowerCase() + '=')) {
                            found = true;

                            if (value.length > 0) {
                                // set new value //
                                params[i] = parameter + '=' + encodeURIComponent(value);
                            }
                            else {
                                // remove existing value //
                                params[i] = '';
                            }
                        }
                    }
                    if (found == false && value.length > 0) {
                        params.push(parameter + '=' + value);
                    }

                    var qs = '';
                    for (var i = 0; i < params.length; i++) {
                        if (params[i].length > 0) {
                            if (qs.length == 0) {
                                qs = "?" + params[i];
                            }
                            else {
                                qs += "&" + params[i];
                            }
                        }
                    }

                    return window.location.href.replace("?" + loc, qs);
                }
                return window.location.href;
            }

            function tabIndexLoop(modalContainer) {
                modalContainer.addEventListener("keydown", trapTabKey);

                var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                var focusableElements = modalContainer.querySelectorAll(focusableElementsString);
                focusableElements = Array.prototype.slice.call(focusableElements);
                focusableElements = focusableElements.filter(element => $(element).is(':visible'));
				
                var videoContainer = document.querySelector(".VideoPlayerContainer");
				
                var firstTabStop = focusableElements[0];
                var lastTabStop = focusableElements[focusableElements.length - 1];
                if(firstTabStop){
                    if (videoContainer) {
                        var player = $('.fp-play');
                        if(player) {
                            player.focus();
                        }
                    }
                    else {
                        firstTabStop.focus();
                    }
                }
                else {
                    $('.hilighted .AgendaItemTitle a').focus();
                    $('.hilighted a.SelectableItem').focus();
                }

                function trapTabKey(e) {
                    var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                    var focusableElements = modalContainer.querySelectorAll(focusableElementsString);
                    focusableElements = Array.prototype.slice.call(focusableElements);
                    focusableElements = focusableElements.filter(element => $(element).is(':visible'));
					
                    var firstTabStop = focusableElements[0];
                    var lastTabStop = focusableElements[focusableElements.length - 1];
                    if (e.keyCode === 9) {
                        if (e.shiftKey) {
                            if (document.activeElement === firstTabStop) {
                                e.preventDefault();
                                var videoContainer = document.querySelector(".VideoPlayerContainer");
                                if (videoContainer) {
                                    videoContainer.addEventListener("keydown", trapTabKey);
                                    var player = $('.fp-play');
                                    if(player) {
                                        player.focus();
                                    }
                                }
                                else {
                                    $('.hilighted .AgendaItemTitle a').focus();
                                    $('.hilighted a.SelectableItem').focus();
                                }
                            }
                        } 
                        else {
                            if (document.activeElement === lastTabStop) {
                                e.preventDefault();
                                $('.hilighted .AgendaItemTitle a').focus();
                                $('.hilighted a.SelectableItem').focus();
                            }
                        }
                    }
                }
            }
        </script>

        

<script type='text/javascript'>
    $(document).ready(
        function () {
            $('.Details').addClass('hidden-xs').addClass('hidden-sm');
            $('.VideoPlayerContainer').detach();

            $(window).on('resize', Window_OnResize);
        }
    );

    function Video_LoadBookmark() { }

    function Window_OnResize() {
        setTimeout(
            function () {
                try {
                    var maxheight = 0;
                    if ($(".navbar-fixed-bottom").is(":visible")) {
                        maxheight = $(window).height() - $(".navbar-nav").height() - $(".navbar-fixed-bottom").height();
                    }
                    else {
                        maxheight = $(window).height() - $(".navbar-nav").height();
                    }

                    $(".AgendaItemAttachmentsArea").css("max-height", "");

                    if (detailsheight() > maxheight) {
                        //need to substract the panel heading height (dynamic depending on user input) and also need to substract 55 for other static components (space between panel elements)
                        var contentMaxHeight = maxheight - $('.AgendaItemSelectedDetails > div.panel-heading').height() - 55;
                        $(".AgendaItemAttachmentsArea").css("max-height", contentMaxHeight + "px");

                        //This will never run ... not sure why it is here
                        if (detailsheight() <= maxheight) {
                            $(".AgendaItemAttachmentsArea").css("max-height", ($(".AgendaItemAttachmentsArea").height() - (detailsheight() - maxheight)) + "px");
                        }
                    }
                }
                catch (e) {
                }
            },
            1
        );
    }
</script>

        <div id="package-container" style="overflow: auto; height: 100%">
            <nav class="navbar navbar-expand-lg navbar-light navbar-fixed-top navbarbg" role="navigation">
                <div class="container">
                        <ul class="nav navbar-nav narbar-left">
                            <li class="nav-item dropdown">
                                <a href="#" id="navbarDropdown" class="nav-link dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color: white" tabindex="1">
                                    Agenda
                                </a>
                                <span class="caret"></span>
                                <ul class="dropdown-menu packageNav" role="menu" id="Agendadropdownmenu" aria-labelledby="navbarDropdown">
                                    
                                            
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=d0f46ee8-dbd2-4f80-99aa-e8d7fa5a0742&Agenda=Agenda&lang=English' tabindex='1' lang='en'>
                                                    Agenda
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=d0f46ee8-dbd2-4f80-99aa-e8d7fa5a0742&Agenda=Agenda&lang=French' tabindex='1' lang='fr'>
                                                    Ordre du jour
                                                </a>
                                            </li>
                                        
                                        
                                    <li class='d-none'>
                                        <a class="VideoLink dropdown-item" href='' title='Open Video in new Window' target="_blank" tabindex="6">
                                            <span class="HiddenAnchorDescription">
                                                Open Video in new Window</span>
                                            Video
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                </div>
            </nav>

            <main class="container body-content" style="background-color: #ffffff">
                <ARTICLE class='Meeting row' ><SECTION class='Agenda col-xs-12 col-sm-12 col-md-8 col-lg-8' ><DIV style="padding:1em; width:auto;" ><HEADER class='AgendaHeader' style="padding:0px 4px" ><DIV class='AgendaHeaderLogo' ><img  src='filestream.ashx?DocumentId=99730' alt='Ottawa Logo'  /></DIV><H1 Id='AgendaHeaderTitle' class='AgendaHeaderTitle' >Committee of Adjustment<br/><br/>Panel 1<br/></H1><DIV class='AgendaHeaderDetails' ><DIV class='AgendaHeaderDetailsTable' ><DIV class='AgendaMeetingNumber' ><DIV class='Value AgendaMeetingNumberText' ></DIV></DIV><DIV class='AgendaTimeContainer' ><TR ><DIV class='Label' ></DIV><TD class='Value' colspan='0' headers='' ><DIV class='AgendaMeetingTime Value' ><TIME datetime='2022-09-07' ><SPAN class='Date' ><SPAN class='DayOfWeek' >Wednesday, </SPAN>September 07, 2022<SPAN class='DayOfWeek' ></SPAN></SPAN></TIME></DIV></TD></TR></DIV><DIV class='AgendaTimeContainer' ><DIV ><DIV class='AgendaMeetingTime Value' ><SPAN class='AgendaMeetingTimeStart' ><TIME datetime='13:00' ><SPAN class='Time' > 1<SPAN class='Minutes' >:00</SPAN><SPAN class='Meridian' > P</SPAN><SPAN class='Meridian Period' >.</SPAN><SPAN class='Meridian' >m</SPAN><SPAN class='Meridian Period' >.</SPAN></SPAN></TIME></SPAN><SPAN class='AgendaMeetingTimeEnd' > - <TIME datetime='14:00' ><SPAN class='Time' > 2<SPAN class='Minutes' >:00</SPAN><SPAN class='Meridian' > P</SPAN><SPAN class='Meridian Period' >.</SPAN><SPAN class='Meridian' >m</SPAN><SPAN class='Meridian Period' >.</SPAN></SPAN></TIME></SPAN></DIV></DIV></DIV><DIV class='AgendaMeetingLocation' ><DIV class='Value LocationValue' ><DIV class='Location' >Electronic Participation</DIV><DIV class='Address1' ></DIV><DIV class='Address2' ></DIV><DIV class='Address3' ></DIV></DIV></DIV><DIV ><DIV ><DIV style="height:5px" ></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaHeaderSpecialComments' ><p style="text-align&#58;center;"><strong><span>This hearing will be held through electronic participation in accordance with the&#160;<em>Statutory Powers Procedure Act</em>.&#160;To help stop the spread of COVID-19, the Committee of Adjustment will continue to hold online hearings until further notice.</span></strong></p>
<p style="text-align&#58;center;"><strong>The hearing can be viewed on the Committee of Adjustment </strong><span><a href="https&#58;//www.youtube.com/channel/UCZ9Z3-VJcSMSqrWRORMlRjQ"><strong>YouTube</strong></a></span><strong> page. For more information, visit </strong><span><a href="https&#58;//ottawa.ca/en/planning-development-and-construction/committee-adjustment"><strong>Ottawa.ca/CommitteeofAdjustment</strong></a><strong><em> </em></strong></span></p>
<p style="text-align&#58;center;"><em>Simultaneous interpretation in both official languages, accessible formats and communication supports are available for any specific agenda item by calling the Committee information number at least 72 hours in advance of the hearing.</em></p>
<p style="text-align&#58;left;"><span style="text-decoration&#58;underline;"><strong>Panel Members&#58;</strong></span></p>
<p style="text-align&#58;left;"><strong><span>Chair&#58;&#160; John Blatherwick</span></strong></p>
<p style="text-align&#58;left;"><strong><span>Members&#58;&#160; Bonnie Oakes Charron, Heather MacLean, Stan Wilder, Michael Wildman</span></strong></p></DIV><DIV style="float:none;clear:both" ></DIV><HR class='AgendaHeaderSeparator' /></HEADER><DIV class='AgendaItems' ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem1' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem1TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(1);" >CALL TO ORDER</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem2' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem2TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(2);" >OPENING REMARKS</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem3' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem3TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(3);" >DECLARATIONS OF INTEREST</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem4' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem4TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(4);" >CONFIRMATION OF MINUTES</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p><span class="NormalTextRun SCXW96173948 BCX0">The minutes of August 3 and August 17, 202</span><span class="NormalTextRun SCXW96173948 BCX0">2</span><span class="NormalTextRun SCXW96173948 BCX0"> were adopted.</span></p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem5' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem5TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(5);" >ADJOURNMENTS</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem37' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem37TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >1.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(37);" >D08-01-22/B-00222 &amp; B-00251, 19A &amp; 19B Garland (Ward 15- Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned&#160;Sine Die.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem38' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem38TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >2.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(38);" >D08-02-22/A-00207, 19A &amp; 19B Garland (Ward 15- Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned Sine Die.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem39' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem39TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >3.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(39);" >D08-01-22/B-00205 &amp; B-00206, 674 de l'Eglise (Ward 13 - Rideau-Rockcliffe)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned to September 21, 2022.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem40' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem40TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >4.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(40);" >D08-02-22/A-00187 & A-00188, 674 de L'Eglise (Ward 13 - Rideau-Rockcliffe)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned to September 21, 2022.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem41' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem41TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(41);" >D08-01-22/B-00247, 424 Avondale (Ward 15 - Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned to September 21, 2022.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem42' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem42TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >6.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(42);" >D08-02-22/A-00237 - A-00238, 424 Avondale (Ward 15 - Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned to September 21, 2022.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem43' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem43TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >7.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(43);" >D08-02-22/A-00231, 480 MacLaren (Ward 14 - Somerset)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>Adjourned to September 21, 2022.</p></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem22' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem22TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(22);" >HEARING OF APPLICATIONS</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>T<span class="TextRun SCXW9169389 BCX0" data-contrast="auto"><span class="NormalTextRun SCXW9169389 BCX0">he following applications were heard.</span></span></p></DIV></DIV></DIV></DIV></DIV><DIV ><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem28' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem28TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >1.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(28);" >D08-01-22/B-00222 & B-00251, 19A & 19B Garland (Ward 15- Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(28, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99726" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Notice B(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Notice B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99727" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Avis B(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Avis B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99728" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19A  19B Garland Circulation(1).pdf' target='_blank' ><SPAN class='Link' >19A  19B Garland Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99729" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a  19b Garland- draft plan(1).pdf' target='_blank' ><SPAN class='Link' >19a  19b Garland- draft plan(1).pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Sandra Didiomete)</p><br><p>To subdivide the property into two parcels for the existing long semi-detached dwelling, with a reduced parking space length for both units.</p><br><p>(Agent&#58; A. Paquette)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem27' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem27TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >2.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(27);" >D08-02-22/A-00207, 19A & 19B Garland (Ward 15- Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(27, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99679" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Notice A(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99680" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Avis A(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99681" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19A  19B Garland Circulation A.pdf' target='_blank' ><SPAN class='Link' >19A  19B Garland Circulation A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99682" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Site Plan A.pdf' target='_blank' ><SPAN class='Link' >19a 19b Site Plan A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99683" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a  19b Garland- elevations(1).pdf' target='_blank' ><SPAN class='Link' >19a  19b Garland- elevations(1).pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Sandra Didiomete)</p><br><p>To subdivide the property into two parcels for the existing long semi-detached dwelling, with a reduced parking space length for both units.</p><br><p>(Agent&#58; A. Paquette)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem29' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem29TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >3.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(29);" >D08-02-22/A-00224 & A-00225, 574 Edison (Ward 15- Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(29, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99684" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Notice A(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99685" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Avis A(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99686" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Circulation(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99687" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Site Plan(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Site Plan(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99688" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison - Elevations(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison - Elevations(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99689" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00224, A-00225 574 Edison Avenue (Ward 15) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00224, A-00225 574 Edison Avenue (Ward 15) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99690" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00224, A-00225 574 Edison Avenue (Ward 15) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00224, A-00225 574 Edison Avenue (Ward 15) Decision_fr.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(11625195 Canada Inc.)</p><br><p>To permit a reduced interior side yard setback for the construction of semi-detached dwelling with secondary dwelling units.</p><br><p>(Agent&#58; R. Hill)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem30' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem30TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >4.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(30);" >D08-02-22/A-00230, 12 West Presland (Ward 13 - Rideau-Rockcliffe)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(30, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99691" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland Notice A(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99692" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland Avis A(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99693" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland Circulation(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99694" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland - Drawings(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland - Drawings(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99695" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00230 12 West Presland Road (Ward 13) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00230 12 West Presland Road (Ward 13) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99696" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00230 12 West Presland Road (Ward 13) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00230 12 West Presland Road (Ward 13) Decision_fr.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Tammy Paul)</p><br><p>To permit an increased footprint for a new coach house.</p><br><p>(Agent&#58; A. Bisson)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem35' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem35TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >5.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(35);" >D08-01-22/B-00205 & B-00206, 674 de l'Eglise (Ward 13 - Rideau-Rockcliffe)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(35, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99716" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674, 676 de L'eglise Notice B(1).pdf' target='_blank' ><SPAN class='Link' >674, 676 de L'eglise Notice B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99717" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674, 676 de L'eglise Avis B(1).pdf' target='_blank' ><SPAN class='Link' >674, 676 de L'eglise Avis B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99718" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 rue d'eglise Circulation(2).pdf' target='_blank' ><SPAN class='Link' >674 rue d'eglise Circulation(2).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99719" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise RPLAN(1).pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise RPLAN(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99720" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise Site Plan.pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise Site Plan.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Mehrzad Ziai, Mehran Frohar, Ninava Ltd. &amp; Henga Ottawa Realty Inc.)</p><br><p>To subdivide the property into two separate parcels for two new three-unit dwellings with reduced lot areas and lot widths.</p><br><p>(Agent&#58;&#160; P. Robinson)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem36' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem36TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >6.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(36);" >D08-02-22/A-00187 & A-00188, 674 de L'Eglise (Ward 13 - Rideau-Rockcliffe)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(36, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99721" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 676 de L'eglise Notice A(1).pdf' target='_blank' ><SPAN class='Link' >674 676 de L'eglise Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99722" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 676 de L'eglise Avis A(1).pdf' target='_blank' ><SPAN class='Link' >674 676 de L'eglise Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99723" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 rue d'eglise Circulation(3).pdf' target='_blank' ><SPAN class='Link' >674 rue d'eglise Circulation(3).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99724" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise Site Plan(1).pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise Site Plan(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99725" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise Elevations(1).pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise Elevations(1).pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Mehrzad Ziai, Mehran Frohar, Ninava Ltd. &amp; Henga Ottawa Realty Inc.)</p><br><p>To subdivide the property into two separate parcels for two new three-unit dwellings with reduced lot areas and lot widths.</p><br><p>(Agent&#58;&#160; P. Robinson)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem25' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem25TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >7.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(25);" >D08-01-22/B-00247, 424 Avondale (Ward 15 - Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(25, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99701" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Notice B.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Notice B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99702" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Avis B.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Avis B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99703" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Circulation.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99704" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale - Plans.pdf' target='_blank' ><SPAN class='Link' >424 Avondale - Plans.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Sherbrooke Urban Developments Ltd.)</p><br><p>To subdivide the property in two for two new dwellings with front-facing garages, reduced lot widths and interior side yards and increased building height.</p><br><p>(Agent&#58; J. D'Aoust)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem26' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem26TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >8.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(26);" >D08-02-22/A-00237 - B-00238, 424 Avondale (Ward 15 - Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(26, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99705" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Notice A.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Notice A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99706" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Avis A.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Avis A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99707" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Circulation(1).pdf' target='_blank' ><SPAN class='Link' >424 Avondale Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99708" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale - Plans(1).pdf' target='_blank' ><SPAN class='Link' >424 Avondale - Plans(1).pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(Sherbrooke Urban Developments Ltd.)</p><br><p>To subdivide the property in two for two new dwellings with front-facing garages, reduced lot widths and interior side yards and increased building height.</p><br><p>(Agent&#58; J. D'Aoust)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem23' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem23TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >9.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(23);" >D08-01-22/B-00231 & B-00232, 208-210 Cowley (Ward 15 - Kitchissippi)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(23, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99666" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='208-210  Cowley Notice B.pdf' target='_blank' ><SPAN class='Link' >208-210  Cowley Notice B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99667" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='208-210  Cowley Avis B.pdf' target='_blank' ><SPAN class='Link' >208-210  Cowley Avis B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99668" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='208-210 Cowley Circulation.pdf' target='_blank' ><SPAN class='Link' >208-210 Cowley Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99669" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='210 Cowley Avenue_Pt Lt 17 RP 219 (West Cowley Avenue)_Rplan_D1_to planner July 12-22.pdf' target='_blank' ><SPAN class='Link' >210 Cowley Avenue_Pt Lt 17 RP 219 (West Cowley Avenue)_Rplan_D1_to planner July 12-22.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99670" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='210 Cowley Background (2020 Documents)info.pdf' target='_blank' ><SPAN class='Link' >210 Cowley Background (2020 Documents)info.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99671" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision.pdf' target='_blank' ><SPAN class='Link' >B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99672" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision_fr.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p style="text-align&#58;left;">(Ever Home Construction Inc)</p>
<p style="text-align&#58;left;">To subdivide the property into two separate parcels with one half of the semi-detached dwelling on each parcel.</p>
<p style="text-align&#58;left;">(Agent&#58; P. Robinson)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem31' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem31TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >10.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(31);" >D08-02-22/A-00231, 480 MacLaren (Ward 14 - Somerset)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(31, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99697" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren Notice A(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99698" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren Avis A(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99699" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren Circulation(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99700" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren - Site Plan(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren - Site Plan(1).pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(1576237 Ontario Inc.)</p><br><p>To permit two additional rooms in a 16-room rooming unit.</p><br><p>(Agent&#58; M. Imeson)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem32' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem32TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >11.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(32);" >D08-02-22/A-00243, 38 Adelaide (Ward 17 - Capital)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(32, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99709" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide Notice A.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide Notice A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99710" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide Avis A.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide Avis A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99711" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide Circulation.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99712" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide - Plans.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide - Plans.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99713" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide - Survey.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide - Survey.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99714" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00243 38 Adelaide Street (Ward 17) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00243 38 Adelaide Street (Ward 17) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99715" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00243 38 Adelaide Street (Ward 17) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00243 38 Adelaide Street (Ward 17) Decision_fr.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>(C&amp;E Renos Inc.)</p><br><p>To permit a reduced lot width for a new detached dwelling with a secondary dwelling unit.</p><br><p>(Agent&#58; B. Li)</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem24' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H3 Id='AgendaItemAgendaItem24TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" >12.</DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(24);" >D08-02-22/A-00029, 121 Evelyn (Ward 17 - Capital)</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H3><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><a href="javascript:SelectItem(24, 'attachments')" tabIndex='-1' ><img Title='Attachments'  src='./_layouts/images/eScribe/attachment.svg' alt='This item has attachments.'  role='presentation' /></a>&nbsp;<SPAN style="width:8px" ></SPAN></DIV><DIV class='visible-xs visible-sm' style=" padding:1px " ><DIV class='AgendaItemAttachmentsList indent' ><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99673" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn Notice A(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99674" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn Avis A(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99675" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn Circulation(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99676" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn - Plans - June 8, 2022(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn - Plans - June 8, 2022(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99677" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00029 121 Evelyn Avenue (Ward 17) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00029 121 Evelyn Avenue (Ward 17) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99678" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00029 121 Evelyn Avenue (Ward 17) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00029 121 Evelyn Avenue (Ward 17) Decision_fr.pdf</SPAN></a></DIV></DIV></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p><em>Adjourned from April 6, 2022</em></p><br><p>(Jeffrey Gordon &amp; Anne-Raphaelle Audoin)</p><br><p>To permit reduced corner and interior side yard setbacks, an increase in garage projection and increase in driveway width for the renovations of the existing single-family dwelling.</p><br><p>(Agent&#58; J. Hamel)</p></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem7' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem7TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(7);" >OTHER BUSINESS</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>None.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem8' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem8TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(8);" >ADJOURNMENT</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p>3&#58;23 p.m.</p></DIV></DIV></DIV></DIV></DIV></DIV><DIV class='AgendaItemContainer indent' style="width:auto" ><DIV class='AgendaItem AgendaItem9' style="width:100%" ><DIV class='AgendaItemTitleRow' ><H2 Id='AgendaItemAgendaItem9TitleHeader' style="display: inline-block;" ><DIV class='AgendaItemCounter' style="display:inline-block;" ></DIV><DIV class='AgendaItemNavigate indent' ><DIV class='AgendaItemTitle' style="width:auto;display:inline-block;" ><a tabindex='0' href="javascript:SelectItem(9);" >Annex A - Public Participation Details</a></DIV><DIV class='AgendaItemCategory' ><DIV style="text-decoration:none" ></DIV></DIV><DIV class='AgendaItemSponsors' ><DIV style="text-decoration:none;" ></DIV></DIV></DIV></H2><DIV class='AgendaItemIcons' style="text-decoration:none;display:inline-block;" ><DIV style="display:inline-block; text-decoration:none" ></DIV><SPAN style="width:8px" ></SPAN>&nbsp;<SPAN style="width:8px" ></SPAN></DIV></DIV><DIV class='AgendaItemContentRow indent' ><DIV class='AgendaItemDescription RichText' ><DIV ><DIV ><p style="font-weight&#58;400;"><strong>Remote Participation – Committee Members, Staff and General Public</strong></p>
<p style="font-weight&#58;400;">City facilities are temporarily closed to help stop the spread of COVID-19. Although in-person Committee of Adjustment hearings have been postponed until further notice, there are several ways in which the general public can participate in this electronic hearing.</p>
<p style="font-weight&#58;400;">The chosen technology for this hearing is Zoom (https&#58;//zoom.us/) which allows for participation by computers and mobile devices. To reduce the number of participants in the electronic hearing and to allow for a more efficient process, the general public will be asked to participate by viewing the webcast via the Committee of Adjustment YouTube channel at<span>&#160;</span><a href="https&#58;//www.youtube.com/channel/UCZ9Z3-VJcSMSqrWRORMlRjQ">https&#58;//www.youtube.com/channel/UCZ9Z3-VJcSMSqrWRORMlRjQ</a>. You can also contact<span>&#160;</span><a href="http&#58;//cmap185/SIRE/cache/cofa%40ottawa.ca"><strong>cofa@ottawa.ca</strong></a><span>&#160;</span>to obtain the link.</p>
<p style="font-weight&#58;400;"><strong>Submit comments in writing</strong>&#58; submit comments in writing, by email, to&#160;<a href="http&#58;//cmap185/SIRE/cache/cofa%40ottawa.ca"><strong>cofa@ottawa.ca</strong></a>. Comments received&#160;<strong>by noon (12 p.m.) the Monday before the hearing</strong>&#160;will be provided to Committee Members prior to the hearing. Comments received after this time will be forwarded to Committee Members as soon as possible but may not be received by Committee Members prior to the hearing.</p>
<p style="font-weight&#58;400;"><strong>Submit verbal comments in advance of the hearing (Prior to noon (12 p.m.) the Monday before the hearing)</strong>&#160;you may call the Coordinator to have comments transcribed (contact details below).</p>
<p style="font-weight&#58;400;"><strong>Register to Speak at the Committee Hearing prior to 4 p.m. the Monday before the hearing</strong>, by phone or e-mail by contacting the Coordinator (contact details below). Details for those wishing to make visual presentations to the Committee can be provided to you upon request, by email.</p>
<p style="font-weight&#58;400;">Upon receipt of your registration to speak at the hearing, delegates will be provided the Zoom hearing details and password prior to the hearing.</p>
<p style="font-weight&#58;400;">For more information, please contact the Coordinator by e-mail at&#160;<a href="http&#58;//cmap185/SIRE/cache/cofa%40ottawa.ca%C2%A0"><strong>cofa@ottawa.ca</strong>&#160;</a>or (613) 580-2436.</p></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION><SECTION class='Details col-xs-3 col-sm-3 col-md-4 col-lg-4 col-xs-offset-9 col-sm-offset-9' ><DIV class='affix affix-top col-xs-3 col-sm-3 col-md-4 col-lg-4 col-xs-offset-9 col-sm-offset-9 d-sm-block' style="width:inherit; padding-right:5%;" ><DIV class='panel panel-default' style="width:auto;box-shadow:3px 3px 3px rgba(0,0,0,.33);" ><DIV class='VideoPlayerContainer panel panel-default' ><DIV class='VideoPlayer' ></DIV></DIV><DIV class='visible-md visible-lg AgendaItemSelectedDetailsContainer' ><DIV class='panel-body AgendaItemAttachment AgendaItemAttachmentNotSelected' >No Item Selected</DIV><DIV class='panel panel-default AgendaItemSelectedDetails' style="display:none" ><DIV class='panel-heading' ><SPAN class='SelectedItemCounter' ></SPAN> &nbsp; <SPAN class='SelectedItemTitle' ></SPAN></DIV><DIV class='panel-body' ><DIV class='AgendaItemAttachmentsArea' ><DIV class='AgendaItemAttachmentsList' ><DIV class='AgendaItemAttachment AgendaItemAttachmentNone' >This item has no attachments</DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99666" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='208-210  Cowley Notice B.pdf' target='_blank' ><SPAN class='Link' >208-210  Cowley Notice B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99667" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='208-210  Cowley Avis B.pdf' target='_blank' ><SPAN class='Link' >208-210  Cowley Avis B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99668" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='208-210 Cowley Circulation.pdf' target='_blank' ><SPAN class='Link' >208-210 Cowley Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99669" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='210 Cowley Avenue_Pt Lt 17 RP 219 (West Cowley Avenue)_Rplan_D1_to planner July 12-22.pdf' target='_blank' ><SPAN class='Link' >210 Cowley Avenue_Pt Lt 17 RP 219 (West Cowley Avenue)_Rplan_D1_to planner July 12-22.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99670" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='210 Cowley Background (2020 Documents)info.pdf' target='_blank' ><SPAN class='Link' >210 Cowley Background (2020 Documents)info.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99671" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision.pdf' target='_blank' ><SPAN class='Link' >B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment23' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99672" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >B-00231, B-00232 208, 210 Cowley Avenue (Ward 15) Decision_fr.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99673" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn Notice A(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99674" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn Avis A(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99675" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn Circulation(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99676" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='121 Evelyn - Plans - June 8, 2022(1).pdf' target='_blank' ><SPAN class='Link' >121 Evelyn - Plans - June 8, 2022(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99677" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00029 121 Evelyn Avenue (Ward 17) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00029 121 Evelyn Avenue (Ward 17) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment24' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99678" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00029 121 Evelyn Avenue (Ward 17) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00029 121 Evelyn Avenue (Ward 17) Decision_fr.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99679" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Notice A(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99680" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Avis A(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99681" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19A  19B Garland Circulation A.pdf' target='_blank' ><SPAN class='Link' >19A  19B Garland Circulation A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99682" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Site Plan A.pdf' target='_blank' ><SPAN class='Link' >19a 19b Site Plan A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment27' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99683" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a  19b Garland- elevations(1).pdf' target='_blank' ><SPAN class='Link' >19a  19b Garland- elevations(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99684" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Notice A(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99685" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Avis A(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99686" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Circulation(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99687" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison Site Plan(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison Site Plan(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99688" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='574 Edison - Elevations(1).pdf' target='_blank' ><SPAN class='Link' >574 Edison - Elevations(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99689" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00224, A-00225 574 Edison Avenue (Ward 15) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00224, A-00225 574 Edison Avenue (Ward 15) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment29' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99690" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00224, A-00225 574 Edison Avenue (Ward 15) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00224, A-00225 574 Edison Avenue (Ward 15) Decision_fr.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99691" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland Notice A(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99692" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland Avis A(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99693" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland Circulation(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99694" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='12 West Presland - Drawings(1).pdf' target='_blank' ><SPAN class='Link' >12 West Presland - Drawings(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99695" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00230 12 West Presland Road (Ward 13) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00230 12 West Presland Road (Ward 13) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment30' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99696" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00230 12 West Presland Road (Ward 13) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00230 12 West Presland Road (Ward 13) Decision_fr.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99697" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren Notice A(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99698" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren Avis A(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99699" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren Circulation(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment31' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99700" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='480 MacLaren - Site Plan(1).pdf' target='_blank' ><SPAN class='Link' >480 MacLaren - Site Plan(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99701" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Notice B.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Notice B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99702" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Avis B.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Avis B.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99703" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Circulation.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment25' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99704" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale - Plans.pdf' target='_blank' ><SPAN class='Link' >424 Avondale - Plans.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99705" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Notice A.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Notice A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99706" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Avis A.pdf' target='_blank' ><SPAN class='Link' >424 Avondale Avis A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99707" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale Circulation(1).pdf' target='_blank' ><SPAN class='Link' >424 Avondale Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment26' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99708" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='424 Avondale - Plans(1).pdf' target='_blank' ><SPAN class='Link' >424 Avondale - Plans(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99709" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide Notice A.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide Notice A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99710" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide Avis A.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide Avis A.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99711" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide Circulation.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide Circulation.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99712" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide - Plans.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide - Plans.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99713" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='38 Adelaide - Survey.pdf' target='_blank' ><SPAN class='Link' >38 Adelaide - Survey.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >6.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99714" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00243 38 Adelaide Street (Ward 17) Decision.pdf' target='_blank' ><SPAN class='Link' >A-00243 38 Adelaide Street (Ward 17) Decision.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment32' ><SPAN class='Sequence' >7.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99715" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='A-00243 38 Adelaide Street (Ward 17) Decision_fr.pdf' target='_blank' ><SPAN class='Link' >A-00243 38 Adelaide Street (Ward 17) Decision_fr.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99716" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674, 676 de L'eglise Notice B(1).pdf' target='_blank' ><SPAN class='Link' >674, 676 de L'eglise Notice B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99717" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674, 676 de L'eglise Avis B(1).pdf' target='_blank' ><SPAN class='Link' >674, 676 de L'eglise Avis B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99718" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 rue d'eglise Circulation(2).pdf' target='_blank' ><SPAN class='Link' >674 rue d'eglise Circulation(2).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99719" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise RPLAN(1).pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise RPLAN(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment35' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99720" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise Site Plan.pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise Site Plan.pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99721" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 676 de L'eglise Notice A(1).pdf' target='_blank' ><SPAN class='Link' >674 676 de L'eglise Notice A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99722" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 676 de L'eglise Avis A(1).pdf' target='_blank' ><SPAN class='Link' >674 676 de L'eglise Avis A(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99723" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674 rue d'eglise Circulation(3).pdf' target='_blank' ><SPAN class='Link' >674 rue d'eglise Circulation(3).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99724" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise Site Plan(1).pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise Site Plan(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment36' ><SPAN class='Sequence' >5.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99725" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='674-676 De L'Eglise Elevations(1).pdf' target='_blank' ><SPAN class='Link' >674-676 De L'Eglise Elevations(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >1.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99726" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Notice B(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Notice B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >2.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99727" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a 19b Garland Avis B(1).pdf' target='_blank' ><SPAN class='Link' >19a 19b Garland Avis B(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >3.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99728" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19A  19B Garland Circulation(1).pdf' target='_blank' ><SPAN class='Link' >19A  19B Garland Circulation(1).pdf</SPAN></a></DIV><DIV class='AgendaItemAttachment AgendaItemAttachment28' ><SPAN class='Sequence' >4.</SPAN><a class='Link' tabindex='0' href="filestream.ashx?DocumentId=99729" data-toggle='tooltip' data-html='true' data-container='body' data-original-title='19a  19b Garland- draft plan(1).pdf' target='_blank' ><SPAN class='Link' >19a  19b Garland- draft plan(1).pdf</SPAN></a></DIV></DIV></DIV></DIV></DIV></DIV></DIV></DIV></SECTION></ARTICLE><script type='text/javascript'>
function toggleSelectedDetails(ItemId, tab) {
    window.history.pushState('', '', UpdateQuery('Tab', tab));

    if (tab == 'comments') {
        $('#selectedTabAgendaComments').css({'font-weight':'bold', 'color':'black'});
        $('#selectedTabAgendaComments').attr({'aria-selected':'true'});
        $('#selectedTabAgendaAttachment').css({'font-weight':'normal', 'color': '#595959'});
        $('#selectedTabAgendaAttachment').attr({'aria-selected':'false'});
        $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
        $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'true'});
        $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'normal','color': '#595959' });
        $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'false'});

        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
            $('.AgendaItemAttachmentNone').hide();
        }
        else {
            $('.AgendaItemAttachment' + ItemId).hide();
        }

        if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
            $('.AgendaItemPublicCommentNone').show();
        }
        else {
            $('.AgendaItemPublicComment' + ItemId).show();
        }
        window.dispatchEvent(new Event('resize'));
    }
    else {
        $('#selectedTabAgendaAttachment').css({'font-weight':'bold', 'color':'black'});
        $('#selectedTabAgendaAttachment').attr({'aria-selected':'true'});
        $('#selectedTabAgendaComments').css({'font-weight':'normal', 'color': '#595959'});
        $('#selectedTabAgendaComments').attr({'aria-selected':'false'});
        $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
        $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'true'});
        $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'normal','color': '#595959' });
        $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'false'});

        if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
            $('.AgendaItemPublicCommentNone').hide();
        }
        else {
            $('.AgendaItemPublicComment' + ItemId).hide();
        }

        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
            $('.AgendaItemAttachmentNone').show();
        }
        else {
            $('.AgendaItemAttachment' + ItemId).show();
        }
    }

    var attachmentCounts = $('.AgendaItemPublicCommentList > .AgendaItemAttachment' + ItemId).length;
    var commentCounts = $('.AgendaItemPublicCommentList > .AgendaItemPublicComment' + ItemId).length;
                                
    $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
    $('#selectedTabAgendaCommentsCount').first().text(' (' + commentCounts + ')');
    
    $('#selectedTabAgendaAttachmentCount' + ItemId).first().text(' (' + attachmentCounts + ') ');
    $('#selectedTabAgendaCommentsCount' + ItemId).first().text(' (' + commentCounts + ')');
}

function hilightItem(ItemId) {
    var tabindex = $('#AgendaItemAgendaItem' + ItemId + 'TitleHeader > .AgendaItemNavigate > .AgendaItemTitle > A').attr('tabindex');
    $('#selectedTabAgendaAttachment').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaAttachmentCount').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaComments').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });
    $('#selectedTabAgendaCommentsCount').attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });
    $('#selectedTabAgendaAttachment' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaAttachmentCount' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "attahcments")', 'tabindex': tabindex });
    $('#selectedTabAgendaComments' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });
    $('#selectedTabAgendaCommentsCount' + ItemId).attr({'href': 'javascript: toggleSelectedDetails(' + ItemId + ', "comments")', 'tabindex': tabindex });

    $('.hilighted').removeClass('hilighted');
    $('.AgendaItemAttachment').hide();
    $('.AgendaItemAttachment').parent().hide();
    $('.AgendaItemPublicComment').hide();

    if (ItemId != '') {
        var item = '.AgendaItem' + ItemId;

        $(item + ' .AgendaItemTitleRow').addClass('hilighted');
        $(item + ' .LateClosedAgendaItemTitleRow').addClass('hilighted');
        $('.AgendaItemAttachementsHeader').show();
        $('.AgendaItemPublicCommentHeader').show();

        $('.AgendaItemSelectedDetails').show();
        $('.SelectedItemCounter').text($(item + ' .AgendaItemCounter').text());
        $('.SelectedItemTitle').text($(item + ' .AgendaItemTitle').text());

        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
            $('.AgendaItemAttachmentNone').show();
            $('.AgendaItemAttachmentNone').parent().show();
        }
        else {
            $('.AgendaItemAttachment' + ItemId).show();
            $('.AgendaItemAttachment' + ItemId).parent().show();
        }
        
        if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
            $('.AgendaItemPublicCommentNone').show();
            $('.AgendaItemPublicCommentNone').parent().show();
        }
        else {
            $('.AgendaItemPublicComment' + ItemId).show();
            $('.AgendaItemPublicComment' + ItemId).parent().show();
        }
    }
    else {  
        $('.AgendaItemSelectedDetails').hide();
        $('.AgendaItemAttachmentNotSelected').show();
    }
}</script><script type='text/javascript'></script>
            </main>
        </div>
        <!-- Bootstrap Modal -->
        <div id='bootstrapModal' aria-live="polite" aria-hidden="true" class='modal fade in' style='display: none;'>
            <div class='modal-dialog modal-dialog-scrollable'>
                <div class='modal-content'>
                    <div class='modal-header'>
                        <h3 id='bootstrapModalTitle' class='modal-title' style='font-size: 17px'>Title</h3>
                        <button type='button' class='close' data-dismiss='modal'><span aria-hidden='true'>×</span> <span class='sr-only'>close</span></button>
                    </div>
                    <div id='bootstrapModalBody' class='modal-body' style="padding: 0px">
                        <div class='embed-responsive z-depth-1-half' id="modalIframeDiv">
                            <iframe id="modalIframe" title="Share Content Options" class='embed-responsive-item' src='' allowfullscreen></iframe>
                        </div>
                    </div>
                    <div class='modal-footer' id="bootstrapModalFooter" style='margin-top: 0; min-height: 55px;'>
                    </div>
                </div>
            </div>
        </div>

        <footer class="navbar navbar-default navbar-fixed-bottom navbarbg">
            <div class="container text-right">
                <div class="navbar-inner navbar-content-center footeralign">
                    <div class="float-right">
                        
                        <copyright class="poweredBy"><a href="https://escribemeetings.com" target="_blank" id="lnkPoweredBy">Powered by eSCRIBE Software Ltd.</a></copyright>
                        
                    </div>
                </div>
            </div>
        </footer>

        <script type="text/javascript">
            var AgendaSize = parseFloat($(".Agenda *").css('font-size'));
            var TitleSize = parseFloat($(".AgendaHeaderTitle").css('font-size'));
            var MeetingTitle = "Committee of Adjustment - Panel 1 - September 07, 2022";
            var itemTitles = { };
            var Sharing = false;
            var AllowComment = "False";
			var PublicCommentSettings = [{"Id":1,"AllowPublicComment":false},{"Id":2,"AllowPublicComment":false},{"Id":3,"AllowPublicComment":false},{"Id":4,"AllowPublicComment":false},{"Id":5,"AllowPublicComment":false},{"Id":7,"AllowPublicComment":false},{"Id":8,"AllowPublicComment":false},{"Id":9,"AllowPublicComment":false},{"Id":10,"AllowPublicComment":false},{"Id":11,"AllowPublicComment":false},{"Id":13,"AllowPublicComment":false},{"Id":14,"AllowPublicComment":false},{"Id":15,"AllowPublicComment":false},{"Id":16,"AllowPublicComment":false},{"Id":17,"AllowPublicComment":false},{"Id":18,"AllowPublicComment":false},{"Id":19,"AllowPublicComment":false},{"Id":20,"AllowPublicComment":false},{"Id":22,"AllowPublicComment":false},{"Id":23,"AllowPublicComment":false},{"Id":24,"AllowPublicComment":false},{"Id":25,"AllowPublicComment":false},{"Id":26,"AllowPublicComment":false},{"Id":27,"AllowPublicComment":false},{"Id":28,"AllowPublicComment":false},{"Id":29,"AllowPublicComment":false},{"Id":30,"AllowPublicComment":false},{"Id":31,"AllowPublicComment":false},{"Id":32,"AllowPublicComment":false},{"Id":35,"AllowPublicComment":false},{"Id":36,"AllowPublicComment":false},{"Id":37,"AllowPublicComment":false},{"Id":38,"AllowPublicComment":false},{"Id":39,"AllowPublicComment":false},{"Id":40,"AllowPublicComment":false},{"Id":41,"AllowPublicComment":false},{"Id":42,"AllowPublicComment":false},{"Id":43,"AllowPublicComment":false}];
            var LeaveComment = "Leave comment";

            function PrintAgenda() {
                window.print();
            };

            $(".VideoLink").click(function (e) {
                try {
                    $f().pause();
                }
                catch (e) {
                }
            });

            function detailsheight() {
                return $(".Details > div").height();
            };

            function SetDetailsHeight(AgendaItemId) {
                try {
                    if (Window_OnResize) {
                        Window_OnResize();
                    }
                        
                    //For public comment narrow and wide view when resize window
                    $(window).trigger('resize');

                }
                catch (e) {
                }
            }

            function CreateSocialLink(AgendaItemId) {
                var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                var language = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("lang").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                var publicCommentUrl = "PublicComment.aspx?agendaId=" + AgendaItemId + "&meetingId=" + meetingId + "&lang=" + language;
                var allowComment = AllowComment == "True" ? true : false;           
                    
                if(allowComment) {
                    for(i = 0; i < PublicCommentSettings.length; i++) {
                        var setting = PublicCommentSettings[i];
                        if(setting.Id == AgendaItemId) {
                            allowComment = setting.AllowPublicComment;
                            break;
                        }
                    }
                }

                var SocialItems = setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, false);

                $('.SocialIcons').remove();
                $(".hilighted .AgendaItemNavigate").append($("<div class='SocialIcons visible-xs visible-sm'>").append(SocialItems));
                $('.SelectedItemTitle').parent().append(SocialItems);
                $('.SelectedItemTitle').parent().addClass("clearfix");

                //visible-xs visible-sm
                //add the icons under narrow view if not exist
                var iconDiv = $('.AgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemIcons');

                if(iconDiv.length == 0) {
                    iconDiv = $('.AgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemTitle');
                }

                $(setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, true)).insertAfter(iconDiv);
                
                var closedIconDiv = $('.LateClosedAgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemIcons');
                
                if(closedIconDiv.length == 0) {
                    closedIconDiv = $('.LateClosedAgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemTitle');
                }
                $(setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, true)).insertAfter(closedIconDiv);
                SetDetailsHeight(AgendaItemId);
            }

            function setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, isNarrow) {
                var cssClass = isNarrow ? " class='visible-xs visible-sm' " : "";
                var padding = isNarrow ? "style='padding-top: 5px;'" : "";
                var btnId = isNarrow ? "id='narrow-leave-comment-button'" : "";
                    
                if(allowComment && !Sharing) {
                    var SocialItems = $("<div" + cssClass + ">")
                           .addClass("sharing SocialIcons")
                           .css("float", "right")
                           .append(
                               $("<a class='CommentIcon' aria-label='submit public comment'>")
                                   .attr("href", publicCommentUrl)
                                   .append("<span class='btn btn-primary btn-sm' style='vertical-align:middle;' " + btnId + ">" + LeaveComment + "<span>")
                           );

                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                }
                else if (Sharing && !allowComment) {
                    var SocialItems =
                        $("<div" + cssClass + padding + ">")
                            .addClass("sharing SocialIcons")
                            .css("float", "right")
                            .append(
                                $("<a style='padding-right: 13px;'>")
                                    .attr("href", 'Sharing.aspx?u=' + encodeURIComponent(window.location.href))
                                    .append('<img src="Images/share.PNG" style="height:1em;" alt="This can be shared, click to open the sharing popup." title="Share">')
                            );
                }
                else if (Sharing && allowComment) {
                    var SocialItems = $("<div" + cssClass + ">")
                                .addClass("sharing SocialIcons")
                                .css("float", "right")
                                .append(
                                   $("<a class='CommentIcon' aria-label='submit public comment'>")
                                       .attr("href", publicCommentUrl)
                                       .append("<span class='btn btn-primary btn-sm' style='vertical-align:middle;' " + btnId + ">" + LeaveComment + "<span>"))
                                
                                .append(
                                    $("<a style='padding-right: 19px;width: 6%;padding-top: 5px;padding-left: 5px;'>")
                                        .attr("href", 'Sharing.aspx?u=' + encodeURIComponent(window.location.href))
                                        .append('<img src="Images/share.PNG" style="height:1em;" alt="This can be shared, click to open the sharing popup." title="Share">')
                                );

                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                    $('.LateClosedAgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.LateClosedAgendaItemTitleRow hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                }

                return SocialItems;
            }

            function getParameterByName(name) {
                name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
                var regex = new RegExp('[\\?&]' + name + '=([^&#]*)'),
                results = regex.exec(location.search);
                return results == null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
            }

            function UpdateTitle(AgendaItemId) {
                if (itemTitles[AgendaItemId] != null) {
                    document.title = itemTitles[AgendaItemId] + ' - ' + MeetingTitle;
                }
                else {
                    document.title = MeetingTitle;
                }
            }

            // when selected item has changed update page //
            $(document).on("item:selected", function (e, id, scroll) {
                var selectedTab = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Tab").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                  
                hilightItem(id);
                CreateSocialLink(id);
                UpdateTitle(id);

                //Replace the Leave Comment button to icon
                var windowWidth = $(window).width();
                $('#narrow-leave-comment-button').html("<span class='las la-comment-alt' style='vertical-align: middle' title='Leave Comment'></span>");
                $('#narrow-leave-comment-button').attr("aria-label", "submit a public comment on this agenda item");
                    
                if (scroll == true) {
                    // scroll item into view //
                    var current = $(".AgendaItemTitleRow.hilighted");

                    if (current.length > 0) {
                        current[0].scrollIntoView();
                    }
                }

                if(selectedTab) {
                    toggleSelectedDetails(id, selectedTab);
                }
                else {
                    toggleSelectedDetails(id, 'attachments');
                }

                var attachmentCounts = $('.AgendaItemPublicCommentList >.OrderedAttachments > .OrderedAttachment > .AgendaItemAttachment' + id).length;											
                $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
            });

            function toggleSelectedDetails(ItemId, tab) {
                window.history.pushState('', '', UpdateQuery('Tab', tab));

                if (tab == 'comments') {
                    $('#selectedTabAgendaComments').css({'font-weight':'bold', 'color':'black'});
                    $('#selectedTabAgendaComments').attr({'aria-selected':'true'});
                    $('#selectedTabAgendaAttachment').css({'font-weight':'normal', 'color': '#595959'});
                    $('#selectedTabAgendaAttachment').attr({'aria-selected':'false'});
                    $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
                    $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'true'});
                    $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'normal','color': '#595959' });
                    $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'false'});

                    if ($('.OrderedAttachments').length && $('.OrderedAttachments').is(":visible")) {
                        if ($('.OrderedAttachments >.OrderedAttachment >.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').hide();
                        }
                        else {
                            $('.OrderedAttachments >.OrderedAttachment >.AgendaItemAttachment' + ItemId).hide();
                        }
                    }
                    else {
                        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').hide();
                        }
                        else {
                            $('.AgendaItemAttachment' + ItemId).hide();
                        }
                    }

                    if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
                        $('.AgendaItemPublicCommentNone').show();
                    }
                    else {
                        $('.AgendaItemPublicComment' + ItemId).show();
                    }
                    window.dispatchEvent(new Event('resize'));
                }
                else {
                    $('#selectedTabAgendaAttachment').css({'font-weight':'bold', 'color':'black'});
                    $('#selectedTabAgendaAttachment').attr({'aria-selected':'true'});
                    $('#selectedTabAgendaComments').css({'font-weight':'normal', 'color': '#595959'});
                    $('#selectedTabAgendaComments').attr({'aria-selected':'false'});
                    $('#selectedTabAgendaAttachment' + ItemId).css({'font-weight': 'bold', 'color': 'black'});
                    $('#selectedTabAgendaAttachment' + ItemId).attr({'aria-selected':'true'});
                    $('#selectedTabAgendaComments' + ItemId).css({'font-weight': 'normal','color': '#595959' });
                    $('#selectedTabAgendaComments' + ItemId).attr({'aria-selected':'false'});

                    if ($('.AgendaItemPublicComment' + ItemId).length == 0) {
                        $('.AgendaItemPublicCommentNone').hide();
                    }
                    else {
                        $('.AgendaItemPublicComment' + ItemId).hide();
                    }

                    if ($('.OrderedAttachments').length && $('.OrderedAttachments').is(":visible")) {
                        if ($('.OrderedAttachments>.OrderedAttachment>.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').show();
                        }
                        else {
                            $('.OrderedAttachments >.OrderedAttachment>.AgendaItemAttachment' + ItemId).show();
                        }
                    }
                    else {
                        if ($('.AgendaItemAttachment' + ItemId).length == 0) {
                            $('.AgendaItemAttachmentNone').show();
                        }
                        else {
                            $('.AgendaItemAttachment' + ItemId).show();
                        }
                    }
                }

                var attachmentCounts = $('.AgendaItemPublicCommentList >.OrderedAttachments > .OrderedAttachment > .AgendaItemAttachment' + ItemId).length;
                var commentCounts = $('.AgendaItemPublicCommentList > .AgendaItemPublicComment' + ItemId).length;
											
                $('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
                $('#selectedTabAgendaCommentsCount').first().text(' (' + commentCounts + ')');
				
                $('#selectedTabAgendaAttachmentCount' + ItemId).first().text(' (' + attachmentCounts + ') ');
                $('#selectedTabAgendaCommentsCount' + ItemId).first().text(' (' + commentCounts + ')');
				
                var modalClass = '.Details';
                var modalContainer = document.querySelector(modalClass);
                var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [contenteditable]';
                var focusableElements = modalContainer.querySelectorAll(focusableElementsString);

                focusableElements = Array.prototype.slice.call(focusableElements);
                if (focusableElements.length > 0){
                    focusableElements[0].focus();
                }
            }

            function UpdateQuery(parameter, value) {
                var loc = window.location.search;

                if (loc.length == 0) {
                    // no query string //
                    if (value.length > 0) {
                        // add parameter directly to url //
                        return window.location.href + "?" + parameter + "=" + encodeURIComponent(value);
                    }
                }
                else {
                    var found = false;
                    if (loc[0] == '?') {
                        loc = loc.substring(1);
                    }

                    // split up existing query string //
                    var params = loc.split('&');

                    for (var i = 0; i < params.length; i++) {
                        if (params[i].toLowerCase().startsWith(parameter.toLowerCase() + '=')) {
                            found = true;

                            if (value.length > 0) {
                                // set new value //
                                params[i] = parameter + '=' + encodeURIComponent(value);
                            }
                            else {
                                // remove existing value //
                                params[i] = '';
                            }
                        }
                    }

                    if (found == false && value.length > 0) {
                        params.push(parameter + '=' + value);
                    }

                    var qs = '';
                    for (var i = 0; i < params.length; i++) {
                        if (params[i].length > 0) {
                            if (qs.length == 0) {
                                qs = "?" + params[i];
                            }
                            else {
                                qs += "&" + params[i];
                            }
                        }
                    }

                    return window.location.href.replace("?" + loc, qs);
                }

                return window.location.href;
            }

            //$(document).ready(function () {
            //    SelectItem(getParameterByName("Item"), true);
            //});
        </script>

        <style type="text/css">
            /*
                @media Screen {
                    .AgendaItemAttachmentsList {
                        // this max height is causing attachments overlap, if exist the height
                             //max-height:200px;
                    }

                    .AgendaItemAttachmentsArea {
                        overflow:hidden;
                        overflow-y:auto;
                    }
                }
                */
        </style>
    </form>

    


<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" />  

<div id="AgendaItemDetailsModal" class="modal fade">
    <div class="modal-dialog AgendaItemDetailsModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Details</h3>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
            </div>
            <div class="modal-body">
                <div>
                    <div class="inputform">
                        <label>
                            Title
                        </label>
                        <div class="ItemTitle"></div>

                        <label>
                            Description
                        </label>
                        <div class="description"></div>

                        <label>
                            Category
                        </label>
                        <div class="Category"></div>

                        <label>
                            Number
                        </label>
                        <div class="LegislationNumberLabel"></div>

                        <label>Stage</label>
                        <div class="LegislationStageLabel"></div>

                        <label>
                            Department
                        </label>
                        <div id="LegislationDepartmentLabel"></div>

                        <label style="vertical-align: top">
                            Attachments
                        </label>
                        <div style="overflow:hidden">
                            <div>
                                <span id="LegislationDocumentIcon"></span>
                                <a id="LegislationDocumentLink"></a>
                            </div>
                            <div id="LegislationSupportingDocumentsList">
                            </div>
                        </div>
                    </div>
                </div>

                <h4 style="margin-top:0.5em">History</h4>
                <div>
                    <table id="LegislationHistoryTable" class="list dataTable">
                        <thead>
                            <tr>
                                <th id="legislationhistory-index-th" class="leg-no-break tablepadding"></th>
                                <th id="legislationhistory-meetingtype-th" class="leg-no-break tablepadding">Meeting Type</th>
                                <th id="legislationhistory-meetingdate-th" class="leg-no-break tablepadding">Meeting Date</th>
                                <th id="legislationhistory-stage-th" class="leg-no-break tablepadding">Stage</th>
                                <th id="legislationhistory-status-th" class="leg-no-break tablepadding">Status</th>
                                <th id="legislationhistory-number-th" class="leg-no-break tablepadding">Number</th>
                                <th id="legislationhistory-vote-th" class="leg-no-break tablepadding">Vote</th>
                            </tr>
                        </thead>
                        <tbody class="history"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="VoteResultsModal" class="modal fade">
    <div class="modal-dialog VoteResultsModal" style="width: 60%">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Vote Result</h3>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
            </div>
            <div class="modal-body">
                <div class="Text"></div>
                <div class="Banner"></div>
                <div class="Votes"></div>
            </div>
            <div class="modal-footer">
                <div class="dataTables_wrapper" style="margin:auto">
                    <div class="dataTables_paginate paging_simple_numbers">
                        <span>
                            <a class="paginate_button current" aria-controls="table-conflicts-details-list" data-dt-idx="1" tabindex="0">1</a>
                        </span>
                    </div>
                </div> 
            </div>
        </div>
    </div>
</div>
 
<script type="text/javascript">
    function FillVoteResultsDialog(motions, index) {
        var dialog = $("#VoteResultsModal");
        var motion = motions[index];

        // paging //
        {
            var paging = dialog.find(".dataTables_paginate").empty();

            // back links //
            {
                // first link
                var firstlink = $('<a class="paginate_button first">&lt;&lt;</a>')
                    .attr("id", "VoteResultsModal-First")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to First Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", 0);

                // previous link //
                var previouslink = $('<a class="paginate_button previous" "">&lt;</a>')
                    .attr("id", "VoteResultsModal-Previous")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Previous Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", 1);


                if (index == 0) {
                    firstlink.addClass('disabled');
                    firstlink.attr("aria-disabled", "true");

                    previouslink.addClass('disabled');
                    previouslink.attr("aria-disabled", "true");
                }
                else {
                    firstlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, 0);
                        });
                    
                    previouslink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, index-1);
                        });
                }

                paging.append(firstlink);
                paging.append(previouslink);                
            }

            // pages //
            {
                var pages = $("<span>");
                for (var i=0; i<motions.length; i++) {
                    let buttonindex = i;

                    var link = $('<a class="paginate_button">')
                        .attr("aria-controls", "VoteResultsModal")
                        .attr("data-dt-idx", i+2)
                        .attr("tabindex", 0)
                        .text(i+1)
                        .click(function(e) {
                            FillVoteResultsDialog(motions, buttonindex);
                        })

                    if (i == index) {
                        link.addClass("current")
                    }

                    pages.append(link);
                }

                paging.append(pages);
            }

            // forward links //
            {
                // next link 
                var nextlink = $('<a class="paginate_button next">&gt;</a>')
                    .attr("id", "VoteResultsModal-Next")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Next Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", motions.length + 2);

                // last link
                var lastlink = $('<a class="paginate_button last">&gt;&gt;</a>')
                    .attr("id", "VoteResultsModal-Last")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Last Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", motions.length + 3);


                if (index == motions.length - 1) {
                    nextlink.addClass('disabled');
                    nextlink.attr("aria-disabled", "true");

                    lastlink.addClass('disabled');
                    lastlink.attr("aria-disabled", "true");
                }
                else {
                    nextlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, index+1);
                        });
                    
                    lastlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, motions.length-1);
                        });
                }

                paging.append(nextlink);
                paging.append(lastlink);
            }
        }


        


        // render motion //

        dialog.find(".Text").text(motion.Text);
                                        
        var banner = dialog.find(".Banner");
        banner.text(motion.BannerText);

        switch (motion.BannerColor) {
            case 'green':
                banner.css("background-color", '#21AE52');
                banner.css("color", 'white');
                break;

            case 'red':
                banner.css("background-color", 'red');
                banner.css("color", 'black');
                break;

            default:
                banner.css("background-color", '');
                banner.css("color", '');
                break;
        }


        dialog.find(".Votes").empty()

        // add votes to dialog //
        var votes = {};
        var voteorder = ["Yes", "No", "Abstain", "Absent"];

        $.each(motion.Votes, function(imv, motionvote) {
            if (!votes.hasOwnProperty(motionvote.Vote)) {
                votes[motionvote.Vote] = [];
            }

            if (voteorder.indexOf(motionvote.Vote) == -1) {
                voteorder.push(motionvote.Vote);
            }

            votes[motionvote.Vote].push(
                $("<span>").text(motionvote.UserName)
            );
        });

        $.each(voteorder, function(iv, vote) {
            var container = $("#VoteContainerTemplate").clone();

            if (votes.hasOwnProperty(vote)) {
                container.find(".VoteHeader .count").text(votes[vote].length);
                container.find(".Voters").append(...(votes[vote]));
            }

            container.find(".VoteHeader .Vote").text(vote);
            dialog.find(".Votes").append(container.children());
        });
    }

    // fix for nested motals //
    $(document).ready(function () {
        $(document).on({
            'show.bs.modal': function () {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () { $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack'); }, 0);
            },
            'hidden.bs.modal': function () {
                if ($('.modal:visible').length > 0) {
                    // restore the modal-open class to the body element, so that scrolling works
                    // properly after de-stacking a modal.
                    setTimeout(function () { $(document.body).addClass('modal-open'); }, 0);
                }
            }
        }, '.modal');
    });
</script>

<style type="text/css">
    /* flex-grid classes */
    .inputform {
	    font-size:1em;
	    display:grid;
	    grid-template-columns:0fr 1fr;
	    grid-gap:10px 10px;
	    align-items:baseline;
    }
			
    @media (max-width: 575px) {
        .inputform {
            grid-template-columns: 1fr;
            grid-gap:0px;
        }

        .inputform > label,
        .inputform > .row > label {
            margin-top:20px;
        }
    }

    .inputform > label,
    .inputform > .row > label {
	    white-space:nowrap;
	    font-size:1em;
	    font-weight:bold;
    }

    .inputform > .row {
	    display:contents;
    }
			
    .inputform > .row > div {
	    grid-column : 1 / 3;
    }
			
    .inputform > .row > label+div {
	    grid-column: 2 / 3;
    }

    .inputform label+div > div+div {
	    margin-top:4px;
    }

    /* modal styles */
    .modal-dialog.AgendaItemDetailsModal {
        max-width: 1000px;
    }

    .AgendaItemDetailsModal .modal-content {
        max-height:90vh;
        overflow:hidden;
    }

    .AgendaItemDetailsModal .modal-content .modal-body {
        overflow-y:auto;
    }

    .AgendaItemDetailsModal .description {
        max-height:10em;
        overflow-y:auto;
    }

    .VoteResultsModal .Text {
        padding: 2px 0 18px;
    }

    .VoteResultsModal .Banner {
        font-weight:bold;
        padding:5px;
        text-align: center;
    }

    .Votes .VoteHeader {
        font-weight: bold;
        text-align: center;
        padding: 10px;
    }

    .Votes .Voters {
        display: grid;
        grid-template-columns: 33% minmax(0, 34%) 33%;
        grid-gap: 10px;
        align-items: baseline;
        text-align: center;
        border: 1px solid #f7f7f7;
    }

    h3.modal-title {
        font-size:17px;
    }

    #LegislationSupportingDocumentsList > div {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    #LegislationHistoryTable td {
        cursor:pointer;
    }

    #LegislationHistoryTable tr.selected td {
        border-top: 1px solid black;
        border-bottom: 1px solid black;
    }

    #LegislationHistoryTable tr.selected > :first-child {
        border-left:1px solid black;
    }

    #LegislationHistoryTable tr.selected > :last-child {
        border-right:1px solid black;
    }
</style>

<div id="VoteContainerTemplate" style="display:none">
    <div>
        <div class="VoteHeader"><span class="Vote"></span> ( <span class="count">0</span> )</div>
        <div class="Voters"></div>
    </div>
</div>

<script type="text/javascript">
    var AgendaItemswithHistory = [];

    $("document").ready(function() {
        // add agenda item history links dynamically to the agenda //
        $.each(AgendaItemswithHistory, function(i, v) {
            // remove old icon //
            $(".AgendaItem" + v + " .AgendaItemIcons").find(".AgendaItemHistoryLink").remove();

            // add icon //
            $(".AgendaItem" + v + " .AgendaItemIcons").append(
                $('<a href="">')
                    .addClass("AgendaItemHistoryLink")
                    .attr("itemid", v)
                    .append('<i class="las la-history"></i>')
            );
        });

        $(".AgendaItemHistoryLink").click(function(e){
            e.preventDefault();

            AgendaItemHistory.Dialog.Open('d0f46ee8-dbd2-4f80-99aa-e8d7fa5a0742', $(this).attr("itemid"));
        });
    });
</script>


</body>

</html>

  recorded_at: Fri, 31 Jan 2025 02:28:19 GMT
recorded_with: VCR 6.3.1
