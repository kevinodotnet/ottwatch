---
http_interactions:
- request:
    method: get
    uri: https://pub-ottawa.escribemeetings.com/Meeting.aspx?Agenda=Agenda&Id=f743d690-36be-4e25-9bf6-dd8f944d1f2f&lang=English
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - pub-ottawa.escribemeetings.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Tue, 16 Jan 2024 00:42:54 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cache-Control:
      - private
      Vary:
      - Accept-Encoding
      Set-Cookie:
      - ASP.NET_SessionId=nypqymztudv2ft4b1a0rrxty; path=/; HttpOnly; SameSite=Lax
      Strict-Transport-Security:
      - max-age=31536000
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 84625234bef539ff-YYZ
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE html>




<html lang="en">
<head><meta charset="utf-8" /><meta http-equiv="X-UA-Compatible" content="IE=edge;chrome=1" /><meta name="viewport" content="width=device-width, initial-scale=1.0" /><title>
	City Council - June 27, 2012
</title><script src="/bundles/modernizr?v=inCVuEFe6J4Q07A0AcRsbJic_UE5MwpRMNGcOtk94TE1"></script>
<script src="/bundles/jquery?v=8Oos0avDZyPg-cbyVzvkIfERIE1DGSe3sRQdCSYrgEQ1"></script>
<script src="/bundles/Meeting?v=AVpWBphpdxyAs8EnVqIgfGPcIy964yCGHE8PBR5W7yY1"></script>

        <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
    <link href="/Content/css?v=uTDadAVN2kXgv_IlKa38IoLBJEDhJyqBD_0SO6hOWTg1" rel="stylesheet"/>
<link rel='stylesheet' type='text/css' href='./FileStream.ashx?DocumentId=15884'><link rel="stylesheet" href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css" /><link rel="stylesheet" href="Content/Customizations.css" /><link rel="stylesheet" href="Content/Meeting.css" /><link href="Content/CalenderViewStyle-updated.css" rel="stylesheet" /><link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet" type="text/css" /><link href="favicon.ico" rel="shortcut icon" type="image/x-icon" />

    <!-- This file must exist, otherwise we'll get server side error -->
    <!-- eSCRIBE Global site tag (gtag.js) - Google Analytics --> 

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-178411397-49"></script> 

<script> 

  window.dataLayer = window.dataLayer || []; 

  function gtag(){dataLayer.push(arguments);} 

  gtag('js', new Date()); 

  

  gtag('config', 'UA-178411397-49'); 

</script> 

    <style type="text/css">

        body {
            color: #000000;
        }

        a, A:link, A:visited {
            color: #0059B8;
        }

        .comment-link {
            display: inline-block;
            vertical-align: top;
        }

        .comment-link:hover {
            text-decoration: underline;
        }

        .embed-responsive {
            position: relative;
            display: block;
            width: 100%;
            padding: 0;
            overflow: hidden;
        }

            .embed-responsive::before {
                display: block;
                content: "";
            }

            .embed-responsive .embed-responsive-item, .embed-responsive iframe, .embed-responsive embed, .embed-responsive object, .embed-responsive video {
                /*position: absolute;*/
                top: 0;
                bottom: 0;
                left: 0;
                width: 100%;
                height: 100%;
                border: 0;
            }

        .embed-responsive-21by9::before {
            padding-top: 42.857143%;
        }

        .embed-responsive-16by9::before {
            padding-top: 56.25%;
        }

        .embed-responsive-4by3::before {
            padding-top: 75%;
        }

        .embed-responsive-1by1::before {
            padding-top: 100%;
        }


        html, body, form {
            height: 100%;
            overflow: hidden;
        }

        #Agendadropdownmenu.dropdown-menu {
            right: 0px;
            left: 0px;
        }

        .FontIncrease * {
            font-size: 1em;
            font-weight: bold;
            cursor: pointer;
        }

        .FontDecrease * {
            font-size: 0.85em;
            font-weight: bold;
            cursor: pointer;
        }

        .panel {
            margin-bottom: 22px;
            background-color: #fff;
            border: 1px solid transparent;
            border-radius: 4px;
            -webkit-box-shadow: 0 1px 1px rgba(0,0,0,.05);
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .panel-default {
            border-color: #ddd;
        }

        .panel-heading {
            padding: 10px 15px;
            border-bottom: 1px solid transparent;
            border-top-right-radius: 3px;
            border-top-left-radius: 3px;
        }

        .panel-default > .panel-heading {
            color: #000;
            background-color: #f5f5f5;
            border-color: #ddd;
        }

        .panel-body {
            padding: 15px;
        }

        /*ul.navbar-nav > li {
                display:inline-block;
            }

            .navbar-nav > li > a {
                padding-top:5px !important; padding-bottom:5px !important;
            }
            .navbar {
                min-height:32px !important
            }
            .navbar-toggle {
                margin-top:4px;
                margin-bottom:4px;
                padding-top:4px;
                padding-bottom:4px;
            }

            .affix { 
                right:0px;
                top:32px;
            }

            .affix-top {
                right:0px;
                position:fixed;
                top:32px;
            }*/

        .Details > div {
            padding-right: 0px !important;
            margin-right: 2%;
        }

        a.dropdown-toggle:focus {
            outline: solid 1px #FFFFFF;
        }

        #lnkPoweredBy:focus {
            outline: solid 1px #FFFFFF;
            padding: 4px;
        }

        /*@media (max-height: 760px) {
                .navbar-fixed-bottom {
                    display:none;
                }
            }
            @media (min-height: 760px) {
                body {
                    padding-bottom: 32px;
                }
            }
            
            @media (max-width: 600px) {
                 .AgendaItemContainer > .AgendaItemContainer {
                    margin-left:4em !important;
                }
            }*/

        @media (max-width: 500px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 2em !important;
            }
        }

        @media (max-width: 400px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 1em !important;
            }
        }

        @media (max-width: 300px) {
            .AgendaItemContainer > .AgendaItemContainer {
                margin-left: 0em !important;
            }
        }

        @media (min-width:768px) and (max-width:991px) {
            .AgendaItemSelectedDetails {display: none !important; }

            .visible-sm.sharing.SocialIcons {
                display: inline-block !important;
                float: none !important;
            }

            .AgendaItemTitleRow.hilighted {
                display: block !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemIcons,
            .AgendaItemTitleRow.hilighted > .AgendaItemIcons{
                display: none !important;
            }


            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle.hasPublicCommentButton {
                margin-right: 135px;
                width: auto !important;
            }
        }

        /*.AgendaItemIcons {
            width: 22% !important;
        }*/

        .visible-xs visible-sm sharing SocialIcons {
            width: 10%;
            padding-top: 5px;
            float: right;
        }

        @media (max-width: 767px) {
            .visible-xs.sharing.SocialIcons {
                display: inline-block !important;
                float: none !important;
            }

            .AgendaItemTitleRow.hilighted {
                display: block !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemIcons,
            .AgendaItemTitleRow.hilighted > .AgendaItemIcons {
                display: none !important;
            }

            .AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle.hasPublicCommentButton {
                margin-right: 65px;
                width: auto !important;
            }
        }

        @media only screen and (device-width: 768px) {

            .navbar-nav .dropdown-menu {
                margin-top: -5px !important;
            }

            .dropdown, .dropleft, .dropright, .dropup {
                width: fit-content !important;
            }

            .collapse:not(.show) {
                display: block !important;
            }

            .navbar-light .navbar-toggler {
                float: right;
                border-color: #ddd !important;
                display: none !important;
            }

            .navbar-nav .dropdown-menu {
                position: absolute !important;
            }
        }

        .visible-xs.visible-sm.sharing.SocialIcons {
            /*width: 10%;
            padding-top: 5px;
            float: right;
            position: absolute;
            right: -8px;
            margin-top: -22px;*/
            position: absolute;
            right: 10px;
            margin: 0;
            position: absolute;
            top: 50%;
            -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
        }

            .visible-xs.visible-sm.sharing.SocialIcons > * > span.btn.btn-primary.btn-sm {
                padding: 0px 5px 0px 5px;
            }

            .visible-xs.visible-sm.sharing.SocialIcons,
            .visible-xs.visible-sm.sharing.SocialIcons > *,
            .visible-xs.visible-sm.sharing.SocialIcons > * > span {
                font-size: 12px !important;
                font-weight: normal !important;
            }

        .SocialIcons {
            float: right;
        }


        .poweredBy, .poweredBy a {
            color: white !important;
        }

        @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) and (orientation : portrait) {
            .visible-xs.visible-sm.sharing.SocialIcons
            {
                right: -8px !important;
                padding-top: 4px !important;
            }
        }

        @media screen and (device-width: 280px) and (device-height: 653px) {
            .visible-xs.visible-sm.sharing.SocialIcons
            {
                position: unset;
                right: unset;
                margin: unset;
                top: unset;
                -ms-transform: unset;
                transform: unset;
            }
            }

        .packageNav {
            position: absolute !important;
        }

    </style>
</head>
<body style="background-color: #e5e5e5">
    <form name="form1" method="post" action="./Meeting.aspx?Id=f743d690-36be-4e25-9bf6-dd8f944d1f2f&amp;Agenda=Agenda&amp;lang=English" id="form1">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="0cmZ1YH+VD8/E9bLEQZZUnpcHX4kTYByX53QqktaIxujmHBpGuo6RXEEI4TH7ovuYvIY55tHpF8OnithSV0+brU1LclxI8nVsMrosB+eiQYtiOkhbCPTlYpkUh0dbszXY4mciWVa9SuglBBC3DP3cFnkYzSynx8r6lPQ2po/GjTCvutMhSsgHvpf1XH8GBiw8kkaM6UuP+VtSImxh9ydRphgUHPnBws9A13lSYmMyZHeHbvCnFF+IE4KhZeGMYY09It49t6zA2SHGoor8HeggQHZ4beqcAA5kGF4SHY5QaCXwf9UhMORnofVf0c0ocg3ivRkRwcl+RceQ8M3/mLQj6GmRXUtqpZTNZcxaZqhfLGvm08PCdfQCqJA4ee2LaGki0ef+zaT0eR1MzPndLFFvy/H8RERE50cSsOFOXz2Gzw0gy8EeCxw0Ckg/jb+4BjYwwtLseBE10HySN+5O/fk+3+NuDc4Lc/w8yiKL+njghVBv6MUYJfWUgCi+i5henzrL/Me1XJZ1+AecOhUxKNZDTD9OZkNQoCNfX1se5VA0mbO/xxIVocJF9Oq+t0bZ6K5N5NXYGaCEpnX9t26X6Uay3aXxnj/dWgwEXa9mFhxImlrBF50d9aLMCKcxBbDp3ogC3kN1IQY/fng0OZgnzYfTf9EnzvPTB97fPtKaAmUAG6D2YJaBt9VJieAiRNdnXL+TAfngzCWLDBLHJsVXquIOlyh7E07QmCTR19bDIXae/nAAlpHi94yyKDod4u0GzYeqKtQSNxhKA2nQJlMvr2O6jEy+5rZmasZJBP9q9lM0M4P1I4hfsAcIvWhTv6TCkv3MNYmZuCu0bZ7GnHIqu6cqdINwmXoOGXQEqJ1VByJ6WmpXJnhEKLN6RrOi4y7py2Toq9PMs36ap6mrxJFtlHKgADA9b53I1QGFJOZ08g44m/uc5N7NuRXbdjIqIKJy/ApGwu12fBFKYk09bFVyQirjwcL7ogoRm58mxALgxqa61hnBjHPQrnovv3ddWa0lrXaJlxI6fuxAm7Aw0cIQp3RafgIiw+YTaqiCfUTylpvVSCwcJVfhVrka5Xauu3pO/Rwtrwm8RhlJWnNDMLggpoF+fCyLmOcNRdX+88TsVM0e3Q=" />


<script src="/bundles/MsAjaxJs?v=D6VN0fHlwFSIWjbVzi6mZyE9Ls-4LNrSSYVGRU46XF81" type="text/javascript"></script>
<script src="Scripts/bootstrap.min.js" type="text/javascript"></script>
<script src="Scripts/respond.min.js" type="text/javascript"></script>
<script src="/bundles/WebFormsJs?v=N8tymL9KraMLGAMFuPycfH3pXe6uUlRXdhtYv8A_jUU1" type="text/javascript"></script>
<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="4936DBB7" />
<input type="hidden" name="__VIEWSTATEENCRYPTED" id="__VIEWSTATEENCRYPTED" value="" />
        

        <script type="text/javascript">
            function iframeLoaded(iframeHeight) {
                var windowHeight = $(window).height();

                if (iframeHeight > windowHeight) {
                    var newHeight = (windowHeight - 185) + "px";
                    $('#bootstrapModalBody').height(newHeight);
                    $('#modalIframeDiv').height(newHeight);

                    return $('#modalIframeDiv').height() - 85;
                }
                else {
                    var newHeight = iframeHeight + "px";
                    $('#bootstrapModalBody').height(newHeight);
                    $('#modalIframeDiv').height(newHeight);
                    return "0";
                }
            }

            $(document).keydown(function(event) { 
                if (event.keyCode == 27) { 
                    closeBootstrapModal();
                    $(".CommentIcon").focus();
                }
            });

            function closeBootstrapModal() {
                $('#bootstrapModal').modal('hide').attr('aria-hidden', 'true'); 
            }

            $(window).resize(function(){
                var windowWidth = $(window).width();
                var standardHeight = $('.SelectedItemCounter').height();
                var titleHeight = $('.SelectedItemTitle').height();

                //if (Window_OnResize) {
                //    Window_OnResize();
                //}

                if(titleHeight > standardHeight) {
                    $('.panel-heading.clearfix >.sharing.SocialIcons > a.CommentIcon > span').css("margin-top", "4px");
                }

                //Replace the Leave Comment button to icon
                $('#narrow-leave-comment-button').html("<span class='las la-comment-alt' style='vertical-align: middle' title='Leave Comment'></span>");

                if(windowWidth <= 539){
                    $(".Agenda").css("padding-top", $(".affix-top").height()+5);
                } else {
                    $(".Agenda").css("padding-top", "18px");
                }
            });

            function CheckiOSDevice() {
                var userAgent = window.navigator.userAgent;
                if (userAgent.match(/iPad/i) || userAgent.match(/iPhone/i)) {
                    // iPad or iPhone
                    document.body.style.removeProperty("overflow");  
                    // console.log("checkIOSDevice called");
                }                                 
            }

            $(document).ready(
                function () {
                    var url = window.location.href;
                    if(url.indexOf("pub-ottawa") != -1 || url.indexOf("pub-support") != -1) {
                        $('.AgendaHeaderDetailsTable').find('.Label:contains("Période:")').text('Date :');
                        $('.AgendaHeaderDetailsTable').find('.Label:contains("Lieu:")').text('Endroit :');
                    }

                    $(".Details").addClass("d-sm-block");
                    $(".Details").attr("aria-live", "polite");
                    $(".panel-heading").prepend("<span class='visuallyhidden'>Agenda item details popup</span>");
                    $(".affix-top").append("<div class='collapse-stream'><i class='las la-video open-player'></i></div>");

                    $(".collapse-stream").on("click", function(i,v){
                        if($(".VideoPlayerContainer").css("display") == "none"){
                            $(".VideoPlayerContainer").show();
                            $(".la-video").addClass("open-player");
                            $(".Agenda").css("padding-top", $(".affix-top").height()+5);
                        } else {
                            $f().pause();
                            $(".la-video").removeClass("open-player");
                            $(".VideoPlayerContainer").hide();
                            $(".Agenda").css("padding-top", "18px");
                        } 
                    });
                    $('.VideoPlayer').append($('#VideoPlayerControl').detach());

                    if($(window).width() <= 539){
                        $(".Agenda").css("padding-top", $(".affix-top").height()*1.05);
                    }
                    
                    // ensure minutes show if the meeting starts or ends partially through an hour //
                    $(".Time > .Minutes").each(
                        function (index, element) {
                            if ($(element).text() != ":00") {
                                $(element).show();
                            }
                        }
                    );

                    $("[data-toggle='tooltip']").tooltip({placement:'top', boundary: 'window', trigger : 'hover'});

                    //Add/Remove public comment icons for each agenda item (real time)
                    var agendaItem = $('.AgendaItem');

                    for(var i = 0; i < agendaItem.length; i++) {
                        var className =agendaItem[i].className.match(/AgendaItem\d+/);
                        if(className) {
                            var id = className[0].replace("AgendaItem", "");
                            if(id){
                                LoadPublicCommentIcons(id);
                            }
                        }
                            
                    }                                                        
                    CheckiOSDevice();
                    var selectedTab = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Tab").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    SelectItem(getParameterByName("Item") || ((window.location.hash || "").replace(/#/g, '')), true, selectedTab);
                
                    
                    $("#package-container").on("scroll", function(){
                        if ($("#package-container").scrollTop() >= 48){
                            $(".affix-top").css("top", "5px");
                        } else {
                            $(".affix-top").css("top", "48px");
                        }
                    });

                    $("[tabindex]").filter(function() {
                        if ($(this).attr("tabindex") > 0){ $(this).attr("tabindex", "0")}
                    });
                    
                    $(".AgendaItemTitle").on("click", function() {
                        tabIndexLoop(document.querySelector(".AgendaItemSelectedDetailsContainer"));
                        var modalContainer = document.querySelector(".Details");
                        var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                        var focusableElements = modalContainer.querySelectorAll(focusableElementsString);

                        focusableElements = Array.prototype.slice.call(focusableElements);
                        if (focusableElements.length > 0){
                            focusableElements[0].focus();
                        }
                    });

                    $(".AgendaItemContainer").each(function(i,v){
                        var commentIcon = $(v).find(".AgendaItemIcons").find(".la-comment-alt");
                        if(commentIcon.length > 0){
                            commentIcon.append("<span class='sr-only'>Public Comments:</span>");
                        }
                    });


                }
                
                
            );

            
            ////$(document).on("item:selected", function (e, id) {
            ////    hilightItem(id);
            ////});
                                                
            function SelectItem(id, scroll, tab) {
                if(tab === undefined) {
                    tab = 'attachments'
                }

                //The function under eScribe.Agenda only take two parameter. In order to make the icon link works, I have to do a work around for this (reuse the scroll parameter).
                //This should not affect the original functionality of the scroll.
                if(scroll == 'attachments' || scroll == 'comments') {
                    tab = scroll;
                    scroll = false;
                }

                // update url //
                window.history.pushState('', '', UpdateQuery("Item", id.toString()));                    
                window.history.pushState('', '', UpdateQuery("Tab", tab));

                //Update the Citizen Comment using ajax.
                LoadPublicComment(id, scroll);

                if(document.readyState === 'complete' ) {
                    LoadPublicCommentIcons(id);
                }

                //// trigger event //
                //$(document).trigger("item:selected", [id, scroll]);
            }

            function LoadPublicComment(id, scroll) {
                if(id) {
                    var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var language = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("lang").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var tabindex = $('#AgendaItemAgendaItem' + id + 'TitleHeader > .AgendaItemNavigate > .AgendaItemTitle > A').attr("tabindex");

                    $.ajax({
                        type: "POST",
                        url: "Meeting.aspx/GeneratePublicComment",
                        data: "{id: '" + id + "', meetingId: '" + meetingId + "', lang: '" + language + "', tabindex: '" + tabindex + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {

                            var items = document.getElementsByClassName('AgendaItemPublicComment' + id);
                            for(var i = items.length - 1; i >= 0 ; i--){
                                var child = items[i];
                                child.parentNode.removeChild(child);
                            }
                            $(msg.d).appendTo(".AgendaItemPublicCommentList");

                            if($('.AgendaItemPublicCommentListIndent' + id).children('.AgendaItemPublicCommentHeader').length == 0) {
                                $('<div class="AgendaItemAttachment AgendaItemPublicCommentHeader" style="display: block;"></div>').appendTo(".AgendaItemPublicCommentListIndent" + id);
                            }
                            $(msg.d).appendTo(".AgendaItemPublicCommentListIndent" + id);

                            // trigger event //
                            $(document).trigger("item:selected", [id, scroll]);
                                
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }
            }

            function LoadPublicCommentIcons(id) {
                if(id) {
                    var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                    var agendaItem = $('#AgendaItemAgendaItem' + id +'TitleHeader ' + '> .AgendaItemNavigate > ' + '.AgendaItemIcons');
                    if(agendaItem.length == 0) {
                        agendaItem = $('#AgendaItemAgendaItem' + id +'TitleHeader ').parent().find(".AgendaItemIcons");
                    }

                    var isExist = agendaItem.children('.las.la-comment-alt').length;
                    
                    $.ajax({
                        type: "POST",
                        url: "Meeting.aspx/GeneratePublicCommentIcon",
                        data: "{id: '" + id + "', meetingId: '" + meetingId + "'}",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (msg) {

                            if(msg.d) {
                                if(isExist == 0) {
                                    $(msg.d).appendTo(agendaItem);
                                }
                            }
                            else {
                                if(isExist > 0){
                                    agendaItem.children('.las.la-comment-alt').remove();
                                }
                            }

                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                        }
                    });
                }
            }
                                                
            function UpdateQuery(parameter, value) {
                var loc = window.location.search;

                if (loc.length == 0) {
                    // no query string //
                    if (value.length > 0) {
                        // add parameter directly to url //
                        return window.location.href + "?" + parameter + "=" + encodeURIComponent(value);
                    }
                }
                else {
                    var found = false;
                    if (loc[0] == '?') {
                        loc = loc.substring(1);
                    }
                    var params = loc.split('&');

                    for (var i = 0; i < params.length; i++) {
                        if (params[i].toLowerCase().startsWith(parameter.toLowerCase() + '=')) {
                            found = true;

                            if (value.length > 0) {
                                // set new value //
                                params[i] = parameter + '=' + encodeURIComponent(value);
                            }
                            else {
                                // remove existing value //
                                params[i] = '';
                            }
                        }
                    }
                    if (found == false && value.length > 0) {
                        params.push(parameter + '=' + value);
                    }

                    var qs = '';
                    for (var i = 0; i < params.length; i++) {
                        if (params[i].length > 0) {
                            if (qs.length == 0) {
                                qs = "?" + params[i];
                            }
                            else {
                                qs += "&" + params[i];
                            }
                        }
                    }

                    return window.location.href.replace("?" + loc, qs);
                }
                return window.location.href;
            }

            function tabIndexLoop(modalContainer) {
                modalContainer.addEventListener("keydown", trapTabKey);

                var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                var focusableElements = modalContainer.querySelectorAll(focusableElementsString);
                focusableElements = Array.prototype.slice.call(focusableElements);
                focusableElements = focusableElements.filter(element => $(element).is(':visible'));
				
                var firstTabStop = focusableElements[0];
                var lastTabStop = focusableElements[focusableElements.length - 1];
                console.log(focusableElements);

                function trapTabKey(e) {
                    var focusableElementsString = 'a[href], area[href], input:not([disabled], [type=hidden]), select:not([disabled]), textarea:not([disabled]), iframe, object, embed, [tabindex="0"], [contenteditable]';
                    var focusableElements = modalContainer.querySelectorAll(focusableElementsString);
                    focusableElements = Array.prototype.slice.call(focusableElements);
                    focusableElements = focusableElements.filter(element => $(element).is(':visible'));
					
                    var firstTabStop = focusableElements[0];
                    var lastTabStop = focusableElements[focusableElements.length - 1];
                    if (e.keyCode === 9) {
                        if (document.activeElement === lastTabStop) {
                            e.preventDefault();
                            $('.hilighted .AgendaItemTitle a').focus();
                        }							
                    }
                }
            }
        </script>

        

<script type='text/javascript'>
    $(document).ready(
        function () {
            $('.Details').addClass('hidden-xs').addClass('hidden-sm');
            $('.VideoPlayerContainer').detach();

            $(window).on('resize', Window_OnResize);
        }
    );

    function Video_LoadBookmark() { }

    function Window_OnResize() {
        setTimeout(
            function () {
                try {
                    var maxheight = 0;
                    if ($(".navbar-fixed-bottom").is(":visible")) {
                        maxheight = $(window).height() - $(".navbar-nav").height() - $(".navbar-fixed-bottom").height();
                    }
                    else {
                        maxheight = $(window).height() - $(".navbar-nav").height();
                    }

                    $(".AgendaItemAttachmentsArea").css("max-height", "");

                    if (detailsheight() > maxheight) {
                        //need to substract the panel heading height (dynamic depending on user input) and also need to substract 55 for other static components (space between panel elements)
                        var contentMaxHeight = maxheight - $('.AgendaItemSelectedDetails > div.panel-heading').height() - 55;
                        $(".AgendaItemAttachmentsArea").css("max-height", contentMaxHeight + "px");

                        //This will never run ... not sure why it is here
                        if (detailsheight() <= maxheight) {
                            $(".AgendaItemAttachmentsArea").css("max-height", ($(".AgendaItemAttachmentsArea").height() - (detailsheight() - maxheight)) + "px");
                        }
                    }
                }
                catch (e) {
                }
            },
            1
        );
    }
</script>

        <div id="package-container" style="overflow: auto; height: 100%">
            <nav class="navbar navbar-expand-lg navbar-light navbar-fixed-top navbarbg" role="navigation">
                <div class="container">
                        <ul class="nav navbar-nav narbar-left">
                            <li class="nav-item dropdown">
                                <a href="#" id="navbarDropdown" class="nav-link dropdown-toggle" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="color: white" tabindex="1">
                                    Agenda
                                </a>
                                <span class="caret"></span>
                                <ul class="dropdown-menu packageNav" role="menu" id="Agendadropdownmenu" aria-labelledby="navbarDropdown">
                                    
                                            
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=f743d690-36be-4e25-9bf6-dd8f944d1f2f&Agenda=Agenda&lang=English' tabindex='1' lang='en'>
                                                    Agenda
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=f743d690-36be-4e25-9bf6-dd8f944d1f2f&Agenda=Agenda&lang=French' tabindex='1' lang='fr'>
                                                    Ordre du jour
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=f743d690-36be-4e25-9bf6-dd8f944d1f2f&Agenda=PostMinutes&lang=English' tabindex='1' lang='en'>
                                                    Minutes
                                                </a>
                                            </li>
                                        
                                            <li>
                                                <a class="dropdown-item" role="menuitem" href='https://pub-ottawa.escribemeetings.com/Meeting.aspx?Id=f743d690-36be-4e25-9bf6-dd8f944d1f2f&Agenda=PostMinutes&lang=French' tabindex='1' lang='fr'>
                                                    Procès-verbaux
                                                </a>
                                            </li>
                                        
                                        
                                    <li class='d-none'>
                                        <a class="VideoLink dropdown-item" href='' title='Open Video in new Window' target="_blank" tabindex="6">
                                            <span class="HiddenAnchorDescription">
                                                Open Video in new Window</span>
                                            Video
                                        </a>
                                    </li>
                                </ul>
                            </li>
                        </ul>
                </div>
            </nav>

            <main class="container body-content" style="background-color: #ffffff">
                
<ARTICLE class='Meeting row'>
    <SECTION class='Agenda col-xs-12 col-sm-12 col-md-8 col-lg-8'>
        <DIV style='padding:1em; width:auto; margin:8px'>
            <link href="content/Ottawa.css" rel="stylesheet" type="text/css"><script src="scripts/Ottawa.js" type="text/javascript"></script>


<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<meta name="Generator" content="Microsoft Word 12 (filtered)">
<title>City Council Agenda</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"CG Times 12\.00pt";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";}
h1
	{mso-style-link:"Heading 1 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";}
h2
	{mso-style-link:"Heading 2 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";}
h3
	{mso-style-link:"Heading 3 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:normal;}
h4
	{mso-style-link:"Heading 4 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:normal;}
h5
	{mso-style-link:"Heading 5 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";}
h6
	{mso-style-link:"Heading 6 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-link:"Heading 8 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-link:"Header Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-link:"Footer Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Title Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{mso-style-link:"Body Text Char";
	margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-link:"Subtitle Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	color:black;}
p.MsoBodyText2, li.MsoBodyText2, div.MsoBodyText2
	{mso-style-link:"Body Text 2 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	font-size:12.0pt;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
a:link, span.MsoHyperlink
	{font-family:"Times New Roman","serif";
	color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Balloon Text Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{mso-style-link:"List Paragraph Char";
	margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Arial","sans-serif";
	font-weight:bold;}
span.Heading8Char
	{mso-style-name:"Heading 8 Char";
	mso-style-link:"Heading 8";
	font-weight:bold;}
span.BodyText2Char
	{mso-style-name:"Body Text 2 Char";
	mso-style-link:"Body Text 2";
	font-weight:bold;}
span.HeaderChar
	{mso-style-name:"Header Char";
	mso-style-link:Header;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-link:"Balloon Text";
	font-family:"Tahoma","sans-serif";}
span.FooterChar
	{mso-style-name:"Footer Char";
	mso-style-link:Footer;}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-link:Title;
	font-family:"Arial","sans-serif";
	font-weight:bold;}
span.SubtitleChar
	{mso-style-name:"Subtitle Char";
	mso-style-link:Subtitle;
	font-family:"Arial","sans-serif";
	color:black;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Arial","sans-serif";
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Arial","sans-serif";}
span.Heading4Char
	{mso-style-name:"Heading 4 Char";
	mso-style-link:"Heading 4";
	font-family:"Arial","sans-serif";}
span.Heading5Char
	{mso-style-name:"Heading 5 Char";
	mso-style-link:"Heading 5";
	font-family:"Arial","sans-serif";
	font-weight:bold;}
span.Heading6Char
	{mso-style-name:"Heading 6 Char";
	mso-style-link:"Heading 6";
	font-family:"Arial","sans-serif";
	font-weight:bold;}
p.rightpar, li.rightpar, div.rightpar
	{mso-style-name:rightpar;
	margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
p.body, li.body, div.body
	{mso-style-name:body;
	margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
p.technical4, li.technical4, div.technical4
	{mso-style-name:technical4;
	margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
span.titlechar0
	{mso-style-name:titlechar;}
p.frenchsignature, li.frenchsignature, div.frenchsignature
	{mso-style-name:frenchsignature;
	margin-right:0cm;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
span.hps
	{mso-style-name:hps;}
span.BodyTextChar
	{mso-style-name:"Body Text Char";
	mso-style-link:"Body Text";
	font-family:"Times New Roman","serif";}
p.RightPar0, li.RightPar0, div.RightPar0
	{mso-style-name:"Right Par";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"CG Times 12.00pt","serif";}
p.Technical40, li.Technical40, div.Technical40
	{mso-style-name:"Technical 4";
	margin:0cm;
	margin-bottom:.0001pt;
	punctuation-wrap:simple;
	text-autospace:none;
	font-size:12.0pt;
	font-family:"CG Times 12.00pt","serif";
	font-weight:bold;}
span.ListParagraphChar
	{mso-style-name:"List Paragraph Char";
	mso-style-link:"List Paragraph";}
 /* Page Definitions */
 @page WordSection1
	{size:612.0pt 792.0pt;
	margin:72.0pt 72.0pt 36.0pt 72.0pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>





<div class="WordSection1">

<div style="border:none;border-bottom:double windowtext 2.25pt;padding:0cm 0cm 1.0pt 0cm;
margin-left:0cm;margin-right:9.0pt">

<p class="MsoNormal" style="border:none;padding:0cm"><span lang="FR-CA" style="font-size:2.0pt">&nbsp;</span></p>

</div>

<p class="MsoNormal" align="right" style="text-align:right;punctuation-wrap:simple;
text-autospace:none;vertical-align:baseline"><span lang="EN-GB"><img width="135" height="61" src="filestream.ashx?documentid=8016"></span></p>

<h1>&nbsp;</h1>

<h1>OTTAWA CITY COUNCIL<br>
<br>
Wednesday, 27 June 2012, <br>
<br>
STUDIO THEATRE, BEN FRANKLIN PLACE<br>
<br>
</h1>

<h1>10:00 a.m.</h1>

<h1><br>
AGENDA 37</h1>

<div style="border:none;border-bottom:double windowtext 2.25pt;padding:0cm 0cm 0cm 0cm;
margin-left:0cm;margin-right:9.0pt">

<p class="MsoNormal" align="center" style="margin-left:72.0pt;text-align:center;
text-indent:-72.0pt;border:none;padding:0cm"><b>&nbsp;</b></p>

</div>

<p class="MsoNormal"><b>&nbsp;</b></p>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126619"><span lang="EN-US">PRAYER </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126620"><span lang="EN-US">NATIONAL ANTHEM </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:432.3pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="576" valign="top" style="width:432.3pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal"><a name="Item126681"></a><a href="#" target="pubright" class="SelectableItem" itemid="126681"><span lang="EN-US">Councillor R. Chiarelli</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126621"><span lang="EN-US">ANNOUNCEMENTS/CEREMONIAL ACTIVITIES </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:9.75pt">
  <td width="38" valign="top" style="width:1.0cm;padding:0cm 5.4pt 0cm 5.4pt;
  height:9.75pt">
  <p class="MsoNormal" style="margin-left:22.95pt;text-align:justify;text-indent:
  -18.0pt"><span lang="EN-US" style="font-family:Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US">&nbsp;</span></p>
  </td>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:9.75pt">
  <p class="MsoNormal" style="text-align:justify"><a name="Item126682"></a><a href="#" target="pubright" class="SelectableItem" itemid="126682"><span lang="EN-US">Recognition - Mayor’s City Builder Award</span></a><a name="OLE_LINK4"></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:9.75pt">
  <td width="38" valign="top" style="width:1.0cm;padding:0cm 5.4pt 0cm 5.4pt;
  height:9.75pt">
  <p class="MsoNormal" style="margin-left:22.95pt;text-align:justify;text-indent:
  -18.0pt"><span lang="EN-US" style="font-family:Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US">&nbsp;</span></p>
  </td>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:9.75pt">
  <p class="MsoNormal" style="text-align:justify"><a name="Item126683"></a><a href="#" target="pubright" class="SelectableItem" itemid="126683"><span lang="EN-US">Presentation – </span><span lang="EN-US">Senior of the Year Award
  2012</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126622"><span lang="EN-US">ROLL CALL </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126623"><span lang="EN-US">CONFIRMATION OF MINUTES </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:4.35pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:4.35pt">
  <p class="MsoHeader" style="margin-top:12.0pt;text-align:justify"><a name="Item126684"></a><a href="#" target="pubright" class="SelectableItem" itemid="126684"><span lang="EN-US">Confirmation of the Minutes of the regular meeting of 13 June
  2012.</span></a><span lang="EN-US"> </span></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126624"><span lang="EN-US">DECLARATIONS OF INTEREST INCLUDING
  THOSE ORIGINALLY ARISING FROM PRIOR MEETINGS </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126625"><span lang="EN-US">COMMUNICATIONS </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:4.35pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:4.35pt">
  <p class="MsoNormal"><a name="Item126626"><span lang="EN-US">Association of
  Municipalities of Ontario (AMO): </span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:4.35pt">
  <td width="38" valign="top" style="width:1.0cm;padding:0cm 5.4pt 0cm 5.4pt;
  height:4.35pt">
  <p class="MsoNormal" style="margin-left:22.95pt;text-align:justify;text-indent:
  -18.0pt"><span lang="EN-US" style="font-family:Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US">&nbsp;</span></p>
  </td>
  <td width="520" valign="top" style="width:389.8pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:4.35pt">
  <p class="MsoNormal"><a name="Item126685"></a><a href="#" target="pubright" class="SelectableItem" itemid="126685"><span lang="EN-US">Policing Issues - Update to Members</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:4.35pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:4.35pt">
  <p class="MsoNormal"><a name="Item126627"><span lang="EN-US">Response to Inquiries:
  </span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:11.35pt">
  <td width="38" valign="top" style="width:1.0cm;padding:0cm 5.4pt 0cm 5.4pt;
  height:11.35pt">
  <p class="MsoNormal" style="margin-left:22.95pt;text-align:justify;text-indent:
  -18.0pt"><span lang="EN-US" style="font-family:Symbol">·<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang="EN-US">&nbsp;</span></p>
  </td>
  <td width="520" valign="top" style="width: 389.8pt; padding: 0cm 5.4pt; height: 11.35pt; position: relative;">
  <p class="rightpar" style="margin: 0cm 25px 0.0001pt 0cm; text-align: justify;"><a name="Item126686"></a><a href="#" target="pubright" class="SelectableItem" itemid="126686"><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">05-12 – </span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">Joint Ottawa-Gatineau Transit
  Committee</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:4.35pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:4.35pt">
  <p class="MsoNormal"><a name="Item126629"><span lang="EN-US">Petitions </span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<ul style="margin-top:0cm" type="disc">
 <ul style="margin-top:0cm" type="disc">
  <li class="MsoNormal" style="text-align:justify"><a name="OLE_LINK8"></a><a name="OLE_LINK7"><span lang="EN-US">Petition received from residents of 475
      Laurier Avenue West, containing 73 signatures, requesting the City of
      Ottawa adjust the current bike lane and no-stopping zone configuration
      around 475 Laurier Avenue West to provide reasonable access to the
      building by vehicle.</span></a></li>
 </ul>
</ul>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126630"><span lang="EN-US">REGRETS </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:5.3pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:5.3pt">
  <p class="body" style="margin:0cm;margin-bottom:.0001pt"><a name="Item126688"></a><a href="#" target="pubright" class="SelectableItem" itemid="126688"><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">No regrets filed to date.</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126631"><span lang="EN-US">MOTION TO INTRODUCE REPORTS </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="technical4" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
  text-autospace:ideograph-numeric"><a name="Item126689"></a><a href="#" target="pubright" class="SelectableItem" itemid="126689"><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">(Councillors M. Taylor
  and D. Deans)</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><b><span lang="FR-CA">&nbsp;</span></b></p>

<p class="MsoNormal"><b><span lang="FR-CA">REPORTS</span></b></p>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126649"><span lang="EN-US">CITY CLERK AND SOLICITOR DEPARTMENT </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">1.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4><a name="Item126690"></a><a href="#" target="pubright" class="SelectableItem" itemid="126690"><span lang="EN-US">STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR THE PERIOD
  ENDING 22 JUNE 2012</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <h1 align="left" style="text-align:left"><u><span lang="EN-US">REPORT
  RECOMMENDATION</span></u></h1>
  <p class="MsoNormal" style="margin-left:72.0pt"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoNormal"><b><span lang="EN-US">T</span></b><b><span lang="EN-US">hat
  Council receive this report for information.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126651"><span lang="EN-US">COMMITTEE REPORTS </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal"><a name="Item126653"><span lang="EN-US">COMMUNITY AND
  PROTECTIVE SERVICES COMMITTEE REPORT 15</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">2.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126691"></a><a href="#" target="pubright" class="SelectableItem" itemid="126691"><span lang="EN-US">2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY AND SOCIAL
  SERVICES DEPARTMENT</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal"><b><u><span lang="EN-US" style="text-transform:uppercase">COMMITTEE
  RECOMMENDATIONS</span></u></b></p>
  <p class="MsoNormal" style="margin-left:90.0pt;text-indent:-18.0pt"><b><span lang="EN-US" style="font-size:8.0pt">&nbsp;</span></b></p>
  <p class="MsoNormal"><b><span lang="EN-US">That Council approve that:</span></b></p>
  <p class="MsoNormal" style="margin-left:90.0pt;text-indent:-18.0pt"><b><span lang="EN-US" style="font-size:8.0pt">&nbsp;</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:26.1pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -26.1pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">1.</span></b><b><span style="font-size:7.0pt">&nbsp;&nbsp;&nbsp; &nbsp;</span></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">The City of Ottawa maintain discretionary
  benefits to social assistance recipients&nbsp; at existing levels for the balance
  of 2012, and</span></b></p>
  <p class="MsoNormal" style="margin-left:26.1pt;text-indent:-26.1pt"><b><span lang="EN-US" style="font-size:8.0pt">&nbsp;</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:26.1pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -26.1pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">2.</span></b><b><span style="font-size:7.0pt">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;</span></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">Staff complete a review of the
  Community and Social Services Department’s social investments and priorities </span></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">to ensure the 2013 budget aligns to
  the Council endorsed budget strategies outlined in the Long Range Financial
  Plan IV document and report back as part of the 2013 budget process.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal">&nbsp;</p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">3.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126693"></a><a href="#" target="pubright" class="SelectableItem" itemid="126693"><span lang="EN-US" style="text-transform:uppercase">SMOKING OF WATER-PIPES AND
  NON-TOBACCO PRODUCTS ON MUNICIPAL PROPERTY</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal" style="text-align:justify"><b><u><span lang="EN-US" style="text-transform:uppercase">COMMITTEE RECOMMENDATION</span></u></b></p>
  <p class="MsoNormal" style="margin-left:72.0pt;text-align:justify"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoNormal" style="text-align:justify"><b><span lang="EN-US">That
  Council enact the amendments to the Parks and Facilities By-law, attached as
  Document 1, to prohibit the smoking of water-pipes and non-tobacco products
  on outdoor municipal property including all City parks, beaches and
  facilities.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal"><a name="Item126654"><span lang="EN-US">ENVIRONMENT COMMITTEE
  REPORT 16</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">4.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126695"></a><a href="#" target="pubright" class="SelectableItem" itemid="126695"><span lang="FR-CA" style="text-transform:uppercase">2011 WASTEWATER ANNUAL COMPLIANCE
  REPORT</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATION</span></u></b></span></p>
  <p class="MsoHeader"><span class="MsoPlaceholderText"><b><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></span></p>
  <p class="MsoNormal"><b><span lang="EN-US">That Council receive this report for
  information.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">5.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126696"></a><a href="#" target="pubright" class="SelectableItem" itemid="126696"><span lang="EN-US">2004 AND 2008 GREENHOUSE GAS INVENTORIES, REDUCTION MEASURES AND
  APPROACH TO FUTURE TARGETS</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader" style="text-align:justify"><span class="MsoPlaceholderText"><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE MEETING
  INFORMATION</span></u></span></p>
  <p class="MsoHeader" style="margin-left:144.0pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></span></p>
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">Delegations: </span></span><span lang="EN-US" style="text-transform:uppercase">2 </span><span lang="EN-US">spoke in support
  of the report.</span></p>
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">Debate:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span lang="EN-US">Committee
  spent approximately 1 hour on this item<span class="MsoPlaceholderText"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">.</span></span></span></p>
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">Vote:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Carried as amended by a motion to
  have a Round Table.&nbsp; Councillor Hubley dissented.</span></span></p>
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">Position of Ward Councillor: City wide.</span></span></p>
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">Position of Advisory Committee: Environmental Advisory
  Committee is in support of this item.</span></span></p>
  <p class="MsoListParagraph" style="margin:0cm;margin-bottom:.0001pt;text-align:
  justify"><b><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></p>
  <b><u><span lang="EN-US" style="font-size:12.0pt;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"><br clear="all" style="page-break-before:always">
  </span></u></b>
  <p class="MsoHeader" style="text-align:justify"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATIONS
  AS AMENDED</span></u></b></span></p>
  <p class="MsoHeader" style="margin-left:90.0pt;text-align:justify;text-indent:
  -18.0pt"><span class="MsoPlaceholderText"><b><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></span></p>
  <p class="MsoNormal" style="margin-bottom:6.0pt;text-align:justify"><b><span lang="EN-US">That Council approve the city host a stakeholders’ Round Table,
  including members representing business groups such as the Ottawa Chamber of Commerce
  Environment Committee, Invest Ottawa, as well as community groups and
  organizations, etc. to engage the community on the matter of GHG reductions
  by examining the following questions and promoting solutions:</span></b></p>
  <p class="MsoListParagraphCxSpFirst" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:6.0pt;margin-left:17.1pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">1)</span></b><b><span style="font-size:7.0pt;line-height:115%">&nbsp;&nbsp;&nbsp; </span></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">What strategies according to cost/benefit
  analysis result in the greatest reduction of GHG;</span></b></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:6.0pt;margin-left:17.1pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">2)</span></b><b><span style="font-size:7.0pt;line-height:115%">&nbsp;&nbsp;&nbsp; </span></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">What solutions offer the fastest
  payback in terms of GHG reductions;</span></b></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:6.0pt;margin-left:17.1pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">3)</span></b><b><span style="font-size:7.0pt;line-height:115%">&nbsp;&nbsp;&nbsp; </span></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">What solutions have the lowest
  barriers to success;</span></b></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:6.0pt;margin-left:17.1pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">4)</span></b><b><span style="font-size:7.0pt;line-height:115%">&nbsp;&nbsp;&nbsp; </span></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">What utilities and companies can
  provide synergies through energy reduction &amp; efficiency programs;</span></b></p>
  <p class="MsoListParagraphCxSpLast" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:6.0pt;margin-left:17.1pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">5)</span></b><b><span style="font-size:7.0pt;line-height:115%">&nbsp;&nbsp; </span></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">How can efficient appliances and/or
  building features be promoted to a greater degree (e.g., low flush toilets);
  and,</span></b></p>
  <p class="MsoNormal" style="margin-top:0cm;margin-right:0cm;margin-bottom:6.0pt;
  margin-left:17.1pt;text-align:justify"><b><span lang="EN-US">That the
  Environment Committee select 2 Councillors to sponsor the Round Table; and
  that the roundtable be chaired by Councillor Maria McRae, Chair of the
  Environment Committee; and,</span></b></p>
  <p class="MsoNormal" style="margin-top:0cm;margin-right:0cm;margin-bottom:6.0pt;
  margin-left:17.1pt;text-align:justify"><b><span lang="EN-US">That the City of
  Ottawa maintain or exceed its current level under the Federation of Canadian
  Municipalities’ Partners for Climate Protection program.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal"><a name="Item126656"><span lang="EN-US">PLANNING COMMITTEE
  REPORT 32A</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">6.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126697"></a><a href="#" target="pubright" class="SelectableItem" itemid="126697"><span lang="EN-US" style="text-transform:uppercase">ZONING – 99, 101, 105 AND 107
  PARKDALE AVENUE</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><u><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE MEETING INFORMATION</span></u></span></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:71.1pt;margin-bottom:.0001pt;text-align:justify">&nbsp;</p>
  <p class="MsoNormal" style="margin-left:71.1pt;text-align:justify;text-indent:
  -67.5pt"><span lang="EN-US">Delegations<span style="text-transform:uppercase">:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Eight
  speakers in opposition, four in favour, two additional written comments
  submitted (in opposition, with three people adding their names to one of the
  written statements); one phone call from resident asking that zoning remain
  unchanged. </span></p>
  <p class="MsoNormal" style="margin-left:71.1pt;text-align:justify;text-indent:
  -67.5pt"><span lang="EN-US">Debate: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Approximately 2 hours spent on this
  item for delegations, questions &amp; receipt of information from staff and
  Committee discussion.</span></p>
  <p class="MsoNormal" style="margin-left:71.1pt;text-align:justify;text-indent:
  -67.5pt"><span lang="EN-US">Vote:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CARRIED (unanimously), without
  amendment.</span></p>
  <p class="MsoNormal" style="margin-left:71.1pt;text-align:justify;text-indent:
  -67.5pt"><span lang="EN-US">Position of Ward Councillor:&nbsp; Is aware of the
  application, as noted in report. </span></p>
  <p class="MsoNormal" style="margin-left:71.1pt;text-align:justify;text-indent:
  -67.5pt"><span lang="EN-US">Position of Advisory Committee(s): Not listed in
  report.</span></p>
  <p class="MsoHeader" style="text-align:justify"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoHeader" style="text-align:justify"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATION</span></u></b></span></p>
  <p class="MsoHeader" style="margin-left:72.0pt;text-align:justify"><span class="MsoPlaceholderText"><b><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></span></p>
  <p class="MsoNormal" style="text-align:justify"><b><span lang="EN-US">That
  Council approve an amendment to&nbsp; Zoning By-law 2008-250 to change the zoning
  of 99, 101, 105 and 107 Parkdale Avenue from Residential Fifth Density,
  Subzone B, Maximum building height of 37 metres, R5B H(37), to a new
  Residential Fifth Density Subzone B, Exception, Schedule YYY Zone with a
  holding symbol, R5B[xxxx] Syyy-h, as shown in Document 1 and detailed in
  Documents </span></b><b><span lang="EN-US">2 and 3.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">7.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126698"></a><a href="#" target="pubright" class="SelectableItem" itemid="126698"><span lang="EN-US" style="text-transform:uppercase">ZONING - 2020 DORIMA STREET</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader" style="text-align:justify"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATION</span></u></b></span></p>
  <p class="MsoHeader" style="margin-left:72.0pt;text-align:justify"><span class="MsoPlaceholderText"><b><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></span></p>
  <p class="MsoHeader" style="text-align:justify"><b><span lang="EN-US">That
  Council approve an amendment to the Zoning By-law No. 2008-250 to change the
  zoning of 2020 Dorima Street from R1HH[714] – Residential First Density Zone,
  Subzone HH, Exception 714 to R4A[XXXX] – Residential Fourth Density Zone,
  Subzone A, Exception [XXXX] as shown on Document</span></b><b><span lang="EN-US"> 1 and as detailed in Document 2.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">8.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126699"></a><a href="#" target="pubright" class="SelectableItem" itemid="126699"><span lang="EN-US" style="text-transform:uppercase">RESULTS OF THE ENVIRONMENTAL
  IMPACT STATEMENT GUIDELINES REVIEW</span><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader" style="text-align:justify"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATIONS</span></u></b></span></p>
  <p class="MsoHeader" style="margin-left:90.0pt;text-align:justify;text-indent:
  -18.0pt"><span class="MsoPlaceholderText"><b><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></span></p>
  <p class="MsoNormal" style="text-align:justify"><b><span lang="EN-US">That
  Council:</span></b></p>
  <p class="MsoNormal" style="margin-left:90.0pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoNormal" style="margin-left:17.1pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">1.&nbsp;&nbsp; Approve the revisions to the Environmental
  Impact Statement Guidelines, as shown in Document 1;</span></b></p>
  <p class="MsoNormal" style="margin-left:17.1pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoNormal" style="margin-left:17.1pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">2.&nbsp;&nbsp; Approve the addition of a new condition of
  draft approval, as shown in Document&nbsp;2, to the City’s standard menu of
  conditions for draft approval of subdivisions;</span></b></p>
  <b><span style="font-size:12.0pt;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"><br clear="all" style="page-break-before:always">
  </span></b>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:17.1pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:17.1pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">3.&nbsp;&nbsp; Delegate
  authority to the General Manager, Planning and Growth Management, to approve
  any future minor revisions required to provide additional clarity or to
  ensure that the Environmental Impact Statement Guidelines are kept current
  and correct with respect to the City’s Official Plan policies, provincial
  requirements, technical information and best practices for mitigation
  measures; and</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:36.0pt;
  margin-bottom:0cm;margin-left:17.1pt;margin-bottom:.0001pt;text-align:justify;
  text-indent:-18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:17.1pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">4.&nbsp;&nbsp; Refer the
  addition of a budget pressure for a second Environmental Planner for
  consideration in the 2013 budget process.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<span lang="FR-CA" style="font-size:12.0pt;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"><br clear="all" style="page-break-before:always">
</span>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">9.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4><a name="Item126748"></a><a href="#" target="pubright" class="SelectableItem" itemid="126748"><span lang="EN-US">LANSDOWNE SIGNAGE AND WAY-FINDING PLAN</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader" style="text-align:justify"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATIONS
  AS AMENDED</span></u></b></span></p>
  <p class="MsoHeader" style="margin-left:90.0pt;text-align:justify;text-indent:
  -18.0pt"><span class="MsoPlaceholderText"><b><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></span></p>
  <p class="MsoNormal"><b><span lang="EN-US">That Council:</span></b></p>
  <p class="MsoListParagraph" style="margin-left:21.6pt;text-align:justify;
  text-indent:-18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">1.&nbsp;&nbsp; Approve
  the <u>revised</u> Lansdowne Signage and Way-finding Plan attached as
  Document 1; <u>as amended by the following</u>:</span></b></p>
  <p class="MsoNormal" style="margin-left:44.1pt;text-align:justify;text-indent:
  -22.5pt"><b><u><span lang="EN-US">a)</span></u></b><b><span lang="EN-US">&nbsp;&nbsp;&nbsp; <u>That
  Document 1, Appendix 2 of the above-noted report be replaced with the REVISED
  Appendix 2 which </u></span></b><b><u><span lang="EN-US">extends the Stadium
  Zone to include the area behind Buildings I and K, showing the latest
  proposed footprint areas for Buildings I and K so that the intent is clear
  and will allow the new Scoreboard, should it be approved in the west location
  by the Lansdowne Design Review Panel (LDRP); </span></u></b></p>
  <p class="MsoNormal" style="margin-left:108.0pt;text-align:justify;text-indent:
  -18.0pt"><b><u><span lang="EN-US"><span style="text-decoration:none">&nbsp;</span></span></u></b></p>
  <p class="MsoNormal" style="margin-left:44.1pt;text-align:justify;text-indent:
  -18.0pt"><b><u><span lang="EN-US">b)</span></u></b><b><span lang="EN-US">&nbsp; <u>That
  no further notice be provided pursuant to Section 34(17) of the <i>Planning
  Act</i>, and;</u></span></b></p>
  <p class="MsoNormal" style="margin-left:90.0pt;text-align:justify;text-indent:
  -18.0pt"><b><u><span style="text-decoration:none">&nbsp;</span></u></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:17.1pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">2.&nbsp;&nbsp; Direct the
  General Manager, Planning and Growth Management to determine the requirements
  to give legislative effect to the Lansdowne Signage and Way-Finding Plan and
  report back to Planning Committee and Council.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal"><a name="Item126657"><span lang="EN-US">PLANNING COMMITTEE
  REPORT 33</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">10.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126797"></a><a href="#" target="pubright" class="SelectableItem" itemid="126797"><span lang="EN-US">RECOMMENDED COUNCIL POSITION FOR URBAN BOUNDARY – PHASE 2B HEARING
  – ONTARIO MUNICIPAL BOARD</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="frenchsignature" style="margin:0cm;margin-bottom:.0001pt;text-align:
  justify"><b><u><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;text-transform:
  uppercase">Committee recommendationS AS AMENDED</span></u></b></p>
  <p class="MsoNormal" style="margin-left:108.0pt;text-indent:-36.0pt"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoNormal"><b><span lang="EN-US" style="letter-spacing:-.15pt">That
  Council approve:</span></b></p>
  <p class="MsoNormal" style="margin-left:108.0pt;text-indent:-36.0pt;punctuation-wrap:
  simple"><b><span lang="EN-US" style="letter-spacing:-.15pt">&nbsp;</span></b></p>
  <p class="MsoNormal" style="margin-left:35.1pt;text-indent:-36.0pt"><b><u><span lang="EN-US">1.</span></u></b><b><span lang="EN-US">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u>That in respect
  of Area 2 in the report “Recommended Council Position for Urban Boundary –
  Phase 2B Hearing – Ontario Municipal Board” it be shown that it has 38.7
  gross developable hectares;</u></span></b></p>
  <p class="MsoNormal" style="margin-left:108.0pt;text-indent:-36.0pt"><b><u><span lang="EN-US"><span style="text-decoration:none">&nbsp;</span></span></u></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:35.1pt;margin-bottom:.0001pt;text-indent:-36.0pt"><b><u><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">2.</span></u></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <u>A revision to Tables 1
  and 2 to include in Table 1 parcels 2 &amp; 8A and that the necessary
  modifications be made to Document 1</u><span style="color:black">; </span></span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:108.0pt;margin-bottom:.0001pt;text-indent:-36.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;letter-spacing:-.15pt">&nbsp;</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:108.0pt;margin-bottom:.0001pt;text-indent:-36.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;letter-spacing:-.15pt">&nbsp;</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:35.1pt;margin-bottom:.0001pt;text-indent:-36.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;letter-spacing:-.15pt">3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The
  parcels shown in Document 1, <u>as amended by the foregoing</u>, as Schedules
  R47, R48 and R49 as the City’s submission to the Ontario Municipal Board to
  form the balance of the urban area expansion; and </span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:108.0pt;margin-bottom:.0001pt;text-indent:-36.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;letter-spacing:-.15pt">&nbsp;</span></b></p>
  <p class="MsoNormal" style="margin-left:35.1pt;text-indent:-36.0pt"><b><span lang="EN-US" style="color:black">4.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; An amendment to the Urban Tree
  Conservation By-law, By-law 2009-200, effective 27 June 2012, extending the
  application of the by-law to the additional parcels shown in Document 1 <u>as
  amended by the foregoing</u>.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">11.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126798"></a><a href="#" target="pubright" class="SelectableItem" itemid="126798"><span lang="EN-US">URBAN BOUNDARY PHASE 2B WITNESS STATEMENTS</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="frenchsignature" style="margin:0cm;margin-bottom:.0001pt;text-align:
  justify"><b><u><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;text-transform:
  uppercase">Committee recommendation</span></u></b></p>
  <p class="MsoNormal" style="margin-left:71.1pt"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoNormal"><b><span lang="EN-US">That Council receive this report for
  information.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal"><a name="Item126658"><span lang="EN-US">TRANSIT COMMISSION
  REPORT 13</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">12.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126799"></a><a href="#" target="pubright" class="SelectableItem" itemid="126799"><span lang="EN-US" style="text-transform:uppercase">EXTENSION OF ECOPASS PROGRAM</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><u><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE MEETING INFORMATION</span></u></span><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">
  </span></span></p>
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></span></p>
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">Delegations: The Commission received one delegation who
  raised concerns.</span></span></p>
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">Debate:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; The Commission spent approximately 2
  hours and 20 minutes discussing this item.</span></span></p>
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">Vote:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Following a presentation from
  Metrolinx and subsequent discussion the Commission approved one motion
  unanimously.</span></span></p>
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">Position of Ward Councillor: City wide</span></span></p>
  <p class="MsoHeader" style="margin-left:71.1pt;text-align:justify;text-indent:
  -72.0pt"><span class="MsoPlaceholderText"><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">Position of Advisory Committee: n/a</span></span></p>
  <p class="MsoHeader" style="text-align:justify"><span lang="EN-US">&nbsp;</span></p>
  <p class="MsoHeader" style="text-align:justify"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMISSION RECOMMENDATION</span></u></b></span></p>
  <p class="MsoHeader" style="margin-left:72.0pt;text-align:justify"><span class="MsoPlaceholderText"><b><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></span></p>
  <p class="MsoHeader" style="text-align:justify"><b><span lang="EN-US">That City
  Council authorize OC Transpo to extend individual employer ECOPASS agreements
  for one year and that the ECOPASS fare remains at the 2011- 2012 level, plus
  a 2.5% general fare increase, which is $84.56 per month for regular ECOPASS
  and $104.55 per month for express ECOPASS, and that efforts be made to
  re-enroll those ECOPASS customers who have already cancelled if they request
  it.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal"><a name="Item126659"><span lang="EN-US">TRANSPORTATION
  COMMITTEE REPORT 18A</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">13.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126800"></a><a href="#" target="pubright" class="SelectableItem" itemid="126800"><span lang="EN-US">WESTERN LRT CORRIDOR (BAYVIEW TO BASELINE) PLANNING AND
  ENVIRONMENTAL ASSESSMENT - INTERIM PROGRESS REPORT</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal"><u><span lang="EN-US" style="text-transform:uppercase">Committee
  meeting information</span></u></p>
  <p class="MsoNormal" style="margin-left:71.1pt;text-indent:-36.0pt"><u><span lang="EN-US" style="text-transform:uppercase"><span style="text-decoration:
   none">&nbsp;</span></span></u></p>
  <p class="MsoNormal" style="margin-left:71.1pt;text-indent:-72.0pt"><span lang="EN-US">Delegations<span style="text-transform:uppercase">: </span>Eight<span style="text-transform:uppercase"> (8) </span>delegations spoke to this item;
  7 in opposition to the report recommendations and 6<span class="MsoPlaceholderText"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">
  comments/submissions received.</span></span></span></p>
  <p class="MsoNormal" style="margin-left:71.1pt;text-indent:-72.0pt"><span lang="EN-US">Debate: &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Committee spent about 2 hours 20 minutes in total
  on this item.</span></p>
  <p class="MsoNormal" style="margin-left:71.1pt;text-indent:-72.0pt"><span lang="EN-US">Vote:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Carried as presented.</span></p>
  <p class="MsoNormal" style="margin-left:39.6pt;text-align:justify;text-indent:
  -40.5pt"><span lang="EN-US">Position of Ward Councillors: In support
  (Councillors Hobbs and Taylor.)</span></p>
  <p class="MsoNormal" style="margin-left:35.1pt;text-align:justify;text-indent:
  -36.0pt"><span lang="EN-US">Position of Advisory Committee(s):&nbsp; N/A.</span></p>
  <p class="MsoHeader" style="margin-left:36.0pt;text-align:justify"><span class="MsoPlaceholderText"><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"><span style="text-decoration:none">&nbsp;</span></span></u></span></p>
  <p class="MsoHeader" style="margin-left:21.6pt;text-align:justify;text-indent:
  -18.0pt"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATIONS</span></u></b></span></p>
  <p class="MsoHeader" style="margin-left:21.6pt;text-align:justify;text-indent:
  -18.0pt"><span class="MsoPlaceholderText"><b><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></span></p>
  <p class="MsoNormal" style="margin-left:21.6pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">That Council:</span></b></p>
  <p class="MsoNormal" style="margin-left:21.6pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:21.6pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">1.</span></b><b><span style="font-size:7.0pt">&nbsp;&nbsp;&nbsp; </span></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">Receive the interim report and
  renewed work plan for the Western LRT Corridor Environmental Assessment as
  described in this report, and use this information to inform the
  Transportation Master Plan; and</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:21.6pt;margin-bottom:.0001pt;text-indent:-18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:21.6pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">2.</span></b><b><span style="font-size:7.0pt">&nbsp;&nbsp;&nbsp; </span></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">Direct staff to undertake additional
  work as described in this report.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">14.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126801"></a><a href="#" target="pubright" class="SelectableItem" itemid="126801"><span lang="EN-US">BUY-OUT OF LEASED LOADERS</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader" style="text-align:justify"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATION</span></u></b></span></p>
  <p class="MsoNormal" style="margin-left:72.0pt">&nbsp;</p>
  <p class="MsoNormal" style="text-align:justify"><b><span lang="EN-US">That
  Council approve the buy-out of five (5) leased loaders and associated
  implements at a cost of $841,000, to be funded from the Corporate Fleet
  Reserve.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">15.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126802"></a><a href="#" target="pubright" class="SelectableItem" itemid="126802"><span lang="EN-US">MANOR PARK WATERMAIN, SEWER &amp; ROAD RECONSTRUCTION</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader" style="text-align:justify"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATION</span></u></b></span></p>
  <p class="MsoNormal" style="margin-left:72.0pt">&nbsp;</p>
  <p class="MsoNormal" style="text-align:justify"><b><span lang="EN-US">That
  Council approve that the Manor Park Watermain, Sewer and Road Reconstruction
  on Merriman (Arundel to Sandridge) project proceed without the sidewalk
  component on Merriman.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126660"><span lang="EN-US">REVISED BULK CONSENT AGENDA </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:379.55pt;margin-left:50.4pt;border-collapse:collapse">
 <tbody><tr style="height:14.05pt">
  <td width="506" valign="top" style="width:379.55pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.05pt">
  <h3><a name="Item126664"><span lang="EN-US">PLANNING COMMITTEE REPORT 32A</span></a></h3>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">A.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <h4><a name="Item126805"></a><a href="#" target="pubright" class="SelectableItem" itemid="126805"><span lang="EN-US">FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MOON BAY,
  AMPERSAND PARKETTE IN AMPERSAND SOUTH NEPEAN TOWN CENTRE, ENTRY PARK MAHOGANY
  AND SPRING POND PARK MAHOGANY</span></a></h4>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;color:gray">COMMITTEE RECOMMENDATIONS</span></u></b></span></p>
  <p class="MsoHeader" style="margin-left:72.0pt;text-indent:-18.0pt"><span class="MsoPlaceholderText"><b><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></span></p>
  <p class="MsoNormal" style="text-align:justify"><b><span lang="EN-US">That
  Council:</span></b></p>
  <p class="MsoNormal" style="margin-left:72.0pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:17.1pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">1.&nbsp;&nbsp; Approve in
  accordance with the City Park and Trail Front-End Policy, to authorize the
  expenditure of $ 909,322, plus applicable taxes, for reimbursement of design
  and construction costs for Regatta Park, Ampersand Parkette, Entry Park and
  Spring Pond Park as detailed in this report.</span></b></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-left:17.1pt;text-align:
  justify;text-indent:-18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">2.&nbsp;&nbsp; Authorize
  the City to enter into a Front-ending agreement with Mattamy (Half Moon Bay)
  Limited to enable the design and construction of Regatta Park at Egret Way
  Block 111 on 4M-1443 and Block 124 on 4M-1451 in the Half Moon Bay Community
  in accordance with the Council approved Park and Trail Front-ending Policy in
  Document 1 and the Front-ending Agreement Principles set out in Document 2 to
  the satisfaction of the Deputy City Manager, Planning and Infrastructure and
  the City Clerk and Solicitor;</span></b></p>
  <p class="MsoListParagraphCxSpLast" style="margin-left:17.1pt;text-align:justify;
  text-indent:-18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">3.&nbsp;&nbsp; Authorize
  the City to enter into a Front-ending agreement with Minto Communities Inc.
  to enable the design and construction of Ampersand Parkette (Block 124)
  located in Ampersand Community, South Nepean Town Centre in accordance with
  the Council approved Park and Trail Front-ending Policy in Document 1 and the
  Front-ending Agreement Principles set out in Document 2 to the satisfaction
  of the Deputy City Manager, Planning and Infrastructure and the City Clerk
  and Solicitor;</span></b></p>
  <b><span lang="EN-US" style="font-size:12.0pt;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"><br clear="all" style="page-break-before:always">
  </span></b>
  <p class="MsoNormal" style="margin-left:17.1pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">4.&nbsp;&nbsp; Authorize the City to enter into a
  Front-ending agreement with Minto Communities, Inc. to enable the design and
  construction of Entry Park (Block 198) located in the Mahogany Manotick
  Community in accordance with the Council approved Park and Trail Front-ending
  Policy in Document 1 and the Front-ending Agreement Principles set out in
  Document 2 to the satisfaction of the Deputy City Manager, Planning and
  Infrastructure and the City Clerk and Solicitor; and</span></b></p>
  <p class="MsoListParagraph" style="margin-left:17.1pt;text-align:justify;
  text-indent:-18.0pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">5.&nbsp;&nbsp; Authorize
  the City to enter into a Front-ending agreement with Minto Communities, Inc.
  to enable the design and construction of Spring Pond Parkette (Blocks 208 and
  including Open Space Block 207) located in the Mahogany Manotick Community in
  accordance with the Council approved Park and Trail Front-ending Policy in
  Document 1 and the Front-ending Agreement Principles set out in Document 2 to
  the satisfaction of the Deputy City Manager, Planning and Infrastructure and
  the City Clerk and Solicitor.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">B.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126806"></a><a href="#" target="pubright" class="SelectableItem" itemid="126806"><span lang="EN-US">ONASSA SPRINGS GATEWAY FEATURE</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader" style="text-align:justify"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATIONS</span></u></b></span></p>
  <p class="MsoHeader" style="margin-left:72.0pt;text-align:justify;text-indent:
  -18.0pt"><span class="MsoPlaceholderText"><b><span lang="EN-US" style="font-family:
  &quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></span></p>
  <p class="MsoNormal" style="text-align:justify"><b><span lang="EN-US">That
  Council:</span></b></p>
  <p class="MsoNormal" style="margin-left:17.1pt;text-align:justify;text-indent:
  -18.0pt;line-height:50%"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoNormal" style="margin-left:17.1pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">1.&nbsp;&nbsp; Approve that this gateway feature be
  exempted from the size limitations for primary neighbourhood features, the
  funding formula for the maintenance of gateway features, and the restrictions
  on design elements including mechanical, water, and electrical components as
  set out in the City of Ottawa’s Gateway Feature Design Guidelines; and</span></b></p>
  <p class="MsoNormal" style="margin-left:17.1pt;text-align:justify;text-indent:
  -18.0pt;line-height:50%"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoNormal" style="margin-left:17.1pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">2.&nbsp;&nbsp; Subject to the approval of Recommendation
  1, require the applicant to enter into a Maintenance and Liability agreement
  with the City to assume ongoing maintenance and liability obligations with
  respect to the portion of the gateway feature that is to be on City lands.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">C.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126807"></a><a href="#" target="pubright" class="SelectableItem" itemid="126807"><span lang="EN-US">EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR THE BUILDINGS
  LOCATED AT 99-107 PARKDALE</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATIONS</span></u></b></span></p>
  <p class="MsoNormal" style="text-align:justify"><b><span lang="EN-US">That
  Council approve that 99-107 Parkdale Avenue be exempted from&nbsp;&nbsp; the
  requirements set out in the Demolition Control By-law in order to enable the
  demolition of the buildings to its foundation subject to the following
  conditions: </span></b></p>
  <p class="MsoNormal" style="margin-left:17.1pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">1.&nbsp;&nbsp; The Owner ensures the property is graded,
  sodded or seeded, fenced and maintained to the standards set out in the
  Property Standards By-law pending development;</span></b></p>
  <p class="MsoNormal" style="margin-left:17.1pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">2.&nbsp;&nbsp; The property is not used or occupied for
  any other interim use, except for the construction and occupancy of an
  on-site sales office and accessory parking; and</span></b></p>
  <p class="MsoNormal" style="margin-left:17.1pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">3.&nbsp;&nbsp; </span></b><b><span lang="EN-US">The Owner
  obtains all the required planning approvals within 2 years of June 12, 2012;
  the building permit is submitted within three years of June 12, 2012 and
  construction substantially completed within five years of June 12, 2012.</span></b></p>
  <p class="MsoNormal" style="margin-left:17.1pt;text-align:justify;text-indent:
  -18.0pt"><b><span lang="EN-US">4.&nbsp;&nbsp; </span></b><b><span lang="EN-US">Subject to
  the approval of Recommendations 1 to 3, and prior to issuance of a demolition
  permit, that the Owner enter into an agreement with the City, to be registered
  on title to the lands, to ensure compliance with the above-noted conditions.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:379.55pt;margin-left:50.4pt;border-collapse:collapse">
 <tbody><tr style="height:14.05pt">
  <td width="506" valign="top" style="width:379.55pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:14.05pt">
  <h3><a name="Item126667"><span lang="EN-US">TRANSPORTATION COMMITTEE REPORT 18A</span></a></h3>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">D.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126808"></a><a href="#" target="pubright" class="SelectableItem" itemid="126808"><span lang="EN-US">HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND OTHER SERVICE
  ROADS</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATION</span></u></b></span></p>
  <p class="MsoHeader" style="margin-left:54.0pt"><span class="MsoPlaceholderText"><b><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">&nbsp;</span></b></span></p>
  <p class="MsoNormal" style="text-align:justify"><b><span lang="EN-US">That
  Council approve the ownership transfer of sections of Cedarview Road and
  other service roads that were created by the Ministry of Transportation of
  Ontario during construction of Highway 416, as outlined in this report.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="width:411.05pt;margin-left:50.4pt;border-collapse:collapse;border:none">
 <tbody><tr style="height:26.5pt">
  <td width="42" valign="top" style="width:31.5pt;border:solid windowtext 1.0pt;
  border-right:none;padding:0cm 5.4pt 0cm 5.4pt;height:26.5pt">
  <h4><span lang="EN-US">E.</span></h4>
  </td>
  <td width="506" valign="top" style="width: 379.55pt; border-top: 1pt solid windowtext; border-right: 1pt solid windowtext; border-bottom: 1pt solid windowtext; border-image: initial; border-left: none; padding: 0cm 5.4pt; height: 26.5pt; position: relative;">
  <p class="MsoNormal" style="margin-right: 25px;"><a name="Item126809"></a><a href="#" target="pubright" class="SelectableItem" itemid="126809"><span lang="EN-US">WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLOW LANDSCAPE
  ENHANCEMENTS AT THE INTERSECTION OF SHIRLEY’S BROOK DRIVE AND MARCH ROAD</span></a></p>
  <div style="position: absolute; top: 0px; right: 0px;"><img src="./_layouts/images/eScribe/paperclip.png"></div></td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoHeader" style="text-align:justify"><span class="MsoPlaceholderText"><b><u><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">COMMITTEE RECOMMENDATION</span></u></b></span></p>
  <p class="MsoNormal" style="text-align:justify"><span lang="EN-US">&nbsp;</span></p>
  <p class="MsoNormal"><b><span lang="EN-US">That Council approve:</span></b></p>
  <p class="MsoNormal" style="margin-left:72.0pt;text-indent:-18.0pt"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:35.1pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -35.1pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">1.</span></b><b><span style="font-size:7.0pt">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">That Section 3(2) of the
  Encroachment By-law No. 2003-446, as amended, and any fee stipulated in
  Schedule "A" of the by-law, be waived to allow the Briarbrook and
  Morgan’s Grant Community Association to make landscape enhancements including
  a rock garden, commemorative plaque and community gateway sign, to the
  grassed portion of the road allowance at the intersection of Shirley’s Brook
  Drive and March Road; and</span></b></p>
  <p class="MsoNormal" style="margin-left:72.0pt;text-indent:-18.0pt"><b><span lang="EN-US">&nbsp;</span></b></p>
  <p class="MsoListParagraph" style="margin-top:0cm;margin-right:0cm;margin-bottom:
  0cm;margin-left:35.1pt;margin-bottom:.0001pt;text-align:justify;text-indent:
  -35.1pt"><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">2.</span></b><b><span style="font-size:7.0pt">&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;</span></b><b><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">That the landscaping be completed in
  accordance with the conditions of Appendix D for Additional Work Agreed upon
  by the City and the Participant under the Adopt-A-Roadway Program.</span></b></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126670"><span lang="EN-US">MOTION TO ADOPT REPORTS </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="technical4" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
  text-autospace:ideograph-numeric"><a name="Item126810"></a><a href="#" target="pubright" class="SelectableItem" itemid="126810"><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">(Councillors M. Taylor
  and D. Deans)</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<p class="RightPar0" style="margin-left:0cm;text-align:justify;punctuation-wrap:
hanging"><b><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">MOTIONS
OF WHICH NOTICE HAS BEEN GIVEN PREVIOUSLY </span></b></p>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<p class="RightPar0" align="center" style="margin-left:0cm;text-align:center;
punctuation-wrap:hanging"><b><u><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">MOTION</span></u></b></p>

<p class="RightPar0" style="margin-left:0cm;punctuation-wrap:hanging"><b><u><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"><span style="text-decoration:none">&nbsp;</span></span></u></b></p>

<p class="RightPar0" style="margin-left:0cm;punctuation-wrap:hanging"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">Moved by Mayor J. Watson</span></p>

<p class="RightPar0" style="margin-left:0cm;punctuation-wrap:hanging"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">Seconded by Councillor M. McRae</span></p>

<p class="MsoNormal" style="margin-right:9.0pt;text-align:justify"><span lang="EN-US">&nbsp;</span></p>

<p class="MsoNormal" style="margin-bottom:10.0pt;text-align:justify"><b><span lang="EN-US">WHEREAS it is the role of Legal Services and the Office of the Chief
Procurement Officer to ensure that the City of Ottawa is protected when
entering into contractual, purchasing and funding agreements; and</span></b></p>

<p class="MsoNormal" style="margin-bottom:10.0pt;text-align:justify"><b><span lang="EN-US">WHEREAS it is both a standard and best practice for Legal Services
and, where appropriate, the Chief Procurement Officer, to review and approve
for execution all legally binding contractual, funding and other such
agreements on behalf of the City; and </span></b></p>

<p class="MsoNormal" style="margin-bottom:10.0pt;text-align:justify"><b><span lang="EN-US">WHEREAS the former General Manager of Transit Services was given the
authority to approve and execute an agreement with Metrolinx for the PRESTO
Smartcard and that agreement was executed without the standard “Approval for
Execution” by Legal Services; and </span></b></p>

<p class="MsoNormal" style="margin-bottom:10.0pt;text-align:justify"><b><span lang="EN-US">WHEREAS this resulted in some clauses to better protect the City
being omitted from this agreement; and</span></b></p>

<p class="MsoNormal" style="margin-bottom:10.0pt;text-align:justify"><b><span lang="EN-US">WHEREAS City Council wants to ensure that this oversight does not
occur in future; </span></b></p>

<p class="MsoNormal" style="margin-bottom:10.0pt;text-align:justify"><b><span lang="EN-US">THEREFORE BE IT RESOLVED that the <i>Delegation of Authority By-law</i>,
and any other relevant by-laws, be amended such that all contracts and similar
agreements must be reviewed and initialed as “Approved for Execution” by Legal
Services and, where appropriate, the Chief Procurement Officer, prior to final
execution; and</span></b></p>

<p class="MsoNormal" style="margin-bottom:10.0pt;text-align:justify"><b><span lang="EN-US">BE IT FURTHER RESOLVED that, where there is a disagreement between
Legal Services and an operating department with respect to a contract that is
awaiting approval for execution, the matter will be brought forward to the
appropriate Standing Committee and Council for resolution; and </span></b></p>

<p class="MsoNormal" style="margin-bottom:10.0pt;text-align:justify"><b><span lang="EN-US">BE IT FURTHER RESOLVED that the City Clerk and Solicitor work with
the Chief Procurement Officer to develop a process that meets the City’s
privacy obligations under the <i>Municipal Freedom of Information and
Protection of Privacy Act</i> whereby executed contracts are routinely reported
to Council and available to the public. </span></b></p>

<p class="MsoNormal" align="center" style="margin-right:9.0pt;text-align:center"><b><u><span lang="EN-US">MOTION</span></u></b></p>

<p class="MsoNormal" style="margin-right:9.0pt;text-align:justify"><span lang="EN-US">&nbsp;</span></p>

<p class="MsoNormal" style="margin-right:9.0pt;text-align:justify"><span lang="EN-US">Moved by Councillor A. Hubley</span></p>

<p class="MsoNormal" style="margin-right:9.0pt;text-align:justify"><span lang="EN-US">Seconded by Councillor T. Tierney</span></p>

<p class="MsoNormal" style="margin-right:9.0pt;text-align:justify"><span lang="EN-US">&nbsp;</span></p>

<p class="MsoNormal" style="text-align:justify"><b><span lang="EN-GB">WHEREAS the
residents of Kanata South, particularly Bridlewood, have experienced numerous
prolonged power outages over the last several years; and</span></b></p>

<p class="MsoNormal" style="text-align:justify"><b><span lang="EN-GB">&nbsp;</span></b></p>

<p class="MsoNormal" style="text-align:justify"><b><span lang="EN-GB">WHEREAS the
residents of Beacon Hill and Rothwell Heights, have experienced numerous
prolonged power outages over the last four years; and</span></b></p>

<p class="MsoNormal" style="text-align:justify"><b><span lang="EN-GB">&nbsp;</span></b></p>

<p class="MsoNormal" style="text-align:justify"><b><span lang="EN-GB">WHEREAS
officials at Hydro Ottawa have advised that their provincial regulator does not
permit rebates to customers for power outages; and</span></b></p>

<p class="MsoNormal" style="text-align:justify"><b><span lang="EN-GB">&nbsp;</span></b></p>

<p class="MsoNormal" style="text-align:justify"><b><span lang="EN-GB">WHEREAS the
delivery of hydro services is a monopoly that does not allow clients to switch
to another hydro provider when they receive unstable service; and </span></b></p>

<p class="MsoNormal" style="text-align:justify"><b><span lang="EN-GB">&nbsp;</span></b></p>

<p class="MsoNormal" style="margin-right:9.0pt;text-align:justify"><b><span lang="EN-GB">THEREFORE BE IT RESOLVED THAT City Council request that the
provincial hydro regulator and/or the Province make the necessary regulatory
and/or legislative changes that would permit all Hydro utilities, including
Hydro Ottawa, to provide a rebate to customers who have experienced a power interruption
for more than 90 minutes and/or when they experience three or more failures in
a month of 30 minutes or more.</span></b></p>

<p class="MsoNormal" style="margin-right:9.0pt;text-align:justify"><span lang="EN-US">&nbsp;</span></p>

<p class="MsoNormal" style="margin-right:9.0pt;text-align:justify"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126673"><span lang="EN-US">NOTICES OF MOTION (FOR CONSIDERATION
  AT SUBSEQUENT MEETING) </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126675"><span lang="EN-US">MOTION TO INTRODUCE BY-LAWS </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.5pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="558" valign="top" style="width:418.5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="technical4" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
  text-autospace:ideograph-numeric"><a name="Item126811"></a><a href="#" target="pubright" class="SelectableItem" itemid="126811"><span lang="EN-US" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">(Councillors M. Taylor
  and D. Deans)</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.5pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="558" valign="top" style="width:418.5pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal" align="right" style="text-align:right"><a name="Item126677"><b><span lang="EN-US">THREE READINGS </span></b></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:390.6pt;margin-left:68.4pt;border-collapse:collapse">
 <tbody><tr>
  <td width="521" valign="top" style="width:390.6pt;padding:0cm 5.4pt 0cm 5.4pt">
  <p class="Technical40" style="margin-left:36.0pt;text-align:justify;text-indent:
  -18.0pt;punctuation-wrap:hanging;text-autospace:ideograph-numeric ideograph-other"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;font-weight:normal">&nbsp;</span></p>
  <p class="MsoListParagraphCxSpFirst" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">a)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to
  establish certain lands as common and public highway and assume it for public
  use (Dr. Neelin Drive).</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">b)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa</span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"> to amend By-law No. 2008-250 of the
  City of Ottawa to change the zoning of lands known municipally as 99, 101,
  105 and 107 Parkdale Avenue.</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">c)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa</span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"> to amend By-law No. 2008-250 of the
  City of Ottawa to change the zoning of lands known municipally as 2020 Dorima
  Street.</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">d)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to
  establish certain lands as common and public highway and assume it for public
  use (Piazza Circle, Highpointe Crescent, Southham Way).</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">e)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to
  change the name of Cote de Neiges Road, a municipal highway in the City of
  Ottawa, to chemin de la Côte-des-Neiges Road.</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">f)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to
  amend By-law No. 2004-60 to appoint Municipal Law Enforcement Officers in
  accordance with private property parking enforcement.</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">g)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to
  amend By-law No. 2004-276 to prohibit the smoking of non-tobacco products in
  city parks and around facilities.</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">h)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to
  amend By-law No. 2009-200 respecting urban tree conservation.</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">i)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to
  amend By-law No. 2002-4 respecting the conversion of buildings to contain
  three or more dwelling units within Sandy Hill.</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">j)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to
  designate certain lands at 100 to 161 Waterfern Way and 200 to 238 Terrapin
  Terrace as being exempt from Part Lot Control.</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">k)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to
  designate certain lands at 300, 302, 304, 306, 308, 310, 312, 314, 316, 318,
  320, 322, 324, 326, 328, 330 to 350, 352 and 354 Grammond Circle as being
  exempt from Part Lot Control.</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">l)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to
  designate certain lands at 700, 701, 708, 709, 712, 717, 720, 721, 724, 725,
  734, 765, 766, 769, 773, 774, 778, 781, 785, 795 Hazelnut Crescent; 900, 906,
  910, 918, 925, 929, 933, 943 Verbena Crescent; 601, 611, 615, 619, 631, 637,
  641, 653, 659, 663 Willowmere Way as being exempt from Part Lot Control.</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><a name="OLE_LINK6"></a><a name="OLE_LINK5"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">m)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;
  </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;color:black">A
  by-law of the City of Ottawa </span></a><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;
  color:black">to amend By-law Number 2792 of the old Corporation of the City
  of Vanier to change the name of the Vanier Business improvement Area.</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">n)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;color:black">A by-law of the City of
  Ottawa to amend By-law number 2792 of the old Corporation of the City of
  Vanier to expand the Quartier Vanier Merchants Association (BIA).</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">o)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;;color:black">A by-law of the City of
  Ottawa to amend By-law No. 2004-253 respecting shouting and other noises.</span></p>
  <p class="MsoListParagraphCxSpMiddle" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">p)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to
  amend By-law No. 2003-499 respecting fire routes.</span></p>
  <p class="MsoListParagraphCxSpLast" style="margin-top:0cm;margin-right:0cm;
  margin-bottom:10.0pt;margin-left:36.0pt;text-align:justify;text-indent:-18.0pt;
  line-height:115%"><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">q)<span style="font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp; </span></span><span style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">A by-law of the City of Ottawa to
  designate certain lands at 124, 126, 128, 130, 132, 134, 136, 138, 140, 142,
  144, 146, 148, 150, 152, 154, 156 and 158 Maravista Drive as being exempt
  from Part Lot Control.</span></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126678"><span lang="EN-US">CONFIRMATION BY-LAW </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="technical4" style="margin:0cm;margin-bottom:.0001pt;text-align:justify;
  text-autospace:ideograph-numeric"><a name="Item126812"></a><span lang="FR-CA" style="font-family:&quot;Arial&quot;,&quot;sans-serif&quot;">(Conseillers M. Taylor et D. Deans)</span></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="FR-CA">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126679"><span lang="EN-US">INQUIRIES </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:460.7pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="614" valign="top" style="width:460.7pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <h2><a name="Item126680"><span lang="EN-US">ADJOURNMENT </span></a></h2>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="0" cellspacing="0" cellpadding="0" style="width:418.15pt;margin-left:41.4pt;border-collapse:collapse">
 <tbody><tr style="height:15.1pt">
  <td width="558" valign="top" style="width:418.15pt;padding:0cm 5.4pt 0cm 5.4pt;
  height:15.1pt">
  <p class="MsoNormal"><a name="Item126813"></a><a href="#" target="pubright" class="SelectableItem" itemid="126813"><span lang="EN-US">(Councillors M. Taylor and D. Deans)</span></a></p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<span lang="EN-US" style="font-size:12.0pt;font-family:&quot;Arial&quot;,&quot;sans-serif&quot;"><br clear="all" style="page-break-before:always">
</span>

<p class="MsoNormal"><span lang="EN-US">&nbsp;</span></p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="margin-left:68.65pt;background:#F2F2F2;border-collapse:collapse;
 border:none">
 <tbody><tr style="height:59.8pt">
  <td width="442" valign="top" style="width:331.7pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:59.8pt">
  <p class="MsoNormal" align="center" style="text-align:center">&nbsp;</p>
  <p class="MsoNormal" align="center" style="text-align:center">Simultaneous
  interpretation of these proceedings is available.&nbsp; Please speak to the
  attendant at reception.</p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal">&nbsp;</p>

<table class="MsoNormalTable" border="1" cellspacing="0" cellpadding="0" style="margin-left:10.9pt;border-collapse:collapse;border:none">
 <tbody><tr>
  <td width="597" valign="top" style="width:447.95pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt">
  <p class="MsoNormal" align="center" style="margin-top:0cm;margin-right:29.85pt;
  margin-bottom:0cm;margin-left:31.65pt;margin-bottom:.0001pt;text-align:center"><b><span lang="EN-US">NOTICE</span></b></p>
  <p class="MsoNormal" style="margin-top:0cm;margin-right:29.85pt;margin-bottom:
  0cm;margin-left:31.65pt;margin-bottom:.0001pt"><b>&nbsp;</b></p>
  <p class="MsoNormal" style="margin-top:0cm;margin-right:29.85pt;margin-bottom:
  0cm;margin-left:31.65pt;margin-bottom:.0001pt;text-align:justify"><b><i><span lang="EN-GB">In Camera </span></i></b><b><span lang="EN-GB">Items are not subject
  to public discussion or audience<i>.&nbsp; </i></span></b><b><span lang="EN-US">Any
  person has a right to request an independent investigation of the propriety
  of dealing with matters in a closed session.&nbsp;&nbsp; A form requesting such a
  review may be obtained, without charge, from the City’s website or in person
  from the Chair of this meeting.&nbsp; Requests are kept confidential pending any
  report by the Meetings Investigator and are conducted without charge to the
  Requestor.</span></b></p>
  <p class="MsoNormal" style="margin-top:0cm;margin-right:29.85pt;margin-bottom:
  0cm;margin-left:31.65pt;margin-bottom:.0001pt;text-align:justify">&nbsp;</p>
  </td>
 </tr>
</tbody></table>

<p class="MsoNormal">&nbsp;</p>

</div>




        </DIV>
    </SECTION>

    <SECTION class='Details col-xs-3 col-sm-3 col-md-4 col-lg-4 col-xs-offset-9 col-sm-offset-9'>
        <DIV class='affix affix-top' style='width:inherit; padding-right:5%;'>
            <DIV class='panel panel-default' style='width:auto;box-shadow:3px 3px 3px rgba(0,0,0,.33);'>
                <DIV class='VideoPlayerContainer panel panel-default'>
                    <DIV class='VideoPlayer'>
                    </DIV>
                </DIV>

                <DIV class='visible-md visible-lg AgendaItemSelectedDetailsContainer'>
                    <DIV class='panel-body AgendaItemAttachment AgendaItemAttachmentNotSelected'>
                        No Item Selected
                    </DIV>
                    <DIV class='panel panel-default AgendaItemSelectedDetails' style='display:none'>
                        <DIV class='panel-heading'>
                            <SPAN class='SelectedItemCounter'></SPAN> &nbsp; <SPAN class='SelectedItemTitle'></SPAN>
                        </DIV>
                        
                        <DIV class='panel-body'>                    
                            <DIV class='AgendaItemAttachmentsArea'>
                                <DIV class='AgendaItemAttachmentsList'>
                                    <DIV class='AgendaItemAttachment AgendaItemAttachmentNone'>
                                        This item has no attachments
                                    </DIV>
                                    
<DIV class='AgendaItemAttachment AgendaItemAttachment126686' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25561' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='05-12  Joint Ottawa-Gatineau Transit Committee - CC 05-12 - Bloess - Response - Ottawa-Gatineau Transit Committee 2.doc.pdf' target='_blank'>
        <SPAN class='Link'>05-12  Joint Ottawa-Gatineau Transit Committee - CC 05-12 - Bloess - Response - Ottawa-Gatineau Transit Committee 2.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126686' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25561' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='05-12  Joint Ottawa-Gatineau Transit Committee - CC 05-12 - Bloess - Response - Ottawa-Gatineau Transit Committee 2.doc.pdf' target='_blank'>
        <SPAN class='Link'>05-12  Joint Ottawa-Gatineau Transit Committee - CC 05-12 - Bloess - Response - Ottawa-Gatineau Transit Committee 2.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126686' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25561' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='05-12  Joint Ottawa-Gatineau Transit Committee - CC 05-12 - Bloess - Response - Ottawa-Gatineau Transit Committee 2.doc.pdf' target='_blank'>
        <SPAN class='Link'>05-12  Joint Ottawa-Gatineau Transit Committee - CC 05-12 - Bloess - Response - Ottawa-Gatineau Transit Committee 2.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126686' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25561' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='05-12  Joint Ottawa-Gatineau Transit Committee - CC 05-12 - Bloess - Response - Ottawa-Gatineau Transit Committee 2.doc.pdf' target='_blank'>
        <SPAN class='Link'>05-12  Joint Ottawa-Gatineau Transit Committee - CC 05-12 - Bloess - Response - Ottawa-Gatineau Transit Committee 2.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126690' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25562' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Motions Inquiries Status Report.docx.pdf' target='_blank'>
        <SPAN class='Link'>STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Motions Inquiries Status Report.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126690' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25563' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Document 2 Motions and Directions Log.xls.pdf' target='_blank'>
        <SPAN class='Link'>STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Document 2 Motions and Directions Log.xls.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126690' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25564' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Inquiries Log - 2010 - 2014 Term of Council.xls.pdf' target='_blank'>
        <SPAN class='Link'>STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Inquiries Log - 2010 - 2014 Term of Council.xls.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126690' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25562' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Motions Inquiries Status Report.docx.pdf' target='_blank'>
        <SPAN class='Link'>STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Motions Inquiries Status Report.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126690' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25563' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Document 2 Motions and Directions Log.xls.pdf' target='_blank'>
        <SPAN class='Link'>STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Document 2 Motions and Directions Log.xls.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126690' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25564' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Inquiries Log - 2010 - 2014 Term of Council.xls.pdf' target='_blank'>
        <SPAN class='Link'>STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Inquiries Log - 2010 - 2014 Term of Council.xls.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126690' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25562' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Motions Inquiries Status Report.docx.pdf' target='_blank'>
        <SPAN class='Link'>STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Motions Inquiries Status Report.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126690' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25563' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Document 2 Motions and Directions Log.xls.pdf' target='_blank'>
        <SPAN class='Link'>STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Document 2 Motions and Directions Log.xls.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126690' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25564' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Inquiries Log - 2010 - 2014 Term of Council.xls.pdf' target='_blank'>
        <SPAN class='Link'>STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Inquiries Log - 2010 - 2014 Term of Council.xls.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126690' >
    <SPAN class='Sequence'>10</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25562' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Motions Inquiries Status Report.docx.pdf' target='_blank'>
        <SPAN class='Link'>STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Motions Inquiries Status Report.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126690' >
    <SPAN class='Sequence'>11</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25563' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Document 2 Motions and Directions Log.xls.pdf' target='_blank'>
        <SPAN class='Link'>STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Document 2 Motions and Directions Log.xls.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126690' >
    <SPAN class='Sequence'>12</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25564' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Inquiries Log - 2010 - 2014 Term of Council.xls.pdf' target='_blank'>
        <SPAN class='Link'>STATUS UPDATE - COUNCIL INQUIRIES AND MOTIONS FOR  - ACS2012-CMR-CCB-0053 - Inquiries Log - 2010 - 2014 Term of Council.xls.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25565' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 1 - CoverPage-COS-CSS-0009.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 1 - CoverPage-COS-CSS-0009.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25566' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25567' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 Fr - Provincial Budget Impacts.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 Fr - Provincial Budget Impacts.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25568' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 FR Provincial Budget Impacts Annex 1.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 FR Provincial Budget Impacts Annex 1.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25569' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts - Annex 1.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts - Annex 1.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25565' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 1 - CoverPage-COS-CSS-0009.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 1 - CoverPage-COS-CSS-0009.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25566' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25567' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 Fr - Provincial Budget Impacts.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 Fr - Provincial Budget Impacts.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25568' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 FR Provincial Budget Impacts Annex 1.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 FR Provincial Budget Impacts Annex 1.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>10</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25569' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts - Annex 1.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts - Annex 1.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>11</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25565' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 1 - CoverPage-COS-CSS-0009.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 1 - CoverPage-COS-CSS-0009.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>12</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25566' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>13</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25567' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 Fr - Provincial Budget Impacts.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 Fr - Provincial Budget Impacts.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>14</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25568' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 FR Provincial Budget Impacts Annex 1.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 FR Provincial Budget Impacts Annex 1.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>15</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25569' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts - Annex 1.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts - Annex 1.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>16</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25565' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 1 - CoverPage-COS-CSS-0009.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 1 - CoverPage-COS-CSS-0009.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>17</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25566' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>18</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25567' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 Fr - Provincial Budget Impacts.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 Fr - Provincial Budget Impacts.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>19</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25568' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 FR Provincial Budget Impacts Annex 1.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 FR Provincial Budget Impacts Annex 1.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126691' >
    <SPAN class='Sequence'>20</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25569' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts - Annex 1.docx.pdf' target='_blank'>
        <SPAN class='Link'>2012 PROVINCIAL BUDGET IMPACTS FOR THE COMMUNITY A - 01 - ACS2012-COS-CSS-0009 - Provincial Budget Impacts - Annex 1.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126693' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25570' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 2 - CoverPage-CMR-LEG-0008.docx.pdf' target='_blank'>
        <SPAN class='Link'>SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 2 - CoverPage-CMR-LEG-0008.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126693' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25571' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 02 - ACS2012-CMR-LEG-0008 Smoking Water Pipes.docx.pdf' target='_blank'>
        <SPAN class='Link'>SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 02 - ACS2012-CMR-LEG-0008 Smoking Water Pipes.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126693' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25570' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 2 - CoverPage-CMR-LEG-0008.docx.pdf' target='_blank'>
        <SPAN class='Link'>SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 2 - CoverPage-CMR-LEG-0008.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126693' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25571' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 02 - ACS2012-CMR-LEG-0008 Smoking Water Pipes.docx.pdf' target='_blank'>
        <SPAN class='Link'>SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 02 - ACS2012-CMR-LEG-0008 Smoking Water Pipes.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126693' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25570' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 2 - CoverPage-CMR-LEG-0008.docx.pdf' target='_blank'>
        <SPAN class='Link'>SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 2 - CoverPage-CMR-LEG-0008.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126693' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25571' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 02 - ACS2012-CMR-LEG-0008 Smoking Water Pipes.docx.pdf' target='_blank'>
        <SPAN class='Link'>SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 02 - ACS2012-CMR-LEG-0008 Smoking Water Pipes.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126693' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25570' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 2 - CoverPage-CMR-LEG-0008.docx.pdf' target='_blank'>
        <SPAN class='Link'>SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 2 - CoverPage-CMR-LEG-0008.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126693' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25571' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 02 - ACS2012-CMR-LEG-0008 Smoking Water Pipes.docx.pdf' target='_blank'>
        <SPAN class='Link'>SMOKING OF WATER-PIPES AND NON-TOBACCO PRODUCTS ON - 02 - ACS2012-CMR-LEG-0008 Smoking Water Pipes.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25572' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01 -CommitteeReportCoverPage.docx.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01 -CommitteeReportCoverPage.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25573' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01-ACS2012-COS-ESD-0008.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01-ACS2012-COS-ESD-0008.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25574' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01-Document 1 - Regulatory Compliance Report1.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01-Document 1 - Regulatory Compliance Report1.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25575' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01-Document 2 - Communal Sewage  Inspection 20111.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01-Document 2 - Communal Sewage  Inspection 20111.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25572' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01 -CommitteeReportCoverPage.docx.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01 -CommitteeReportCoverPage.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25573' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01-ACS2012-COS-ESD-0008.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01-ACS2012-COS-ESD-0008.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25574' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01-Document 1 - Regulatory Compliance Report1.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01-Document 1 - Regulatory Compliance Report1.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25575' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01-Document 2 - Communal Sewage  Inspection 20111.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01-Document 2 - Communal Sewage  Inspection 20111.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25572' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01 -CommitteeReportCoverPage.docx.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01 -CommitteeReportCoverPage.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>10</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25573' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01-ACS2012-COS-ESD-0008.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01-ACS2012-COS-ESD-0008.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>11</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25574' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01-Document 1 - Regulatory Compliance Report1.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01-Document 1 - Regulatory Compliance Report1.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>12</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25575' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01-Document 2 - Communal Sewage  Inspection 20111.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01-Document 2 - Communal Sewage  Inspection 20111.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>13</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25572' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01 -CommitteeReportCoverPage.docx.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01 -CommitteeReportCoverPage.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>14</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25573' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01-ACS2012-COS-ESD-0008.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01-ACS2012-COS-ESD-0008.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>15</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25574' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01-Document 1 - Regulatory Compliance Report1.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01-Document 1 - Regulatory Compliance Report1.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126695' >
    <SPAN class='Sequence'>16</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25575' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2011 Wastewater Annual Compliance Report - 01-Document 2 - Communal Sewage  Inspection 20111.pdf' target='_blank'>
        <SPAN class='Link'>2011 Wastewater Annual Compliance Report - 01-Document 2 - Communal Sewage  Inspection 20111.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25576' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02 -CommitteeReportCoverPage.docx.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02 -CommitteeReportCoverPage.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25577' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-ACS2012-CMR-ENV-0004-Draft GHG Cover Report.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-ACS2012-CMR-ENV-0004-Draft GHG Cover Report.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25578' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-Document 1-Draft GHG Report - EC 22May1.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-Document 1-Draft GHG Report - EC 22May1.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25579' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-document 2.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-document 2.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25576' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02 -CommitteeReportCoverPage.docx.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02 -CommitteeReportCoverPage.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25577' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-ACS2012-CMR-ENV-0004-Draft GHG Cover Report.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-ACS2012-CMR-ENV-0004-Draft GHG Cover Report.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25578' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-Document 1-Draft GHG Report - EC 22May1.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-Document 1-Draft GHG Report - EC 22May1.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25579' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-document 2.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-document 2.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25576' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02 -CommitteeReportCoverPage.docx.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02 -CommitteeReportCoverPage.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>10</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25577' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-ACS2012-CMR-ENV-0004-Draft GHG Cover Report.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-ACS2012-CMR-ENV-0004-Draft GHG Cover Report.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>11</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25578' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-Document 1-Draft GHG Report - EC 22May1.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-Document 1-Draft GHG Report - EC 22May1.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>12</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25579' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-document 2.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-document 2.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>13</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25576' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02 -CommitteeReportCoverPage.docx.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02 -CommitteeReportCoverPage.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>14</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25577' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-ACS2012-CMR-ENV-0004-Draft GHG Cover Report.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-ACS2012-CMR-ENV-0004-Draft GHG Cover Report.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>15</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25578' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-Document 1-Draft GHG Report - EC 22May1.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-Document 1-Draft GHG Report - EC 22May1.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126696' >
    <SPAN class='Sequence'>16</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25579' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-document 2.pdf' target='_blank'>
        <SPAN class='Link'>2004 AND 2008 GREENHOUSE GAS INVENTORIES REDUCTIO - 02-document 2.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126697' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25580' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING  99 101 105 and 107 Parkdale avenue - 01 - ACS2012-PAI-PGM-0113 Parkdale Ave.pdf' target='_blank'>
        <SPAN class='Link'>ZONING  99 101 105 and 107 Parkdale avenue - 01 - ACS2012-PAI-PGM-0113 Parkdale Ave.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126697' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25580' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING  99 101 105 and 107 Parkdale avenue - 01 - ACS2012-PAI-PGM-0113 Parkdale Ave.pdf' target='_blank'>
        <SPAN class='Link'>ZONING  99 101 105 and 107 Parkdale avenue - 01 - ACS2012-PAI-PGM-0113 Parkdale Ave.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126697' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25580' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING  99 101 105 and 107 Parkdale avenue - 01 - ACS2012-PAI-PGM-0113 Parkdale Ave.pdf' target='_blank'>
        <SPAN class='Link'>ZONING  99 101 105 and 107 Parkdale avenue - 01 - ACS2012-PAI-PGM-0113 Parkdale Ave.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126697' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25580' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING  99 101 105 and 107 Parkdale avenue - 01 - ACS2012-PAI-PGM-0113 Parkdale Ave.pdf' target='_blank'>
        <SPAN class='Link'>ZONING  99 101 105 and 107 Parkdale avenue - 01 - ACS2012-PAI-PGM-0113 Parkdale Ave.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126698' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25581' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING - 2020 Dorima Street - 02 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>ZONING - 2020 Dorima Street - 02 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126698' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25582' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING - 2020 Dorima Street - 02 - ACS2012-PAI-PGM-0101 Dorima Street.pdf' target='_blank'>
        <SPAN class='Link'>ZONING - 2020 Dorima Street - 02 - ACS2012-PAI-PGM-0101 Dorima Street.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126698' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25583' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING - 2020 Dorima Street - 02 - extract of minute.doc.pdf' target='_blank'>
        <SPAN class='Link'>ZONING - 2020 Dorima Street - 02 - extract of minute.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126698' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25581' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING - 2020 Dorima Street - 02 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>ZONING - 2020 Dorima Street - 02 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126698' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25582' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING - 2020 Dorima Street - 02 - ACS2012-PAI-PGM-0101 Dorima Street.pdf' target='_blank'>
        <SPAN class='Link'>ZONING - 2020 Dorima Street - 02 - ACS2012-PAI-PGM-0101 Dorima Street.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126698' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25583' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING - 2020 Dorima Street - 02 - extract of minute.doc.pdf' target='_blank'>
        <SPAN class='Link'>ZONING - 2020 Dorima Street - 02 - extract of minute.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126698' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25581' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING - 2020 Dorima Street - 02 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>ZONING - 2020 Dorima Street - 02 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126698' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25582' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING - 2020 Dorima Street - 02 - ACS2012-PAI-PGM-0101 Dorima Street.pdf' target='_blank'>
        <SPAN class='Link'>ZONING - 2020 Dorima Street - 02 - ACS2012-PAI-PGM-0101 Dorima Street.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126698' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25583' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING - 2020 Dorima Street - 02 - extract of minute.doc.pdf' target='_blank'>
        <SPAN class='Link'>ZONING - 2020 Dorima Street - 02 - extract of minute.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126698' >
    <SPAN class='Sequence'>10</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25581' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING - 2020 Dorima Street - 02 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>ZONING - 2020 Dorima Street - 02 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126698' >
    <SPAN class='Sequence'>11</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25582' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING - 2020 Dorima Street - 02 - ACS2012-PAI-PGM-0101 Dorima Street.pdf' target='_blank'>
        <SPAN class='Link'>ZONING - 2020 Dorima Street - 02 - ACS2012-PAI-PGM-0101 Dorima Street.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126698' >
    <SPAN class='Sequence'>12</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25583' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ZONING - 2020 Dorima Street - 02 - extract of minute.doc.pdf' target='_blank'>
        <SPAN class='Link'>ZONING - 2020 Dorima Street - 02 - extract of minute.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25584' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25585' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 1 - EIS Guidelines_20121.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 1 - EIS Guidelines_20121.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25586' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 2 - EIS Guidelines.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 2 - EIS Guidelines.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25587' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 3 - EIS Guidelines.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 3 - EIS Guidelines.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25588' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 4 - EIS.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 4 - EIS.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25589' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - ACS2012-PAI-PGM-0074 EIS_Guidelines_Review_Final.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - ACS2012-PAI-PGM-0074 EIS_Guidelines_Review_Final.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25584' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25585' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 1 - EIS Guidelines_20121.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 1 - EIS Guidelines_20121.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25586' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 2 - EIS Guidelines.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 2 - EIS Guidelines.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>10</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25587' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 3 - EIS Guidelines.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 3 - EIS Guidelines.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>11</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25588' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 4 - EIS.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 4 - EIS.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>12</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25589' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - ACS2012-PAI-PGM-0074 EIS_Guidelines_Review_Final.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - ACS2012-PAI-PGM-0074 EIS_Guidelines_Review_Final.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>13</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25584' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>14</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25585' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 1 - EIS Guidelines_20121.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 1 - EIS Guidelines_20121.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>15</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25586' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 2 - EIS Guidelines.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 2 - EIS Guidelines.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>16</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25587' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 3 - EIS Guidelines.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 3 - EIS Guidelines.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>17</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25588' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 4 - EIS.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 4 - EIS.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>18</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25589' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - ACS2012-PAI-PGM-0074 EIS_Guidelines_Review_Final.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - ACS2012-PAI-PGM-0074 EIS_Guidelines_Review_Final.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>19</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25584' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>20</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25585' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 1 - EIS Guidelines_20121.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 1 - EIS Guidelines_20121.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>21</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25586' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 2 - EIS Guidelines.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 2 - EIS Guidelines.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>22</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25587' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 3 - EIS Guidelines.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 3 - EIS Guidelines.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>23</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25588' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - Doc 4 - EIS.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - Doc 4 - EIS.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126699' >
    <SPAN class='Sequence'>24</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25589' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='Results of the Environmental Impact Statement Guid - 04 - ACS2012-PAI-PGM-0074 EIS_Guidelines_Review_Final.pdf' target='_blank'>
        <SPAN class='Link'>Results of the Environmental Impact Statement Guid - 04 - ACS2012-PAI-PGM-0074 EIS_Guidelines_Review_Final.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25590' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25591' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - ACS2012-PAI-PGM-0155 - Lansdowne Signage and Wayfinding Plan.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - ACS2012-PAI-PGM-0155 - Lansdowne Signage and Wayfinding Plan.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25592' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - DOC 1 - Signage Wayfinding  Plan REVISED.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - DOC 1 - Signage Wayfinding  Plan REVISED.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25593' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - extract of minute.doc.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - extract of minute.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25590' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25591' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - ACS2012-PAI-PGM-0155 - Lansdowne Signage and Wayfinding Plan.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - ACS2012-PAI-PGM-0155 - Lansdowne Signage and Wayfinding Plan.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25592' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - DOC 1 - Signage Wayfinding  Plan REVISED.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - DOC 1 - Signage Wayfinding  Plan REVISED.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25593' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - extract of minute.doc.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - extract of minute.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25590' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>10</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25591' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - ACS2012-PAI-PGM-0155 - Lansdowne Signage and Wayfinding Plan.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - ACS2012-PAI-PGM-0155 - Lansdowne Signage and Wayfinding Plan.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>11</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25592' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - DOC 1 - Signage Wayfinding  Plan REVISED.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - DOC 1 - Signage Wayfinding  Plan REVISED.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>12</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25593' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - extract of minute.doc.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - extract of minute.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>13</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25590' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>14</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25591' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - ACS2012-PAI-PGM-0155 - Lansdowne Signage and Wayfinding Plan.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - ACS2012-PAI-PGM-0155 - Lansdowne Signage and Wayfinding Plan.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>15</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25592' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - DOC 1 - Signage Wayfinding  Plan REVISED.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - DOC 1 - Signage Wayfinding  Plan REVISED.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126748' >
    <SPAN class='Sequence'>16</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25593' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - extract of minute.doc.pdf' target='_blank'>
        <SPAN class='Link'>LANSDOWNE SIGNAGE AND WAY-FINDING PLAN - 05 - extract of minute.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126797' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25594' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='RECOMMENDED COUNCIL POSITION FOR URBAN BOUNDARY   - 01 - ACS2012-PAI-PGM-0167_Urban Boundary.pdf' target='_blank'>
        <SPAN class='Link'>RECOMMENDED COUNCIL POSITION FOR URBAN BOUNDARY   - 01 - ACS2012-PAI-PGM-0167_Urban Boundary.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126797' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25594' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='RECOMMENDED COUNCIL POSITION FOR URBAN BOUNDARY   - 01 - ACS2012-PAI-PGM-0167_Urban Boundary.pdf' target='_blank'>
        <SPAN class='Link'>RECOMMENDED COUNCIL POSITION FOR URBAN BOUNDARY   - 01 - ACS2012-PAI-PGM-0167_Urban Boundary.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126797' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25594' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='RECOMMENDED COUNCIL POSITION FOR URBAN BOUNDARY   - 01 - ACS2012-PAI-PGM-0167_Urban Boundary.pdf' target='_blank'>
        <SPAN class='Link'>RECOMMENDED COUNCIL POSITION FOR URBAN BOUNDARY   - 01 - ACS2012-PAI-PGM-0167_Urban Boundary.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126797' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25594' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='RECOMMENDED COUNCIL POSITION FOR URBAN BOUNDARY   - 01 - ACS2012-PAI-PGM-0167_Urban Boundary.pdf' target='_blank'>
        <SPAN class='Link'>RECOMMENDED COUNCIL POSITION FOR URBAN BOUNDARY   - 01 - ACS2012-PAI-PGM-0167_Urban Boundary.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126798' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25595' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='URBAN BOUNDARY PHASE 2B WITNESS STATEMENTS - 02 - ACS2012-PAI-PGM-0168_Urban Boundary_Witness Statements.pdf' target='_blank'>
        <SPAN class='Link'>URBAN BOUNDARY PHASE 2B WITNESS STATEMENTS - 02 - ACS2012-PAI-PGM-0168_Urban Boundary_Witness Statements.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126798' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25595' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='URBAN BOUNDARY PHASE 2B WITNESS STATEMENTS - 02 - ACS2012-PAI-PGM-0168_Urban Boundary_Witness Statements.pdf' target='_blank'>
        <SPAN class='Link'>URBAN BOUNDARY PHASE 2B WITNESS STATEMENTS - 02 - ACS2012-PAI-PGM-0168_Urban Boundary_Witness Statements.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126798' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25595' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='URBAN BOUNDARY PHASE 2B WITNESS STATEMENTS - 02 - ACS2012-PAI-PGM-0168_Urban Boundary_Witness Statements.pdf' target='_blank'>
        <SPAN class='Link'>URBAN BOUNDARY PHASE 2B WITNESS STATEMENTS - 02 - ACS2012-PAI-PGM-0168_Urban Boundary_Witness Statements.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126798' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25595' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='URBAN BOUNDARY PHASE 2B WITNESS STATEMENTS - 02 - ACS2012-PAI-PGM-0168_Urban Boundary_Witness Statements.pdf' target='_blank'>
        <SPAN class='Link'>URBAN BOUNDARY PHASE 2B WITNESS STATEMENTS - 02 - ACS2012-PAI-PGM-0168_Urban Boundary_Witness Statements.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126799' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25596' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXTENSION OF ECOPASS PROGRAM - CommitteeReportCoverPage-CMR-OTC-0010.docx.pdf' target='_blank'>
        <SPAN class='Link'>EXTENSION OF ECOPASS PROGRAM - CommitteeReportCoverPage-CMR-OTC-0010.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126799' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25597' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXTENSION OF ECOPASS PROGRAM - ACS2012-CMR-OTC-0010-Extension of ECOPASS program.docx.pdf' target='_blank'>
        <SPAN class='Link'>EXTENSION OF ECOPASS PROGRAM - ACS2012-CMR-OTC-0010-Extension of ECOPASS program.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126799' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25596' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXTENSION OF ECOPASS PROGRAM - CommitteeReportCoverPage-CMR-OTC-0010.docx.pdf' target='_blank'>
        <SPAN class='Link'>EXTENSION OF ECOPASS PROGRAM - CommitteeReportCoverPage-CMR-OTC-0010.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126799' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25597' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXTENSION OF ECOPASS PROGRAM - ACS2012-CMR-OTC-0010-Extension of ECOPASS program.docx.pdf' target='_blank'>
        <SPAN class='Link'>EXTENSION OF ECOPASS PROGRAM - ACS2012-CMR-OTC-0010-Extension of ECOPASS program.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126799' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25596' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXTENSION OF ECOPASS PROGRAM - CommitteeReportCoverPage-CMR-OTC-0010.docx.pdf' target='_blank'>
        <SPAN class='Link'>EXTENSION OF ECOPASS PROGRAM - CommitteeReportCoverPage-CMR-OTC-0010.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126799' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25597' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXTENSION OF ECOPASS PROGRAM - ACS2012-CMR-OTC-0010-Extension of ECOPASS program.docx.pdf' target='_blank'>
        <SPAN class='Link'>EXTENSION OF ECOPASS PROGRAM - ACS2012-CMR-OTC-0010-Extension of ECOPASS program.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126799' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25596' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXTENSION OF ECOPASS PROGRAM - CommitteeReportCoverPage-CMR-OTC-0010.docx.pdf' target='_blank'>
        <SPAN class='Link'>EXTENSION OF ECOPASS PROGRAM - CommitteeReportCoverPage-CMR-OTC-0010.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126799' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25597' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXTENSION OF ECOPASS PROGRAM - ACS2012-CMR-OTC-0010-Extension of ECOPASS program.docx.pdf' target='_blank'>
        <SPAN class='Link'>EXTENSION OF ECOPASS PROGRAM - ACS2012-CMR-OTC-0010-Extension of ECOPASS program.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126800' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25598' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Cover Page ACS2012-PAI-PGM-0132 Western LRT.docx.pdf' target='_blank'>
        <SPAN class='Link'>WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Cover Page ACS2012-PAI-PGM-0132 Western LRT.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126800' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25599' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - 01 - ACS2012-PAI-PGM-0132 Western LRT Corridor EA.docx.pdf' target='_blank'>
        <SPAN class='Link'>WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - 01 - ACS2012-PAI-PGM-0132 Western LRT Corridor EA.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126800' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25600' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126800' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25598' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Cover Page ACS2012-PAI-PGM-0132 Western LRT.docx.pdf' target='_blank'>
        <SPAN class='Link'>WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Cover Page ACS2012-PAI-PGM-0132 Western LRT.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126800' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25599' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - 01 - ACS2012-PAI-PGM-0132 Western LRT Corridor EA.docx.pdf' target='_blank'>
        <SPAN class='Link'>WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - 01 - ACS2012-PAI-PGM-0132 Western LRT Corridor EA.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126800' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25600' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126800' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25598' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Cover Page ACS2012-PAI-PGM-0132 Western LRT.docx.pdf' target='_blank'>
        <SPAN class='Link'>WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Cover Page ACS2012-PAI-PGM-0132 Western LRT.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126800' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25599' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - 01 - ACS2012-PAI-PGM-0132 Western LRT Corridor EA.docx.pdf' target='_blank'>
        <SPAN class='Link'>WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - 01 - ACS2012-PAI-PGM-0132 Western LRT Corridor EA.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126800' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25600' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126800' >
    <SPAN class='Sequence'>10</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25598' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Cover Page ACS2012-PAI-PGM-0132 Western LRT.docx.pdf' target='_blank'>
        <SPAN class='Link'>WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Cover Page ACS2012-PAI-PGM-0132 Western LRT.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126800' >
    <SPAN class='Sequence'>11</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25599' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - 01 - ACS2012-PAI-PGM-0132 Western LRT Corridor EA.docx.pdf' target='_blank'>
        <SPAN class='Link'>WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - 01 - ACS2012-PAI-PGM-0132 Western LRT Corridor EA.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126800' >
    <SPAN class='Sequence'>12</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25600' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Minute Extract.docx.pdf' target='_blank'>
        <SPAN class='Link'>WESTERN LRT CORRIDOR BAYVIEW TO BASELINE PLANNIN - Item 1 Minute Extract.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126801' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25601' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='BUY-OUT OF LEASED LOADERS - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf' target='_blank'>
        <SPAN class='Link'>BUY-OUT OF LEASED LOADERS - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126801' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25602' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='BUY-OUT OF LEASED LOADERS - 03 - ACS2012-COS-PWS-0011 - Buy-out of Leased Loaders.DOCX.pdf' target='_blank'>
        <SPAN class='Link'>BUY-OUT OF LEASED LOADERS - 03 - ACS2012-COS-PWS-0011 - Buy-out of Leased Loaders.DOCX.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126801' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25601' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='BUY-OUT OF LEASED LOADERS - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf' target='_blank'>
        <SPAN class='Link'>BUY-OUT OF LEASED LOADERS - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126801' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25602' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='BUY-OUT OF LEASED LOADERS - 03 - ACS2012-COS-PWS-0011 - Buy-out of Leased Loaders.DOCX.pdf' target='_blank'>
        <SPAN class='Link'>BUY-OUT OF LEASED LOADERS - 03 - ACS2012-COS-PWS-0011 - Buy-out of Leased Loaders.DOCX.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126801' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25601' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='BUY-OUT OF LEASED LOADERS - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf' target='_blank'>
        <SPAN class='Link'>BUY-OUT OF LEASED LOADERS - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126801' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25602' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='BUY-OUT OF LEASED LOADERS - 03 - ACS2012-COS-PWS-0011 - Buy-out of Leased Loaders.DOCX.pdf' target='_blank'>
        <SPAN class='Link'>BUY-OUT OF LEASED LOADERS - 03 - ACS2012-COS-PWS-0011 - Buy-out of Leased Loaders.DOCX.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126801' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25601' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='BUY-OUT OF LEASED LOADERS - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf' target='_blank'>
        <SPAN class='Link'>BUY-OUT OF LEASED LOADERS - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126801' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25602' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='BUY-OUT OF LEASED LOADERS - 03 - ACS2012-COS-PWS-0011 - Buy-out of Leased Loaders.DOCX.pdf' target='_blank'>
        <SPAN class='Link'>BUY-OUT OF LEASED LOADERS - 03 - ACS2012-COS-PWS-0011 - Buy-out of Leased Loaders.DOCX.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126802' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25603' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - Item 5 Cover Page ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf' target='_blank'>
        <SPAN class='Link'>MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - Item 5 Cover Page ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126802' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25604' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - 05 - ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf' target='_blank'>
        <SPAN class='Link'>MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - 05 - ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126802' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25603' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - Item 5 Cover Page ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf' target='_blank'>
        <SPAN class='Link'>MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - Item 5 Cover Page ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126802' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25604' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - 05 - ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf' target='_blank'>
        <SPAN class='Link'>MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - 05 - ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126802' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25603' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - Item 5 Cover Page ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf' target='_blank'>
        <SPAN class='Link'>MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - Item 5 Cover Page ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126802' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25604' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - 05 - ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf' target='_blank'>
        <SPAN class='Link'>MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - 05 - ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126802' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25603' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - Item 5 Cover Page ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf' target='_blank'>
        <SPAN class='Link'>MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - Item 5 Cover Page ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126802' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25604' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - 05 - ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf' target='_blank'>
        <SPAN class='Link'>MANOR PARK WATERMAIN SEWER  ROAD RECONSTRUCT - 05 - ACS2012-CMR-TRC-0010 Manor Park Watermain.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126805' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25605' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126805' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25606' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - ACS2012-PAI-PGM-0149 Regatta Park.pdf' target='_blank'>
        <SPAN class='Link'>FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - ACS2012-PAI-PGM-0149 Regatta Park.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126805' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25605' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126805' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25606' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - ACS2012-PAI-PGM-0149 Regatta Park.pdf' target='_blank'>
        <SPAN class='Link'>FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - ACS2012-PAI-PGM-0149 Regatta Park.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126805' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25605' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126805' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25606' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - ACS2012-PAI-PGM-0149 Regatta Park.pdf' target='_blank'>
        <SPAN class='Link'>FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - ACS2012-PAI-PGM-0149 Regatta Park.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126805' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25605' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126805' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25606' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - ACS2012-PAI-PGM-0149 Regatta Park.pdf' target='_blank'>
        <SPAN class='Link'>FRONT-ENDING AGREEMENT FOR REGATTA PARK IN HALF MO - 03 - ACS2012-PAI-PGM-0149 Regatta Park.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126806' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25607' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ONASSA SPRINGS GATEWAY FEATURE - 06 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>ONASSA SPRINGS GATEWAY FEATURE - 06 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126806' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25608' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ONASSA SPRINGS GATEWAY FEATURE - 06 - ACS2012-CMR-PLC-0004 Onassa Springs.pdf' target='_blank'>
        <SPAN class='Link'>ONASSA SPRINGS GATEWAY FEATURE - 06 - ACS2012-CMR-PLC-0004 Onassa Springs.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126806' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25607' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ONASSA SPRINGS GATEWAY FEATURE - 06 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>ONASSA SPRINGS GATEWAY FEATURE - 06 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126806' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25608' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ONASSA SPRINGS GATEWAY FEATURE - 06 - ACS2012-CMR-PLC-0004 Onassa Springs.pdf' target='_blank'>
        <SPAN class='Link'>ONASSA SPRINGS GATEWAY FEATURE - 06 - ACS2012-CMR-PLC-0004 Onassa Springs.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126806' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25607' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ONASSA SPRINGS GATEWAY FEATURE - 06 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>ONASSA SPRINGS GATEWAY FEATURE - 06 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126806' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25608' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ONASSA SPRINGS GATEWAY FEATURE - 06 - ACS2012-CMR-PLC-0004 Onassa Springs.pdf' target='_blank'>
        <SPAN class='Link'>ONASSA SPRINGS GATEWAY FEATURE - 06 - ACS2012-CMR-PLC-0004 Onassa Springs.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126806' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25607' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ONASSA SPRINGS GATEWAY FEATURE - 06 - CommitteeReportCoverPage_Template_CC.docx.pdf' target='_blank'>
        <SPAN class='Link'>ONASSA SPRINGS GATEWAY FEATURE - 06 - CommitteeReportCoverPage_Template_CC.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126806' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25608' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='ONASSA SPRINGS GATEWAY FEATURE - 06 - ACS2012-CMR-PLC-0004 Onassa Springs.pdf' target='_blank'>
        <SPAN class='Link'>ONASSA SPRINGS GATEWAY FEATURE - 06 - ACS2012-CMR-PLC-0004 Onassa Springs.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126807' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25609' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - CommitteeReportCoverPage.docx.pdf' target='_blank'>
        <SPAN class='Link'>EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - CommitteeReportCoverPage.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126807' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25610' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - ACS2012-CMR-PLC-0011 Parkdale Demo Control.pdf' target='_blank'>
        <SPAN class='Link'>EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - ACS2012-CMR-PLC-0011 Parkdale Demo Control.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126807' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25609' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - CommitteeReportCoverPage.docx.pdf' target='_blank'>
        <SPAN class='Link'>EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - CommitteeReportCoverPage.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126807' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25610' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - ACS2012-CMR-PLC-0011 Parkdale Demo Control.pdf' target='_blank'>
        <SPAN class='Link'>EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - ACS2012-CMR-PLC-0011 Parkdale Demo Control.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126807' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25609' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - CommitteeReportCoverPage.docx.pdf' target='_blank'>
        <SPAN class='Link'>EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - CommitteeReportCoverPage.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126807' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25610' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - ACS2012-CMR-PLC-0011 Parkdale Demo Control.pdf' target='_blank'>
        <SPAN class='Link'>EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - ACS2012-CMR-PLC-0011 Parkdale Demo Control.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126807' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25609' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - CommitteeReportCoverPage.docx.pdf' target='_blank'>
        <SPAN class='Link'>EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - CommitteeReportCoverPage.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126807' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25610' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - ACS2012-CMR-PLC-0011 Parkdale Demo Control.pdf' target='_blank'>
        <SPAN class='Link'>EXEMPTION FROM THE DEMOLITION CONTROL BY-LAW FOR T - 07 - ACS2012-CMR-PLC-0011 Parkdale Demo Control.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126808' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25611' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf' target='_blank'>
        <SPAN class='Link'>HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126808' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25612' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - 02 - ACS2012-PAI-INF-0001 Highway 416 Ownership Transfers.docx.pdf' target='_blank'>
        <SPAN class='Link'>HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - 02 - ACS2012-PAI-INF-0001 Highway 416 Ownership Transfers.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126808' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25611' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf' target='_blank'>
        <SPAN class='Link'>HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126808' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25612' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - 02 - ACS2012-PAI-INF-0001 Highway 416 Ownership Transfers.docx.pdf' target='_blank'>
        <SPAN class='Link'>HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - 02 - ACS2012-PAI-INF-0001 Highway 416 Ownership Transfers.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126808' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25611' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf' target='_blank'>
        <SPAN class='Link'>HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126808' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25612' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - 02 - ACS2012-PAI-INF-0001 Highway 416 Ownership Transfers.docx.pdf' target='_blank'>
        <SPAN class='Link'>HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - 02 - ACS2012-PAI-INF-0001 Highway 416 Ownership Transfers.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126808' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25611' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf' target='_blank'>
        <SPAN class='Link'>HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - Item 2 Cover Page ACS2012-PAI-INF-0001 Highway 416.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126808' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25612' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - 02 - ACS2012-PAI-INF-0001 Highway 416 Ownership Transfers.docx.pdf' target='_blank'>
        <SPAN class='Link'>HIGHWAY 416 - OWNERSHIP TRANSFER OF CEDARVIEW AND  - 02 - ACS2012-PAI-INF-0001 Highway 416 Ownership Transfers.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126809' >
    <SPAN class='Sequence'>1</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25613' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Item 4 Cover Page ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf' target='_blank'>
        <SPAN class='Link'>WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Item 4 Cover Page ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126809' >
    <SPAN class='Sequence'>2</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25614' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - 04 - ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf' target='_blank'>
        <SPAN class='Link'>WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - 04 - ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126809' >
    <SPAN class='Sequence'>3</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25615' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Revised page 50.doc.pdf' target='_blank'>
        <SPAN class='Link'>WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Revised page 50.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126809' >
    <SPAN class='Sequence'>4</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25613' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Item 4 Cover Page ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf' target='_blank'>
        <SPAN class='Link'>WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Item 4 Cover Page ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126809' >
    <SPAN class='Sequence'>5</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25614' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - 04 - ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf' target='_blank'>
        <SPAN class='Link'>WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - 04 - ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126809' >
    <SPAN class='Sequence'>6</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25615' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Revised page 50.doc.pdf' target='_blank'>
        <SPAN class='Link'>WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Revised page 50.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126809' >
    <SPAN class='Sequence'>7</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25613' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Item 4 Cover Page ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf' target='_blank'>
        <SPAN class='Link'>WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Item 4 Cover Page ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126809' >
    <SPAN class='Sequence'>8</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25614' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - 04 - ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf' target='_blank'>
        <SPAN class='Link'>WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - 04 - ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126809' >
    <SPAN class='Sequence'>9</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25615' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Revised page 50.doc.pdf' target='_blank'>
        <SPAN class='Link'>WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Revised page 50.doc.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126809' >
    <SPAN class='Sequence'>10</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25613' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Item 4 Cover Page ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf' target='_blank'>
        <SPAN class='Link'>WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Item 4 Cover Page ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126809' >
    <SPAN class='Sequence'>11</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25614' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - 04 - ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf' target='_blank'>
        <SPAN class='Link'>WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - 04 - ACS2012-CMR-TRC-0007 Waiver of Encroachment By-law.docx.pdf</SPAN>
    </a>
</DIV>
<DIV class='AgendaItemAttachment AgendaItemAttachment126809' >
    <SPAN class='Sequence'>12</SPAN>
    <a class='Link' href='filestream.ashx?documentid=25615' data-toggle='tooltip' data-html='true' data-container='body' data-original-title='WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Revised page 50.doc.pdf' target='_blank'>
        <SPAN class='Link'>WAIVER OF THE ENCROACHMENT BY-LAW 2003-446 TO ALLO - Revised page 50.doc.pdf</SPAN>
    </a>
</DIV>
                                </DIV>
                            </DIV>
                        </DIV>
                    </DIV>
                </DIV>
            </DIV>
        </DIV>
    </SECTION>
</ARTICLE>
<script type='text/javascript'>function SelectItem(AgendaItemId) { document.location.hash = AgendaItemId; }</script>
<script type='text/javascript'></script>
<script type='text/javascript'>$(document).ready(function() {$("[data-toggle='tooltip']").tooltip({placement:'top'});});</script>
            </main>
        </div>
        <!-- Bootstrap Modal -->
        <div id='bootstrapModal' aria-live="polite" aria-hidden="true" class='modal fade in' style='display: none;'>
            <div class='modal-dialog modal-dialog-scrollable'>
                <div class='modal-content'>
                    <div class='modal-header'>
                        <h3 id='bootstrapModalTitle' class='modal-title' style='font-size: 17px'>Title</h3>
                        <button type='button' class='close' data-dismiss='modal'><span aria-hidden='true'>×</span> <span class='sr-only'>close</span></button>
                    </div>
                    <div id='bootstrapModalBody' class='modal-body' style="padding: 0px">
                        <div class='embed-responsive z-depth-1-half' id="modalIframeDiv">
                            <iframe id="modalIframe" title="Share Content Options" class='embed-responsive-item' src='' allowfullscreen></iframe>
                        </div>
                    </div>
                    <div class='modal-footer' id="bootstrapModalFooter" style='margin-top: 0; min-height: 55px;'>
                    </div>
                </div>
            </div>
        </div>

        <footer class="navbar navbar-default navbar-fixed-bottom navbarbg">
            <div class="container text-right">
                <div class="navbar-inner navbar-content-center footeralign">
                    <div class="float-right">
                        
                        <copyright class="poweredBy"><a href="https://escribemeetings.com" target="_blank" id="lnkPoweredBy">Powered by eSCRIBE Software Ltd.</a></copyright>
                        
                    </div>
                </div>
            </div>
        </footer>

        <script type="text/javascript">
            var AgendaSize = parseFloat($(".Agenda *").css('font-size'));
            var TitleSize = parseFloat($(".AgendaHeaderTitle").css('font-size'));
            var MeetingTitle = "City Council - June 27, 2012";
            var itemTitles = { };
            var Sharing = false;
            var AllowComment = "False";
            var PublicCommentSettings = [];
            var LeaveComment = "Leave comment";

            function PrintAgenda() {
                window.print();
            };

            $(".VideoLink").click(function (e) {
                try {
                    $f().pause();
                }
                catch (e) {
                }
            });

            function detailsheight() {
                return $(".Details > div").height();
            };

            function SetDetailsHeight(AgendaItemId) {
                try {
                    if (Window_OnResize) {
                        Window_OnResize();
                    }
                        
                    //For public comment narrow and wide view when resize window
                    $(window).trigger('resize');

                }
                catch (e) {
                }
            }

            function CreateSocialLink(AgendaItemId) {
                var meetingId = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Id").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                var language = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("lang").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                var publicCommentUrl = "PublicComment.aspx?agendaId=" + AgendaItemId + "&meetingId=" + meetingId + "&lang=" + language;
                var allowComment = AllowComment == "True" ? true : false;           
                    
                if(allowComment) {
                    for(i = 0; i < PublicCommentSettings.length; i++) {
                        var setting = PublicCommentSettings[i];
                        if(setting.Id == AgendaItemId) {
                            allowComment = setting.AllowPublicComment;
                            break;
                        }
                    }
                }

                var SocialItems = setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, false);

                $('.SocialIcons').remove();
                $(".hilighted .AgendaItemNavigate").append($("<div class='SocialIcons visible-xs visible-sm'>").append(SocialItems));
                $('.SelectedItemTitle').parent().append(SocialItems);
                $('.SelectedItemTitle').parent().addClass("clearfix");

                //visible-xs visible-sm
                //add the icons under narrow view if not exist
                var iconDiv = $('.AgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemIcons');

                if(iconDiv.length == 0) {
                    iconDiv = $('.AgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemTitle');
                }

                $(setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, true)).insertAfter(iconDiv);
                
                var closedIconDiv = $('.LateClosedAgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemIcons');
                
                if(closedIconDiv.length == 0) {
                    closedIconDiv = $('.LateClosedAgendaItemTitleRow.hilighted > #AgendaItemAgendaItem' + AgendaItemId + 'TitleHeader > .AgendaItemNavigate.indent > .AgendaItemTitle');
                }
                $(setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, true)).insertAfter(closedIconDiv);
                SetDetailsHeight(AgendaItemId);
            }

            function setSelectedItemIcons(allowComment, Sharing, publicCommentUrl, isNarrow) {
                var cssClass = isNarrow ? " class='visible-xs visible-sm' " : "";
                var padding = isNarrow ? "style='padding-top: 5px;'" : "";
                var btnId = isNarrow ? "id='narrow-leave-comment-button'" : "";
                    
                if(allowComment && !Sharing) {
                    var SocialItems = $("<div" + cssClass + ">")
                           .addClass("sharing SocialIcons")
                           .css("float", "right")
                           .append(
                               $("<a class='CommentIcon' aria-label='submit public comment'>")
                                   .attr("href", publicCommentUrl)
                                   .append("<span class='btn btn-primary btn-sm' style='vertical-align:middle;' " + btnId + ">" + LeaveComment + "<span>")
                           );

                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                }
                else if (Sharing && !allowComment) {
                    var SocialItems =
                        $("<div" + cssClass + padding + ">")
                            .addClass("sharing SocialIcons")
                            .css("float", "right")
                            .append(
                                $("<a style='padding-right: 13px;'>")
                                    .attr("href", 'Sharing.aspx?u=' + encodeURIComponent(window.location.href))
                                    .append('<img src="Images/share.PNG" style="height:1em;" alt="This can be shared, click to open the sharing popup." title="Share">')
                            );
                }
                else if (Sharing && allowComment) {
                    var SocialItems = $("<div" + cssClass + ">")
                                .addClass("sharing SocialIcons")
                                .css("float", "right")
                                .append(
                                   $("<a class='CommentIcon' aria-label='submit public comment'>")
                                       .attr("href", publicCommentUrl)
                                       .append("<span class='btn btn-primary btn-sm' style='vertical-align:middle;' " + btnId + ">" + LeaveComment + "<span>"))
                                
                                .append(
                                    $("<a style='padding-right: 19px;width: 6%;padding-top: 5px;padding-left: 5px;'>")
                                        .attr("href", 'Sharing.aspx?u=' + encodeURIComponent(window.location.href))
                                        .append('<img src="Images/share.PNG" style="height:1em;" alt="This can be shared, click to open the sharing popup." title="Share">')
                                );

                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.AgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                    $('.LateClosedAgendaItemTitleRow.hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').removeClass("hasPublicCommentButton");
                    $('.LateClosedAgendaItemTitleRow hilighted > * > .AgendaItemNavigate.indent > .AgendaItemTitle').addClass("hasPublicCommentButton");

                }

                return SocialItems;
            }

            function getParameterByName(name) {
                name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
                var regex = new RegExp('[\\?&]' + name + '=([^&#]*)'),
                results = regex.exec(location.search);
                return results == null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
            }

            function UpdateTitle(AgendaItemId) {
                if (itemTitles[AgendaItemId] != null) {
                    document.title = itemTitles[AgendaItemId] + ' - ' + MeetingTitle;
                }
                else {
                    document.title = MeetingTitle;
                }
            }

            // when selected item has changed update page //
            $(document).on("item:selected", function (e, id, scroll) {
                var selectedTab = decodeURIComponent(window.location.search.replace(new RegExp("^(?:.*[&\\?]" + encodeURIComponent("Tab").replace(/[\.\+\*]/g, "\\$&") + "(?:\\=([^&]*))?)?.*$", "i"), "$1"));
                  
                hilightItem(id);
                CreateSocialLink(id);
                UpdateTitle(id);

                //Replace the Leave Comment button to icon
                var windowWidth = $(window).width();
                $('#narrow-leave-comment-button').html("<span class='las la-comment-alt' style='vertical-align: middle' title='Leave Comment'></span>");
                $('#narrow-leave-comment-button').attr("aria-label", "submit a public comment on this agenda item");
                    
                if (scroll == true) {
                    // scroll item into view //
                    var current = $(".AgendaItemTitleRow.hilighted");

                    if (current.length > 0) {
                        current[0].scrollIntoView();
                    }
                }

                if(selectedTab) {
                    toggleSelectedDetails(id, selectedTab);
                }
                else {
                    toggleSelectedDetails(id, 'attachments');
                }
				var attachmentCounts = $('.AgendaItemPublicCommentList >.OrderedAttachments > .OrderedAttachment > .AgendaItemAttachment' + id).length;											
				$('#selectedTabAgendaAttachmentCount').first().text(' (' + attachmentCounts + ') ');
            });

            function UpdateQuery(parameter, value) {
                var loc = window.location.search;

                if (loc.length == 0) {
                    // no query string //
                    if (value.length > 0) {
                        // add parameter directly to url //
                        return window.location.href + "?" + parameter + "=" + encodeURIComponent(value);
                    }
                }
                else {
                    var found = false;
                    if (loc[0] == '?') {
                        loc = loc.substring(1);
                    }

                    // split up existing query string //
                    var params = loc.split('&');

                    for (var i = 0; i < params.length; i++) {
                        if (params[i].toLowerCase().startsWith(parameter.toLowerCase() + '=')) {
                            found = true;

                            if (value.length > 0) {
                                // set new value //
                                params[i] = parameter + '=' + encodeURIComponent(value);
                            }
                            else {
                                // remove existing value //
                                params[i] = '';
                            }
                        }
                    }

                    if (found == false && value.length > 0) {
                        params.push(parameter + '=' + value);
                    }

                    var qs = '';
                    for (var i = 0; i < params.length; i++) {
                        if (params[i].length > 0) {
                            if (qs.length == 0) {
                                qs = "?" + params[i];
                            }
                            else {
                                qs += "&" + params[i];
                            }
                        }
                    }

                    return window.location.href.replace("?" + loc, qs);
                }

                return window.location.href;
            }

            //$(document).ready(function () {
            //    SelectItem(getParameterByName("Item"), true);
            //});
        </script>

        <style type="text/css">
            /*
                @media Screen {
                    .AgendaItemAttachmentsList {
                        // this max height is causing attachments overlap, if exist the height
                             //max-height:200px;
                    }

                    .AgendaItemAttachmentsArea {
                        overflow:hidden;
                        overflow-y:auto;
                    }
                }
                */
        </style>
    </form>

    


<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" />  

<div id="AgendaItemDetailsModal" class="modal fade">
    <div class="modal-dialog AgendaItemDetailsModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Details</h3>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
            </div>
            <div class="modal-body">
                <div>
                    <div class="inputform">
                        <label>
                            Title
                        </label>
                        <div class="ItemTitle"></div>

                        <label>
                            Description
                        </label>
                        <div class="description"></div>

                        <label>
                            Category
                        </label>
                        <div class="Category"></div>

                        <label>
                            Number
                        </label>
                        <div class="LegislationNumberLabel"></div>

                        <label>Stage</label>
                        <div class="LegislationStageLabel"></div>

                        <label>
                            Department
                        </label>
                        <div id="LegislationDepartmentLabel"></div>

                        <label style="vertical-align: top">
                            Attachments
                        </label>
                        <div style="overflow:hidden">
                            <div>
                                <span id="LegislationDocumentIcon"></span>
                                <a id="LegislationDocumentLink"></a>
                            </div>
                            <div id="LegislationSupportingDocumentsList">
                            </div>
                        </div>
                    </div>
                </div>

                <h4 style="margin-top:0.5em">History</h4>
                <div>
                    <table id="LegislationHistoryTable" class="list dataTable">
                        <thead>
                            <tr>
                                <th id="legislationhistory-index-th" class="leg-no-break tablepadding"></th>
                                <th id="legislationhistory-meetingtype-th" class="leg-no-break tablepadding">Meeting Type</th>
                                <th id="legislationhistory-meetingdate-th" class="leg-no-break tablepadding">Meeting Date</th>
                                <th id="legislationhistory-stage-th" class="leg-no-break tablepadding">Stage</th>
                                <th id="legislationhistory-status-th" class="leg-no-break tablepadding">Status</th>
                                <th id="legislationhistory-number-th" class="leg-no-break tablepadding">Number</th>
                                <th id="legislationhistory-vote-th" class="leg-no-break tablepadding">Vote</th>
                            </tr>
                        </thead>
                        <tbody class="history"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="VoteResultsModal" class="modal fade">
    <div class="modal-dialog VoteResultsModal" style="width: 60%">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Vote Result</h3>
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">×</span> <span class="sr-only">close</span></button>
            </div>
            <div class="modal-body">
                <div class="Text"></div>
                <div class="Banner"></div>
                <div class="Votes"></div>
            </div>
            <div class="modal-footer">
                <div class="dataTables_wrapper" style="margin:auto">
                    <div class="dataTables_paginate paging_simple_numbers">
                        <span>
                            <a class="paginate_button current" aria-controls="table-conflicts-details-list" data-dt-idx="1" tabindex="0">1</a>
                        </span>
                    </div>
                </div> 
            </div>
        </div>
    </div>
</div>
 
<script type="text/javascript">
    function FillVoteResultsDialog(motions, index) {
        var dialog = $("#VoteResultsModal");
        var motion = motions[index];

        // paging //
        {
            var paging = dialog.find(".dataTables_paginate").empty();

            // back links //
            {
                // first link
                var firstlink = $('<a class="paginate_button first">&lt;&lt;</a>')
                    .attr("id", "VoteResultsModal-First")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to First Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", 0);

                // previous link //
                var previouslink = $('<a class="paginate_button previous" "">&lt;</a>')
                    .attr("id", "VoteResultsModal-Previous")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Previous Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", 1);


                if (index == 0) {
                    firstlink.addClass('disabled');
                    firstlink.attr("aria-disabled", "true");

                    previouslink.addClass('disabled');
                    previouslink.attr("aria-disabled", "true");
                }
                else {
                    firstlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, 0);
                        });
                    
                    previouslink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, index-1);
                        });
                }

                paging.append(firstlink);
                paging.append(previouslink);                
            }

            // pages //
            {
                var pages = $("<span>");
                for (var i=0; i<motions.length; i++) {
                    let buttonindex = i;

                    var link = $('<a class="paginate_button">')
                        .attr("aria-controls", "VoteResultsModal")
                        .attr("data-dt-idx", i+2)
                        .attr("tabindex", 0)
                        .text(i+1)
                        .click(function(e) {
                            FillVoteResultsDialog(motions, buttonindex);
                        })

                    if (i == index) {
                        link.addClass("current")
                    }

                    pages.append(link);
                }

                paging.append(pages);
            }

            // forward links //
            {
                // next link 
                var nextlink = $('<a class="paginate_button next">&gt;</a>')
                    .attr("id", "VoteResultsModal-Next")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Next Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", motions.length + 2);

                // last link
                var lastlink = $('<a class="paginate_button last">&gt;&gt;</a>')
                    .attr("id", "VoteResultsModal-Last")
                    .attr("aria-controls", "VoteResultsModal")
                    .attr("aria-label", "Navigate to Last Vote")
                    .attr("tabindex", 0)
                    .attr("data-dt-idx", motions.length + 3);


                if (index == motions.length - 1) {
                    nextlink.addClass('disabled');
                    nextlink.attr("aria-disabled", "true");

                    lastlink.addClass('disabled');
                    lastlink.attr("aria-disabled", "true");
                }
                else {
                    nextlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, index+1);
                        });
                    
                    lastlink
                        .click(function(e) {
                            e.preventDefault();

                            FillVoteResultsDialog(motions, motions.length-1);
                        });
                }

                paging.append(nextlink);
                paging.append(lastlink);
            }
        }


        


        // render motion //

        dialog.find(".Text").text(motion.Text);
                                        
        var banner = dialog.find(".Banner");
        banner.text(motion.BannerText);

        switch (motion.BannerColor) {
            case 'green':
                banner.css("background-color", '#21AE52');
                banner.css("color", 'white');
                break;

            case 'red':
                banner.css("background-color", 'red');
                banner.css("color", 'black');
                break;

            default:
                banner.css("background-color", '');
                banner.css("color", '');
                break;
        }


        dialog.find(".Votes").empty()

        // add votes to dialog //
        var votes = {};
        var voteorder = ["Yes", "No", "Abstain", "Absent"];

        $.each(motion.Votes, function(imv, motionvote) {
            if (!votes.hasOwnProperty(motionvote.Vote)) {
                votes[motionvote.Vote] = [];
            }

            if (voteorder.indexOf(motionvote.Vote) == -1) {
                voteorder.push(motionvote.Vote);
            }

            votes[motionvote.Vote].push(
                $("<span>").text(motionvote.UserName)
            );
        });

        $.each(voteorder, function(iv, vote) {
            var container = $("#VoteContainerTemplate").clone();

            if (votes.hasOwnProperty(vote)) {
                container.find(".VoteHeader .count").text(votes[vote].length);
                container.find(".Voters").append(...(votes[vote]));
            }

            container.find(".VoteHeader .Vote").text(vote);
            dialog.find(".Votes").append(container.children());
        });
    }

    // fix for nested motals //
    $(document).ready(function () {
        $(document).on({
            'show.bs.modal': function () {
                var zIndex = 1040 + (10 * $('.modal:visible').length);
                $(this).css('z-index', zIndex);
                setTimeout(function () { $('.modal-backdrop').not('.modal-stack').css('z-index', zIndex - 1).addClass('modal-stack'); }, 0);
            },
            'hidden.bs.modal': function () {
                if ($('.modal:visible').length > 0) {
                    // restore the modal-open class to the body element, so that scrolling works
                    // properly after de-stacking a modal.
                    setTimeout(function () { $(document.body).addClass('modal-open'); }, 0);
                }
            }
        }, '.modal');
    });
</script>

<style type="text/css">
    /* flex-grid classes */
    .inputform {
	    font-size:1em;
	    display:grid;
	    grid-template-columns:0fr 1fr;
	    grid-gap:10px 10px;
	    align-items:baseline;
    }
			
    @media (max-width: 575px) {
        .inputform {
            grid-template-columns: 1fr;
            grid-gap:0px;
        }

        .inputform > label,
        .inputform > .row > label {
            margin-top:20px;
        }
    }

    .inputform > label,
    .inputform > .row > label {
	    white-space:nowrap;
	    font-size:1em;
	    font-weight:bold;
    }

    .inputform > .row {
	    display:contents;
    }
			
    .inputform > .row > div {
	    grid-column : 1 / 3;
    }
			
    .inputform > .row > label+div {
	    grid-column: 2 / 3;
    }

    .inputform label+div > div+div {
	    margin-top:4px;
    }

    /* modal styles */
    .modal-dialog.AgendaItemDetailsModal {
        max-width: 1000px;
    }

    .AgendaItemDetailsModal .modal-content {
        max-height:90vh;
        overflow:hidden;
    }

    .AgendaItemDetailsModal .modal-content .modal-body {
        overflow-y:auto;
    }

    .AgendaItemDetailsModal .description {
        max-height:10em;
        overflow-y:auto;
    }

    .VoteResultsModal .Text {
        padding: 2px 0 18px;
    }

    .VoteResultsModal .Banner {
        font-weight:bold;
        padding:5px;
        text-align: center;
    }

    .Votes .VoteHeader {
        font-weight: bold;
        text-align: center;
        padding: 10px;
    }

    .Votes .Voters {
        display: grid;
        grid-template-columns: 33% minmax(0, 34%) 33%;
        grid-gap: 10px;
        align-items: baseline;
        text-align: center;
        border: 1px solid #f7f7f7;
    }

    h3.modal-title {
        font-size:17px;
    }

    #LegislationSupportingDocumentsList > div {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    #LegislationHistoryTable td {
        cursor:pointer;
    }

    #LegislationHistoryTable tr.selected td {
        border-top: 1px solid black;
        border-bottom: 1px solid black;
    }

    #LegislationHistoryTable tr.selected > :first-child {
        border-left:1px solid black;
    }

    #LegislationHistoryTable tr.selected > :last-child {
        border-right:1px solid black;
    }
</style>

<div id="VoteContainerTemplate" style="display:none">
    <div>
        <div class="VoteHeader"><span class="Vote"></span> ( <span class="count">0</span> )</div>
        <div class="Voters"></div>
    </div>
</div>

<script type="text/javascript">
    var AgendaItemswithHistory = [];

    $("document").ready(function() {
        // add agenda item history links dynamically to the agenda //
        $.each(AgendaItemswithHistory, function(i, v) {
            // remove old icon //
            $(".AgendaItem" + v + " .AgendaItemIcons").find(".AgendaItemHistoryLink").remove();

            // add icon //
            $(".AgendaItem" + v + " .AgendaItemIcons").append(
                $('<a href="">')
                    .addClass("AgendaItemHistoryLink")
                    .attr("itemid", v)
                    .append('<i class="las la-history"></i>')
            );
        });

        $(".AgendaItemHistoryLink").click(function(e){
            e.preventDefault();

            AgendaItemHistory.Dialog.Open('f743d690-36be-4e25-9bf6-dd8f944d1f2f', $(this).attr("itemid"));
        });
    });
</script>


</body>

</html>

  recorded_at: Tue, 16 Jan 2024 00:42:54 GMT
recorded_with: VCR 6.1.0
